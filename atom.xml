<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-06-16T02:15:39.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>gatling官方文档翻译4</title>
    <link href="http://yoursite.com/2016/06/15/gatling3-1/"/>
    <id>http://yoursite.com/2016/06/15/gatling3-1/</id>
    <published>2016-06-15T09:54:52.000Z</published>
    <updated>2016-06-16T02:15:39.000Z</updated>
    
    <content type="html">&lt;p&gt;第四篇&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://gatling.io/docs/2.2.1/migration_guides/2.0.0-M3a-to-2.0.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://gatling.io/docs/2.2.1/migration_guides/2.0.0-M3a-to-2.0.html&lt;/a&gt;&lt;br&gt;Migrating from 2.0.0-M3a to 2.0&lt;br&gt;Global changes&lt;br&gt;Gatling requires at least JDK7u6&lt;br&gt;As targeting newer JDKs provides bug fixes, speed improvements and opens opportunities for optimization, Gatling now requires at least a JDK7u6 (released almost two years ago already).&lt;/p&gt;
&lt;p&gt;Gatling is now available on Maven Central&lt;br&gt;Gatling releases are now available on Maven Central, and snapshots are deployed on each successful build by Travis CI to Sonatype’s snapshots repository. If you were using Gatling with its Maven plugin, you no longer need to add the Excilys repository in your pom.xml.&lt;/p&gt;
&lt;p&gt;Simulation&lt;br&gt;Necessary imports&lt;br&gt;import bootstrap.&lt;em&gt; and import assertions.&lt;/em&gt; are now unnecessary and have to be removed.&lt;br&gt;import io.gatling.http.Headers.Names.&lt;em&gt; is now unnecessary, headers names are now directly available from HeaderNames.&lt;br&gt;import io.gatling.http.Headers.Values.&lt;/em&gt; is now unnecessary, headers values are now directly available from HeaderValues.&lt;br&gt;Injection DSL&lt;br&gt;ramp(10 users) becomes rampUsers(10)&lt;br&gt;heaviside(10 users) becomes heavideUsers(10)&lt;br&gt;atOnce(10 users) becomes atOnceUsers(10)&lt;br&gt;constantRate(10 usersPerSec) becomes constantUsersPerSec(10)&lt;br&gt;rampRate(10 usersPerSec) becomes rampUsersPerSec(10)&lt;br&gt;split(10 users) becomes splitUsers(10)&lt;br&gt;Core&lt;br&gt;Structure Elements&lt;br&gt;In asLongAs, exitASAP now defaults to true. For more information on the change of behaviour it introduces, see asLongAs documentation.&lt;/p&gt;
&lt;p&gt;Checks&lt;br&gt;whatever has been renamed to optional.&lt;br&gt;transform now no longer takes and returns an Option[T] and takes and returns plain types, but transformOption provides the same functionality as transform did.&lt;br&gt;HTTP&lt;br&gt;Form parameters (for POST requests)&lt;br&gt;Renamed&lt;/p&gt;
&lt;p&gt;Methods for adding form parameters to the request have been renamed:&lt;/p&gt;
&lt;p&gt;param =&amp;gt; formParam&lt;br&gt;multiValuedParam =&amp;gt; multiValuedFormParam&lt;br&gt;Misc&lt;br&gt;requestInfoExtractor and responseInfoExtractor have been merged into a single extraInfoExtractor, which takes a ExtraInfo =&amp;gt; List[Any] function.&lt;br&gt;gatling.http.ahc.useRawUrl configuration parameter was removed, please use disableUrlEncoding instead, as described here.&lt;br&gt;For more information on extraInfoExtractor, please refer to its documentation.&lt;/p&gt;
&lt;p&gt;Logs&lt;br&gt;simulation.log has been redesigned.&lt;/p&gt;
&lt;p&gt;If you wrote your own specific simulation.log parser, you’ll need to migrate it to the new structure.&lt;/p&gt;
&lt;p&gt;Recorder&lt;br&gt;Until now, when setting up the Recorder, you had to setup two ports for the Recorder’s local proxy: one for HTTP, one for HTTPS. This is not needed anymore, as the Recorder handles itself the switch to an HTTPS connection if necessary, and only a single port needs to be specified.&lt;/p&gt;
&lt;p&gt;Maven Plugin&lt;br&gt;The &lt;includes&gt;…&lt;/includes&gt; and &lt;excludes&gt;…&lt;/excludes&gt; configuration options have been removed. Should you want to select a specific simulation to run, you can use the &lt;simulationclass&gt;…&lt;/simulationclass&gt; config option to do so.&lt;/p&gt;
&lt;p&gt;For more information, see the Maven plugin documentation.&lt;/p&gt;
&lt;p&gt;Migrating from 2.0.0-M3a to 2.0&lt;br&gt;从2.0.0-M3a 合并到2.0&lt;/p&gt;
&lt;p&gt;全局改变&lt;br&gt;Gatling  需要至少JDK7u6版本&lt;/p&gt;
&lt;p&gt;因为心得JDKs修复一些问题，速度得到改善，优化了处理，gatling 现在需要至少JDK7u6(2年前已经发布)&lt;/p&gt;
&lt;p&gt;gatling 现在同样在maven cetral 适用&lt;/p&gt;
&lt;p&gt;gatling 现在同样在maven cetral 适用，并且快照都会部署到 Sonatype’s snapshots repository 当每次 Travis ci 构建成功后。如果你使用maven插件版gatling，你不需要添加the Excilys repository 在你的pom.xml中。&lt;/p&gt;
&lt;p&gt;模拟器&lt;br&gt;Necessary imports&lt;br&gt;import bootstrap.&lt;em&gt; and import assertions.&lt;/em&gt; 现在已经不需要并且被移除&lt;br&gt;import io.gatling.http.Headers.Names.&lt;em&gt; 已经不需要， headers names被 HeaderNames代替.&lt;br&gt;import io.gatling.http.Headers.Values.&lt;/em&gt; 已经不需要, headers values 被 HeaderValues代替.&lt;/p&gt;
&lt;p&gt;Injection DSL&lt;br&gt;ramp(10 users) 变为 rampUsers(10)&lt;br&gt;heaviside(10 users) 变为 heavideUsers(10)&lt;br&gt;atOnce(10 users)变为 atOnceUsers(10)&lt;br&gt;constantRate(10 usersPerSec) 变为 constantUsersPerSec(10)&lt;br&gt;rampRate(10 usersPerSec)变为 rampUsersPerSec(10)&lt;br&gt;split(10 users) 变为 splitUsers(10)&lt;br&gt;Core&lt;/p&gt;
&lt;p&gt;Structure Elements&lt;br&gt;结构化组件&lt;/p&gt;
&lt;p&gt;在 asLongAs, exitASAP 默认为trule。&lt;br&gt;有关的行为改变的更多信息介绍,请看asLongAs文档。&lt;/p&gt;
&lt;p&gt;Checks&lt;/p&gt;
&lt;p&gt;whatever 已经被重新命名为 optional.&lt;br&gt;transform now no longer takes and returns an Option[T] and takes and returns plain types, but transformOption provides the same functionality as transform did.&lt;br&gt;transform现在不再需要现在返回一个Option[T],并返回plain类型,但transformOption和transform提供了相同的功能。&lt;br&gt;HTTP&lt;br&gt;Form parameters (关于 POST 请求)&lt;br&gt;重命名&lt;/p&gt;
&lt;p&gt; adding form parameters 方法请求已经被重命名:&lt;/p&gt;
&lt;p&gt;param =&amp;gt; formParam&lt;br&gt;multiValuedParam =&amp;gt; multiValuedFormParam&lt;/p&gt;
&lt;p&gt;Misc&lt;br&gt;requestInfoExtractor 和 responseInfoExtractor 已经合并为 extraInfoExtractor, which takes a ExtraInfo =&amp;gt; List[Any] function.&lt;br&gt;gatling.http.ahc.useRawUrl 配置参数已经被移除, 请用 disableUrlEncoding 代替, 描述如下.&lt;br&gt;更多关于 extraInfoExtractor信息, 请参照这个文档.&lt;/p&gt;
&lt;p&gt;Logs&lt;/p&gt;
&lt;p&gt;simulation.log 已经被重新设计.&lt;/p&gt;
&lt;p&gt;如果你写自己的simulation.log解析器,您需要它迁移到新结构&lt;/p&gt;
&lt;p&gt;Recorder&lt;/p&gt;
&lt;p&gt;Until now, 当你设置 Recorder时, 你必须设置两个端口记录器的当地代理:一个用于HTTP,HTTPS。 这再也不需要了, 因为record处理本身转向一个HTTPS连接如果必要,并且只需要指定一个单独的端口。&lt;/p&gt;
&lt;p&gt;Maven Plugin&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;&amp;lt;includes&amp;gt;...&amp;lt;/includes&amp;gt;&lt;/code&gt; 和 &lt;code&gt;&amp;lt;excludes&amp;gt;...&amp;lt;/excludes&amp;gt;&lt;/code&gt; 配置项 已经被移除. 如果你需要选择一个特殊的模拟运行, 你可以使用 &lt;code&gt;&amp;lt;simulationClass&amp;gt;...&amp;lt;/simulationClass&amp;gt;&lt;/code&gt; 去配置.&lt;/p&gt;
&lt;p&gt;更多的信息, 查阅 Maven plugin 文档.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;第四篇&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://gatling.io/docs/2.2.1/migration_guides/2.0.0-M3a-to-2.0.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://gatling.io
    
    </summary>
    
    
      <category term="gatling" scheme="http://yoursite.com/tags/gatling/"/>
    
  </entry>
  
  <entry>
    <title>gatling官方文档翻译3</title>
    <link href="http://yoursite.com/2016/06/08/gatling3/"/>
    <id>http://yoursite.com/2016/06/08/gatling3/</id>
    <published>2016-06-08T15:22:40.000Z</published>
    <updated>2016-06-14T02:53:29.000Z</updated>
    
    <content type="html">&lt;p&gt;第三篇&lt;br&gt;&lt;a href=&quot;http://gatling.io/docs/2.2.1/migration_guides/1.5.x-to-2.0.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://gatling.io/docs/2.2.1/migration_guides/1.5.x-to-2.0.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Migrating from 1.5.x to 2.0&lt;br&gt;Global changes&lt;br&gt;Gatling requires at least JDK7u6&lt;br&gt;As targeting newer JDKs provides bug fixes, speed improvements and opens opportunities for optimization, Gatling now requires at least a JDK7u6 (released almost two years ago already).&lt;/p&gt;
&lt;p&gt;Scala 2.10&lt;br&gt;Gatling is built with Scala 2.10. If you’re using Scala IDE, make sure you’re using a version compatible with Scala 2.10.&lt;/p&gt;
&lt;p&gt;Gatling is now available on Maven Central&lt;br&gt;Gatling releases are now available on Maven Central, and snapshots are deployed on each successful build by Travis CI to Sonatype’s snapshots repository. If you were using Gatling with its Maven plugin, you no longer need to add the Excilys repository in your pom.xml.&lt;/p&gt;
&lt;p&gt;Package and GroupId changes&lt;br&gt;Gatling’s artifacts groupId and package are now io.gatling. You’ll have to :&lt;/p&gt;
&lt;p&gt;Update your build scripts to change the groupId of Gatling’s dependencies from com.excilys.ebi.gatling to io.gatling&lt;br&gt;Update your simulations to replace the com.excilys.ebi.gatling part in the imports by io.gatling&lt;br&gt;Simulation&lt;br&gt;Necessary imports&lt;br&gt;akka.util.duration classes have been ported to the scala.concurrent.duration package. Simply replace import akka.util.duration.&lt;em&gt; by import scala.concurrent.duration.&lt;/em&gt;.&lt;br&gt;import bootstrap.&lt;em&gt; and import assertions.&lt;/em&gt; are now unnecessary and have to be removed.&lt;br&gt;import com.excilys.ebi.gatling.http.Headers.Names.&lt;em&gt; is now unnecessary, headers names are now directly available from HeaderNames.&lt;br&gt;import com.excilys.ebi.gatling.http.Headers.Values.&lt;/em&gt; is now unnecessary, headers values are now directly available from HeaderValues.&lt;br&gt;Protocols setup&lt;br&gt;Protocols are no longer configured by scenario and are now configured by simulation, using the protocols method.&lt;/p&gt;
&lt;p&gt;A 1.4.x-1.5.x setUp like this one:&lt;/p&gt;
&lt;p&gt;setUp(scn.(…).protocolConfig(httpConfig))&lt;br&gt;would now be with Gatling 2.0:&lt;/p&gt;
&lt;p&gt;setUp(scn.(…)).protocols(httpConfig)&lt;br&gt;Assertions setup&lt;br&gt;The assertThat method has been removed, assertions are now configured using assertions in the same fashion as protocols are, e.g.&lt;/p&gt;
&lt;p&gt;setup(scn.(…).protocolConfig(httpConfig))&lt;/p&gt;
&lt;p&gt;assertThat(global.responseTime.max.lessThan(1000))&lt;br&gt;becomes:&lt;/p&gt;
&lt;p&gt;setup(scn.(…))&lt;br&gt;  .protocols(httpConfig)&lt;br&gt;  .assertions(global.responseTime.max.lessThan(1000)&lt;br&gt;New Injection DSL&lt;br&gt;The users, ramp and delay methods to configure the injection profile for your scenario have been removed in favor of a full-blown dedicated DSL.&lt;/p&gt;
&lt;p&gt;Injection steps are now configured using the inject method available on your configured scenario.&lt;/p&gt;
&lt;p&gt;Migrating users&lt;/p&gt;
&lt;p&gt;// With Gatling 1.5.X&lt;br&gt;setUp(scn.users(10)…)&lt;/p&gt;
&lt;p&gt;// With Gatling 2.0&lt;br&gt;setUp(scn.inject(atOnceUsers(10))…&lt;br&gt;Migrating ramp&lt;/p&gt;
&lt;p&gt;// With Gatling 1.5.X&lt;br&gt;setUp(scn.users(10).ramp(30)…)&lt;/p&gt;
&lt;p&gt;// With Gatling 2.0&lt;br&gt;setUp(scn.inject(rampUsers(10) over (30 seconds))…&lt;br&gt;Migrating delay&lt;/p&gt;
&lt;p&gt;// With Gatling 1.5.X&lt;br&gt;setUp(scn.users(10).delay(5)…)&lt;/p&gt;
&lt;p&gt;// With Gatling 2.0&lt;br&gt;setUp(scn.inject(nothingFor(5 seconds), atOnceUsers(10))…&lt;br&gt;For more information on the new Injection DSL, please consult the Injection DSL reference documentation.&lt;/p&gt;
&lt;p&gt;Core&lt;br&gt;Checks&lt;br&gt;whatever has been renamed to optional.&lt;/p&gt;
&lt;p&gt;Structure Elements&lt;br&gt;The first parameter of foreach is now an Expression (e.g. a Gatling EL string), not the name of the attribute to loop over.&lt;br&gt;For example, if you have a list attribute in the user’s session holding a list of values:&lt;/p&gt;
&lt;p&gt;.foreach(“list”, “elem”) {&lt;br&gt;  …&lt;br&gt;}&lt;br&gt;becomes:&lt;/p&gt;
&lt;p&gt;.foreach(“${list}”, “elem”) {&lt;br&gt;  …&lt;br&gt;}&lt;br&gt;In asLongAs, exitASAP now defaults to true. For more information on the change of behaviour it introduces, see asLongAs documentation.&lt;br&gt;Session&lt;br&gt;Session has been under major refactoring:&lt;/p&gt;
&lt;p&gt;session.get(“foobar”) becomes session(“foobar”)&lt;br&gt;session.getTypedAttribute&lt;a href=&quot;/&amp;quot;foobar&amp;quot;&quot;&gt;T&lt;/a&gt; becomes session(“foobar”).as[T]&lt;br&gt;session.getAttributeAsOption&lt;a href=&quot;/&amp;quot;foobar&amp;quot;&quot;&gt;T&lt;/a&gt; becomes session(“foobar”).asOption[T]&lt;br&gt;session.setAttribute(“foobar”, 1234) becomes session.set(“foobar”, 1234)&lt;br&gt;session.setAttributes(Map(“foo” -&amp;gt; 1, “bar” -&amp;gt; 2) becomes session.setAll(“foo” -&amp;gt; 1, “bar” -&amp;gt; 2)&lt;br&gt;session.removeAttribute(“foobar”) becomes session.remove(“foobar”)&lt;br&gt;session.isAttributeDefined(“foobar”) becomes session.contains(“foobar”)&lt;br&gt;HTTP&lt;br&gt;Protocol&lt;br&gt;HTTP protocol bootstrapper, httpProtocol, has been renamed to http.&lt;/p&gt;
&lt;p&gt;Query parameters&lt;br&gt;Removed&lt;/p&gt;
&lt;p&gt;Versions of queryParam and multivaluedQueryParam that took no other parameters than the key (resolving the value from the session, using the key’s name to find the attribute with the same name) have been removed.&lt;/p&gt;
&lt;p&gt;Modified&lt;/p&gt;
&lt;p&gt;multivaluedQueryParam can now resolve the values directly from the session, using Gatling’s EL.&lt;/p&gt;
&lt;p&gt;Form parameters (for POST requests)&lt;br&gt;Renamed&lt;/p&gt;
&lt;p&gt;Methods for adding form parameters to the request have been renamed:&lt;/p&gt;
&lt;p&gt;param =&amp;gt; formParam&lt;br&gt;multiValuedParam =&amp;gt; multivaluedFormParam&lt;br&gt;Removed&lt;/p&gt;
&lt;p&gt;Versions of queryParam and multivaluedQueryParam that took no other parameters than the key (resolving the value from the session, using the key’s name to find the attribute with the same name) have been removed.&lt;/p&gt;
&lt;p&gt;Modified&lt;/p&gt;
&lt;p&gt;multivaluedFormParam can now resolve the values directly from the session, using Gatling’s EL.&lt;/p&gt;
&lt;p&gt;Request bodies&lt;br&gt;Scalate templates support has been dropped. ElFileBody (see below) is the best suited to replace your existing Scalate templates.&lt;br&gt;The API for setting request bodies on request has changed. Instead of having several methods like body, fileBody and byteArrayBody, there is a now a single method, body(…) in which you set the type of body to send.&lt;br&gt;Migrating .body(body)&lt;/p&gt;
&lt;p&gt;.body(body) has been replaced by .body(StringBody(body)).&lt;/p&gt;
&lt;p&gt;http(“my post request”)&lt;br&gt;  .post(“&lt;a href=&quot;http://www.example.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.example.org&lt;/a&gt;“)&lt;br&gt;  .body(“Look Ma, I’m a request body !”)&lt;br&gt;becomes:&lt;/p&gt;
&lt;p&gt;http(“my post request”)&lt;br&gt;  .post(“&lt;a href=&quot;http://www.example.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.example.org&lt;/a&gt;“)&lt;br&gt;  .body(StringBody(“Look Ma, I’m a request body !”))&lt;br&gt;Migrating .fileBody(filePath)&lt;/p&gt;
&lt;p&gt;.fileBody(filePath) has been replaced by .body(RawFileBody(filePath)).&lt;/p&gt;
&lt;p&gt;http(“my post request”)&lt;br&gt;  .post(“&lt;a href=&quot;http://www.example.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.example.org&lt;/a&gt;“)&lt;br&gt;  .fileBody(“my_upload.xslx”)&lt;br&gt;becomes:&lt;/p&gt;
&lt;p&gt;http(“my post request”)&lt;br&gt;  .post(“&lt;a href=&quot;http://www.example.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.example.org&lt;/a&gt;“)&lt;br&gt;  .body(FileBody(“my_upload.xslx”))&lt;br&gt;Migrating .fileBody(filePath, values)&lt;/p&gt;
&lt;p&gt;.fileBody(filePath, values) has been replaced by .body(ElFileBody(filePath)). values are now directly resolved from the virtual user’s session’s content.&lt;/p&gt;
&lt;p&gt;http(“my post request”)&lt;br&gt;  .post(“&lt;a href=&quot;http://www.example.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.example.org&lt;/a&gt;“)&lt;br&gt;  .fileBody(“my_template.txt”, Map(“userName” -&amp;gt; “user123”)&lt;br&gt;becomes:&lt;/p&gt;
&lt;p&gt;http(“my post request”)&lt;br&gt;  .post(“&lt;a href=&quot;http://www.example.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.example.org&lt;/a&gt;“)&lt;br&gt;  .body(ElFileBody(“my template.txt”))&lt;br&gt;If my template.txt contains:&lt;/p&gt;
&lt;p&gt;Hi, my name is ${userName}&lt;br&gt;and the virtual user’s session has an attribute userName set to user123,&lt;/p&gt;
&lt;p&gt;Then the effectively sent request body would be:&lt;/p&gt;
&lt;p&gt;Hi, my name is user123&lt;br&gt;Migrating .byteArrayBody(byteArray)&lt;/p&gt;
&lt;p&gt;.byteArrayBody(byteArray) has been replaced by .body(ByteArrayBody(bytes)).&lt;/p&gt;
&lt;p&gt;http(“my post request”)&lt;br&gt;  .post(“&lt;a href=&quot;http://www.example.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.example.org&lt;/a&gt;“)&lt;br&gt;  .byteArrayBody(Array(1, 2, 3, 4))&lt;br&gt;becomes:&lt;/p&gt;
&lt;p&gt;http(“my post request”)&lt;br&gt;  .post(“&lt;a href=&quot;http://www.example.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.example.org&lt;/a&gt;“)&lt;br&gt;  .body(ByteArrayBody(Array(1, 2, 3, 4)))&lt;br&gt;For more information, see the Request bodies reference section.&lt;/p&gt;
&lt;p&gt;Misc&lt;br&gt;ExtendedResponse has been renamed into Response.&lt;br&gt;requestInfoExtractor and responseInfoExtractor have been merged into a single extraInfoExtractor, which takes a ExtraInfo =&amp;gt; List[Any] function.&lt;br&gt;For more information on extraInfoExtractor, please refer to its documentation.&lt;/p&gt;
&lt;p&gt;Logs&lt;br&gt;simulation.log has been redesigned.&lt;/p&gt;
&lt;p&gt;If you wrote your own specific simulation.log parser, you’ll need to migrate it to the new structure.&lt;/p&gt;
&lt;p&gt;Recorder&lt;br&gt;Until now, when setting up the Recorder, you had to setup two ports for the Recorder’s local proxy: one for HTTP, one for HTTPS. This is not needed anymore, as the Recorder handles itself the switch to an HTTPS connection if necessary, and only a single port needs to be specified.&lt;/p&gt;
&lt;p&gt;Maven Plugin&lt;br&gt;The &lt;includes&gt;…&lt;/includes&gt; and &lt;excludes&gt;…&lt;/excludes&gt; configuration options have been removed. Should you want to select a specific simulation to run, you can use the &lt;simulationclass&gt;…&lt;/simulationclass&gt; config option to do so.&lt;/p&gt;
&lt;p&gt;For more information, see the Maven plugin documentation.&lt;/p&gt;
&lt;p&gt;从1.5迁移到2.0&lt;/p&gt;
&lt;p&gt;全局变化&lt;br&gt;gatling至少需要JDK7u6&lt;/p&gt;
&lt;p&gt;提供新jdk针对的是bug修复、优化速度和打开优化速度,gatling现在至少需要JDK7u6(大约两年前已经发布)。&lt;br&gt;Scala 2.10&lt;/p&gt;
&lt;p&gt;gatling使用Scala 2.10。如果你使用Scala的IDE,确保您正在使用一个版本能与Scala 2.10兼容。&lt;br&gt;gatling现在可用在Maven中央库&lt;/p&gt;
&lt;p&gt;galtling版本现在可以使用Maven中央,以及快照部署在每个成功构建了 Travis CI Sonatype快照存储库。如果你是使用gatling的Maven插件,您不再需要添加pom.xml Excilys存储库。&lt;/p&gt;
&lt;p&gt;package和GroupId变化&lt;/p&gt;
&lt;p&gt;gatling的groupId和package现在io.gatling组件。&lt;br&gt;你必须:&lt;br&gt;更新您的构建脚本改变从com.excilys.ebi groupId gatling的依赖关系。gatling,io.gatling更新你的模拟来代替com.excilys.ebi。io.gatling&lt;br&gt;更新你的模拟器来代替com.excilys.ebi.io.gatling部分通过引入io.gatling&lt;/p&gt;
&lt;p&gt;akka.util.duration 类 已经移植到 scala.concurrent.duration 包中。简单从 import akka.util.duration.&lt;em&gt; 替换到 import scala.concurrent.duration.&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;import bootstrap.&lt;em&gt; 和 import assertions.&lt;/em&gt; 现在不是必须的，已经被移除.&lt;/p&gt;
&lt;p&gt;import com.excilys.ebi.gatling.http.Headers.Names._ 现在不是必须的, headers 名字 直接使用HeaderNames.&lt;/p&gt;
&lt;p&gt;import com.excilys.ebi.gatling.http.Headers.Values._ 现在不是必须的, headers 值 直接使用HeaderValues.&lt;/p&gt;
&lt;p&gt;协议设置&lt;br&gt;协议已经不再配置场景,现在配置模拟器,使用协议的方法。&lt;/p&gt;
&lt;p&gt;A 1.4.x-1.5.x 设置如下:&lt;/p&gt;
&lt;p&gt;setUp(scn.(…).protocolConfig(httpConfig))&lt;br&gt; Gatling 2.0将会这样设置:&lt;/p&gt;
&lt;p&gt;setUp(scn.(…)).protocols(httpConfig)&lt;/p&gt;
&lt;p&gt;Assertions 设置&lt;/p&gt;
&lt;p&gt;assertThat方法已经被移除，assertions配置使用assertions以相同的方式作为协议.如下&lt;/p&gt;
&lt;p&gt;setup(scn.(…).protocolConfig(httpConfig))&lt;/p&gt;
&lt;p&gt;assertThat(global.responseTime.max.lessThan(1000))&lt;/p&gt;
&lt;p&gt;改变&lt;br&gt;setup(scn.(…))&lt;br&gt;  .protocols(httpConfig)&lt;br&gt;  .assertions(global.responseTime.max.lessThan(1000)&lt;br&gt;新的DSL语言注入&lt;/p&gt;
&lt;p&gt;通过用户、增长和延迟来配置你的场景注入剖面的方法已被拆除,取而代之的是一个完整的专用的DSL。&lt;/p&gt;
&lt;p&gt;注入步骤现在使用注射方法配置可用的配置。&lt;/p&gt;
&lt;p&gt;合并 users&lt;/p&gt;
&lt;p&gt;// With Gatling 1.5.X&lt;br&gt;setUp(scn.users(10)…)&lt;/p&gt;
&lt;p&gt;// With Gatling 2.0&lt;br&gt;setUp(scn.inject(atOnceUsers(10))…&lt;br&gt;合并 ramp&lt;/p&gt;
&lt;p&gt;// With Gatling 1.5.X&lt;br&gt;setUp(scn.users(10).ramp(30)…)&lt;/p&gt;
&lt;p&gt;// With Gatling 2.0&lt;br&gt;setUp(scn.inject(rampUsers(10) over (30 seconds))…&lt;br&gt;合并 delay&lt;/p&gt;
&lt;p&gt;// With Gatling 1.5.X&lt;br&gt;setUp(scn.users(10).delay(5)…)&lt;/p&gt;
&lt;p&gt;// With Gatling 2.0&lt;br&gt;setUp(scn.inject(nothingFor(5 seconds), atOnceUsers(10))…&lt;/p&gt;
&lt;p&gt;新注入的DSL的更多信息,请查阅注入DSL参考文档。&lt;/p&gt;
&lt;p&gt;核心&lt;br&gt;Checks&lt;br&gt;whatever 现在被改名为 optional.&lt;/p&gt;
&lt;p&gt;Structure Elements&lt;/p&gt;
&lt;p&gt;The first parameter of foreach is now an Expression (e.g. a Gatling EL string), not the name of the attribute to loop over.&lt;/p&gt;
&lt;p&gt;foreach现在是一个表达式的第一个参数(如gatling EL string),不是遍历属性的名称。&lt;/p&gt;
&lt;p&gt;For example, if you have a list attribute in the user’s session holding a list of values:&lt;/p&gt;
&lt;p&gt;例如,如果您有一个属性列表在用户的会话持有的值列表:&lt;/p&gt;
&lt;p&gt;.foreach(“list”, “elem”) {&lt;br&gt;  …&lt;br&gt;}&lt;br&gt;变为:&lt;/p&gt;
&lt;p&gt;.foreach(“${list}”, “elem”) {&lt;br&gt;  …&lt;br&gt;}&lt;br&gt;In asLongAs, exitASAP now defaults to true. For more information on the change of behaviour it introduces, see asLongAs documentation.&lt;/p&gt;
&lt;p&gt;在 asLongAs exitASAP 现在默认设置是true.有关的行为改变的更多信息介绍,请看asLongAs文档。&lt;/p&gt;
&lt;p&gt;Session&lt;/p&gt;
&lt;p&gt;会话已经作为主要的重构:&lt;/p&gt;
&lt;p&gt;session.get(“foobar”) becomes session(“foobar”)&lt;br&gt;session.getTypedAttribute&lt;a href=&quot;/&amp;quot;foobar&amp;quot;&quot;&gt;T&lt;/a&gt; becomes session(“foobar”).as[T]&lt;br&gt;session.getAttributeAsOption&lt;a href=&quot;/&amp;quot;foobar&amp;quot;&quot;&gt;T&lt;/a&gt; becomes session(“foobar”).asOption[T]&lt;br&gt;session.setAttribute(“foobar”, 1234) becomes session.set(“foobar”, 1234)&lt;br&gt;session.setAttributes(Map(“foo” -&amp;gt; 1, “bar” -&amp;gt; 2) becomes session.setAll(“foo” -&amp;gt; 1, “bar” -&amp;gt; 2)&lt;br&gt;session.removeAttribute(“foobar”) becomes session.remove(“foobar”)&lt;br&gt;session.isAttributeDefined(“foobar”) becomes session.contains(“foobar”)&lt;/p&gt;
&lt;p&gt;HTTP协议&lt;br&gt;HTTP协议启动加载器、httpProtocol已经更名为HTTP。&lt;br&gt;Query 参数&lt;br&gt;移除&lt;br&gt;版本的queryParam和multivaluedQueryParam,没有其他比的关键参数(解决会话中的值,使用关键的名字找到具有相同名称的属性)已被移除。&lt;/p&gt;
&lt;p&gt;Modified&lt;/p&gt;
&lt;p&gt;multivaluedFormParam现在可以解决直接从会话值,使用gatling的EL。&lt;/p&gt;
&lt;p&gt;Request bodies&lt;/p&gt;
&lt;p&gt;Scalate templates support has been dropped.&lt;br&gt;对Scalate templates 支持已经放弃。&lt;/p&gt;
&lt;p&gt; ElFileBody (如下) 是当前代替Scalate templates最佳方案&lt;/p&gt;
&lt;p&gt;api的请求体的设置意境改变。现在用这几个方法来代替body fileBody byteArrayBody.现在有一个单独的方法。body(…)通过你设置的类型的body来发送。&lt;br&gt;合并 .body(body)&lt;/p&gt;
&lt;p&gt;body(body) 已经被 .body(StringBody(body))代替.&lt;/p&gt;
&lt;p&gt;http(“my post request”)&lt;br&gt;  .post(“&lt;a href=&quot;http://www.example.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.example.org&lt;/a&gt;“)&lt;br&gt;  .body(“Look Ma, I’m a request body !”)&lt;br&gt;变成：&lt;/p&gt;
&lt;p&gt;http(“my post request”)&lt;br&gt;  .post(“&lt;a href=&quot;http://www.example.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.example.org&lt;/a&gt;“)&lt;br&gt;  .body(StringBody(“Look Ma, I’m a request body !”))&lt;/p&gt;
&lt;p&gt;合并 .fileBody(filePath)&lt;/p&gt;
&lt;p&gt;.fileBody(filePath) 被 .body(RawFileBody(filePath))代替.&lt;/p&gt;
&lt;p&gt;http(“my post request”)&lt;br&gt;  .post(“&lt;a href=&quot;http://www.example.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.example.org&lt;/a&gt;“)&lt;br&gt;  .fileBody(“my_upload.xslx”)&lt;br&gt;becomes:&lt;/p&gt;
&lt;p&gt;http(“my post request”)&lt;br&gt;  .post(“&lt;a href=&quot;http://www.example.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.example.org&lt;/a&gt;“)&lt;br&gt;  .body(FileBody(“my_upload.xslx”))&lt;/p&gt;
&lt;p&gt;合并 .fileBody(filePath, values)&lt;/p&gt;
&lt;p&gt;.fileBody(filePath, values) 已经被 .body(ElFileBody(filePath))代替.&lt;br&gt;值现在直接解决虚拟用户会话的内容。&lt;/p&gt;
&lt;p&gt;http(“my post request”)&lt;br&gt;  .post(“&lt;a href=&quot;http://www.example.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.example.org&lt;/a&gt;“)&lt;br&gt;  .fileBody(“my_template.txt”, Map(“userName” -&amp;gt; “user123”)&lt;/p&gt;
&lt;p&gt;变为&lt;/p&gt;
&lt;p&gt;http(“my post request”)&lt;br&gt;  .post(“&lt;a href=&quot;http://www.example.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.example.org&lt;/a&gt;“)&lt;br&gt;  .body(ElFileBody(“my template.txt”))&lt;/p&gt;
&lt;p&gt;如果 template.txt 包含:&lt;/p&gt;
&lt;p&gt;Hi, my name is ${userName}&lt;/p&gt;
&lt;p&gt;和虚拟用户的会话属性的用户名设置为user123,&lt;/p&gt;
&lt;p&gt;然后将发送有效地请求主体:&lt;br&gt;Hi, my name is user123&lt;/p&gt;
&lt;p&gt;合并 .byteArrayBody(byteArray)&lt;/p&gt;
&lt;p&gt;.byteArrayBody(byteArray) 被 .body(ByteArrayBody(bytes))代替.&lt;/p&gt;
&lt;p&gt;http(“my post request”)&lt;br&gt;  .post(“&lt;a href=&quot;http://www.example.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.example.org&lt;/a&gt;“)&lt;br&gt;  .byteArrayBody(Array(1, 2, 3, 4))&lt;/p&gt;
&lt;p&gt;变为：&lt;/p&gt;
&lt;p&gt;http(“my post request”)&lt;br&gt;  .post(“&lt;a href=&quot;http://www.example.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.example.org&lt;/a&gt;“)&lt;br&gt;  .body(ByteArrayBody(Array(1, 2, 3, 4)))&lt;/p&gt;
&lt;p&gt;更多有关信息,请参见请求机构引用部分。&lt;/p&gt;
&lt;p&gt;Misc&lt;br&gt;ExtendedResponse已经重命名为响应。requestInfoExtractor和responseInfoExtractor已经合并成一个单一的extraInfoExtractor,ExtraInfo =&amp;gt; List[Any] function.。&lt;br&gt;在extraInfoExtractor的更多信息,请参阅文档。&lt;/p&gt;
&lt;p&gt;Logs&lt;br&gt;simulation.log 被重新设计。&lt;/p&gt;
&lt;p&gt;If you wrote your own specific simulation.log parser, you’ll need to migrate it to the new structure.&lt;br&gt;如果你写自己的simulation.log解析器,您需要它迁移到新结构&lt;/p&gt;
&lt;p&gt;Recorder&lt;br&gt;录制器&lt;br&gt;Until now, 当你设置 Recorder时, 你必须设置两个端口记录器的当地代理:一个用于HTTP,HTTPS。 这再也不需要了, 因为record处理本身转向一个HTTPS连接如果必要,并且只需要指定一个单独的端口。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;第三篇&lt;br&gt;&lt;a href=&quot;http://gatling.io/docs/2.2.1/migration_guides/1.5.x-to-2.0.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://gatling.io/docs/2.
    
    </summary>
    
    
      <category term="gatling" scheme="http://yoursite.com/tags/gatling/"/>
    
  </entry>
  
  <entry>
    <title>gatling官方文档翻译2</title>
    <link href="http://yoursite.com/2016/06/02/gatling2/"/>
    <id>http://yoursite.com/2016/06/02/gatling2/</id>
    <published>2016-06-02T14:37:03.000Z</published>
    <updated>2016-06-02T15:29:58.000Z</updated>
    
    <content type="html">&lt;p&gt;第二篇&lt;br&gt;&lt;a href=&quot;http://gatling.io/docs/2.2.1/whats_new/2.2.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://gatling.io/docs/2.2.1/whats_new/2.2.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;What’s New in 2.2&lt;br&gt;JDK&lt;br&gt;Gatling now requires JDK8. JVM default tuning uses G1 Garbage Collector, so we strongly advice you use a very up-to-date JDK, not early versions.&lt;/p&gt;
&lt;p&gt;Core&lt;br&gt;Feeder Shuffle&lt;br&gt;You can now shuffle a feeder content before enqueuing its content, see Feeder documentation for more details.&lt;/p&gt;
&lt;p&gt;Assertions&lt;br&gt;Gatling now supports “per-million” assertions, similar to “percent” ones.&lt;/p&gt;
&lt;p&gt;Conditional Checks (since 2.2.1)&lt;br&gt;It’s now possible to only perform a given check when a given condition is met. See Conditional Checks documentation for more details.&lt;/p&gt;
&lt;p&gt;HTTP&lt;br&gt;Native Transport&lt;br&gt;Gatling is now based on Netty 4 that provide an optional native epoll-based NIO re-implementation (different from JDK NIO) which can give better throughput. This option is only available on Linux. See Netty documentation for more details.&lt;/p&gt;
&lt;p&gt;Gatling ships with the required jar, but the option is turned down by default.&lt;/p&gt;
&lt;p&gt;In order to enable it, set gatling.http.ahc.useNativeTransport to true in gatling.conf.&lt;/p&gt;
&lt;p&gt;OpenSSL Support&lt;br&gt;Netty 4 also provides a support for OpenSSL and BoringSSL. See Netty documentation for more details.&lt;/p&gt;
&lt;p&gt;Gatling doesn’t ship the required jar and it depends on your operating system and if you want static or dynamic binding. You’re expected to manually add the suited library to Gatling’s classpath.&lt;/p&gt;
&lt;p&gt;In order to enable it, set gatling.http.ahc.useOpenSsl to true in gatling.conf.&lt;/p&gt;
&lt;p&gt;Forms Support&lt;br&gt;You can now use the form(“cssSelector”).saveAs(“myForm”) check to capture a Map[String, Seq[String]] of all the inputs of an HTML form at once.&lt;/p&gt;
&lt;p&gt;You can then feed them back to a later request. See HTTP request documentation for more details.&lt;/p&gt;
&lt;p&gt;Polling Support&lt;br&gt;Gatling now supports HTTP polling, see HTTP polling documentation for more details.&lt;/p&gt;
&lt;p&gt;Hostname Resolution&lt;br&gt;By default, virtual users now use a shuffled list of the DNS records Gatling gets from the JDK. If you use DNS round-robin, this will balance your virtual users amongst the nodes of a static cluster.&lt;/p&gt;
&lt;p&gt;Alternatively, you can enable perUserNameResolution on the HTTP protocol and have each virtual user perform DNS resolution on its own. This, way, your virtual users would be properly balanced if your cluster grows elastically under load. See HTTP protocol documentation for more details.&lt;/p&gt;
&lt;p&gt;We also support DNS fail-over, meaning that virtual users will try the next DNS record of they couldn’t connect to the first address.&lt;/p&gt;
&lt;p&gt;Hostname Aliasing&lt;br&gt;You can bypass hostname resolution and define aliases in hostNameAliases on the HTTP protocol. See HTTP protocol documentation for more details.&lt;/p&gt;
&lt;p&gt;Local Addresses&lt;br&gt;It’s now possible to pass multiple local addresses to the HTTP protocol in localAddresses. See HTTP protocol documentation for more details.&lt;/p&gt;
&lt;p&gt;Reports&lt;br&gt;JUnit Format Report File&lt;br&gt;Gatling now generates a JUNIt format report file based on the assertions in your simulation. This file is generated as /js/assertions.xml.&lt;/p&gt;
&lt;p&gt;Groups Duration&lt;br&gt;You can switch from Group cumulated response times to duration when generating the reports. See gatling.charting.useGroupDurationMetric option in gatling.conf&lt;/p&gt;
&lt;p&gt;Maven Plugin&lt;br&gt;The Gatling Maven plugin now provides test and integration-test that are bound to the phases of the same name.&lt;/p&gt;
&lt;p&gt;It also now provides a useOldJenkinsJUnitSupport that exposes our JUnit file to Jenkins. At some point, we’ll provide a native support.&lt;/p&gt;
&lt;p&gt;在2.2的新增了那些功能&lt;br&gt;JDK&lt;br&gt;gatling现在需要JDK8支持。 JVM默认调整使用G1垃圾收集器，因此我们强烈建议您升级到最新的JDK，而不是早期版本。&lt;/p&gt;
&lt;p&gt;核心&lt;br&gt;Feeder Shuffle（不会翻…）&lt;br&gt;现在，You can now shuffle a feeder content before enqueuing its content，请参阅Feeder文档了解更多信息。&lt;/p&gt;
&lt;p&gt;断言&lt;br&gt;gatling现在支持“per-million”的断言，类似于“percent”。&lt;/p&gt;
&lt;p&gt;条件检查（自2.2.1）&lt;br&gt;现在只要当给定条件满足时就可以执行一个给定的检查。有关详细信息，请参阅条件检查文档。&lt;/p&gt;
&lt;p&gt;HTTP&lt;br&gt;本机传输&lt;br&gt;虽然我也不知道 epoll-based NIO是什么。。。&lt;/p&gt;
&lt;p&gt;gatling现在基于Netty 4提供一个可选的基于原生的epoll-NIO重新实现（从JDK NIO不同），它可以提供更好的吞吐量。此选项仅在Linux上可用。详见的Netty文档,了解更多信息。&lt;/p&gt;
&lt;p&gt;gatling不需要携带需要的jar包，它取决于你的操作系统,如果你想要静态或动态绑定。你需要手动配置需要的jar的path到gatling的classpath。&lt;br&gt;加特林附带所需的jar,但默认选项是关闭的。&lt;/p&gt;
&lt;p&gt;为了启用它,设置gatling.http.ahc。在gatling.conf useNativeTransport为true。&lt;/p&gt;
&lt;p&gt;为了启用他，需要在gatling.conf里将 gatling.http.ahc.useOpenSsl设置为true。&lt;/p&gt;
&lt;p&gt;表单支持&lt;br&gt;您现在可以使用的form(“cssSelector”).saveAs（“myForm”）检查捕捉Map[String, Seq[String]]在HTML表单的所有输入。&lt;/p&gt;
&lt;p&gt;然后，您可以传递给以后的请求。见HTTP请求的文档了解更多信息。&lt;/p&gt;
&lt;p&gt;轮训支持&lt;br&gt;gatling现在支持HTTP轮询，请参阅HTTP轮询文档了解更多信息。&lt;/p&gt;
&lt;p&gt;hostname解析&lt;br&gt;默认情况下，, virtual users now use a shuffled list of the DNS records Gatling gets from the JDK. If you use DNS round-robin。如果您使用DNS循环，这将你的虚拟用户的静态群集的节点之间平衡。&lt;/p&gt;
&lt;p&gt;或者，也可以在HTTP协议使用perUserNameResolution，并让每个虚拟用户自身进行DNS解析。这样，如果你的集群负载下的弹性增长时，你的虚拟用户会保持良好的平衡。见HTTP协议文档了解更多信息。&lt;/p&gt;
&lt;p&gt;我们也支持DNS故障转移，这意味着虚拟用户会尝试下一个DNS记录，当他们无法连接到第一个地址时。&lt;/p&gt;
&lt;p&gt;别名主机名&lt;br&gt;您可以绕过主机名解析和HTTP协议定义hostNameAliases别名。见HTTP协议文档了解更多信息。&lt;/p&gt;
&lt;p&gt;本地地址&lt;br&gt;它现在可以将多个本地地址传递给在localAddresses HTTP协议。见HTTP协议文档了解更多信息。&lt;/p&gt;
&lt;p&gt;报告&lt;br&gt;JUnit的格式报告文件&lt;br&gt;加特林现在根据你的模拟断言产成一个JUnit格式的报告文件。此文件将生成如/js/assertions.xml。&lt;/p&gt;
&lt;p&gt;group持续时间&lt;br&gt;您可以切换组累计响应时间当时间生成报告时。见gatling.conf gatling.charting.useGroupDurationMetric选项&lt;/p&gt;
&lt;p&gt;Maven插件&lt;br&gt;gatling Maven插件现在提供测试和集成测试绑定到同名的阶段。&lt;/p&gt;
&lt;p&gt;它还现在提供一个公开的JUnit我们的文件，jenkins一useOldJenkinsJUnitSupport。在某些时候，我们将提供原生支持。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;第二篇&lt;br&gt;&lt;a href=&quot;http://gatling.io/docs/2.2.1/whats_new/2.2.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://gatling.io/docs/2.2.1/whats_new/2.
    
    </summary>
    
    
      <category term="gatling" scheme="http://yoursite.com/tags/gatling/"/>
    
  </entry>
  
  <entry>
    <title>gatling官方文档翻译</title>
    <link href="http://yoursite.com/2016/05/31/gatling/"/>
    <id>http://yoursite.com/2016/05/31/gatling/</id>
    <published>2016-05-31T06:56:38.000Z</published>
    <updated>2016-06-02T14:37:44.000Z</updated>
    
    <content type="html">&lt;p&gt;第一篇&lt;/p&gt;
&lt;h2 id=&quot;http_3A//gatling-io/docs/2-2-1/index-html&quot;&gt;&lt;a href=&quot;#http_3A//gatling-io/docs/2-2-1/index-html&quot; class=&quot;headerlink&quot; title=&quot;http://gatling.io/docs/2.2.1/index.html&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://gatling.io/docs/2.2.1/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://gatling.io/docs/2.2.1/index.html&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Gatling is a highly capable load testing tool. It is designed for ease of use, maintainability and high performance.&lt;/p&gt;
&lt;p&gt;Out of the box, Gatling comes with excellent support of the HTTP protocol that makes it a tool of choice for load testing any HTTP server. As the core engine is actually protocol agnostic, it is perfectly possible to implement support for other protocols. For example, Gatling currently also ships JMS support.&lt;/p&gt;
&lt;p&gt;The Quickstart has an overview of the most important concepts, walking you through the setup of a simple scenario for load testing an HTTP server.&lt;/p&gt;
&lt;p&gt;Having scenarios that are defined in code and are resource efficient are the two requirements that motivated us to create Gatling. Based on an expressive DSL, the scenarios are self explanatory. They are easy to maintain and can be kept in a version control system.&lt;/p&gt;
&lt;p&gt;Gatling’s architecture is asynchronous as long as the underlying protocol, such as HTTP, can be implemented in a non blocking way. This kind of architecture lets us implement virtual users as messages instead of dedicated threads, making them very resource cheap. Thus, running thousands of concurrent virtual users is not an issue.&lt;/p&gt;
&lt;p&gt;Migrating from a Previous Version of Gatling&lt;br&gt;If you’re migrating from Gatling 2.1 to Gatling 2.2, please check the dedicated migration guide.&lt;br&gt;Otherwise, please follow the previous migration guides.&lt;br&gt;User’s guide&lt;br&gt;What’s New&lt;br&gt;Migration Guides&lt;br&gt;Quickstart&lt;br&gt;Advanced Tutorial&lt;br&gt;General&lt;br&gt;Session&lt;br&gt;HTTP&lt;br&gt;JMS&lt;br&gt;Realtime monitoring&lt;br&gt;Extensions&lt;br&gt;Cookbook&lt;br&gt;Information for Gatling Developers&lt;br&gt;Project Information&lt;/p&gt;
&lt;p&gt;gatling是一个的高性能压力测试工具。它设计的初衷是易用性、可维护性和高性能。gatling开箱即用的,并且很好的支持HTTP协议,使其成为你测试任何HTTP服务器负载的工具选择之一。作为核心引擎实际上是协议无关,这是完全有可能实现并支持其他协议。例如,gatling目前还对JMS支持。&lt;/p&gt;
&lt;p&gt;快速入门是对于最重要的概念有一个回顾,通过设置一个简单的场景的来对一个HTTP服务器完成负载测试。&lt;br&gt;在代码中定义测试场景和资源利用率两方面的需求,激励我们创造gatling。基于可表述的DSL语言,所以场景易于叙述和理解的。他们很容易维护,并且可以保存在一个版本控制系统。&lt;/p&gt;
&lt;p&gt;gatling的架构和底层协议均采用异步方式设计。比如HTTP、可以利用一个非阻塞的方式来实现。这种架构可以让我们实现虚拟用户的消息而不是专用的线程,让他们成为非常廉价资源。因此,运行数千并发虚拟用户不是什么问题。&lt;/p&gt;
&lt;p&gt;从之前的版本中合并gatling&lt;/p&gt;
&lt;p&gt;如果你从gatling2.1迁移到2.2gatling,请检查专用的合并指南。否则,请安装的合并指南。&lt;/p&gt;
&lt;h3 id=&quot;u7528_u6237_u624B_u518C&quot;&gt;&lt;a href=&quot;#u7528_u6237_u624B_u518C&quot; class=&quot;headerlink&quot; title=&quot;用户手册&quot;&gt;&lt;/a&gt;用户手册&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;新事物&lt;/li&gt;
&lt;li&gt;合并手册&lt;/li&gt;
&lt;li&gt;快速入门&lt;/li&gt;
&lt;li&gt;高级教程&lt;/li&gt;
&lt;li&gt;通用&lt;/li&gt;
&lt;li&gt;消息&lt;/li&gt;
&lt;li&gt;Http&lt;/li&gt;
&lt;li&gt;JMS&lt;/li&gt;
&lt;li&gt;实时监测&lt;/li&gt;
&lt;li&gt;扩展&lt;/li&gt;
&lt;li&gt;cookbook&lt;/li&gt;
&lt;li&gt;gatling 开发者信息&lt;/li&gt;
&lt;li&gt;项目信息        &lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;第一篇&lt;/p&gt;
&lt;h2 id=&quot;http_3A//gatling-io/docs/2-2-1/index-html&quot;&gt;&lt;a href=&quot;#http_3A//gatling-io/docs/2-2-1/index-html&quot; class=&quot;headerlink&quot; title=
    
    </summary>
    
    
      <category term="性能测试" scheme="http://yoursite.com/tags/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>前端测试工具集锦</title>
    <link href="http://yoursite.com/2016/05/24/front-end-tools/"/>
    <id>http://yoursite.com/2016/05/24/front-end-tools/</id>
    <published>2016-05-24T12:47:35.000Z</published>
    <updated>2016-06-14T06:25:23.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;/image/front-end-tools.png&quot; alt=&quot;front-end-tools&quot;&gt;&lt;/p&gt;
&lt;p&gt;总结最近了解的前端测试的相关内容，发现前端这里真的是太庞大了，而且各种测试工具层出不穷，需要总结东西太多了，如有遗漏请大家见谅。&lt;/p&gt;
&lt;h2 id=&quot;TDD_vs_BDD_uFF1A&quot;&gt;&lt;a href=&quot;#TDD_vs_BDD_uFF1A&quot; class=&quot;headerlink&quot; title=&quot;TDD vs BDD：&quot;&gt;&lt;/a&gt;TDD vs BDD：&lt;/h2&gt;&lt;p&gt;TDD与BDD概念不再描述了，直奔主题。&lt;/p&gt;
&lt;h3 id=&quot;u524D_u7AEFBDD_u6D4B_u8BD5_u6846_u67B6&quot;&gt;&lt;a href=&quot;#u524D_u7AEFBDD_u6D4B_u8BD5_u6846_u67B6&quot; class=&quot;headerlink&quot; title=&quot;前端BDD测试框架&quot;&gt;&lt;/a&gt;前端BDD测试框架&lt;/h3&gt;&lt;p&gt;jasmine&lt;br&gt;Installation&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;figcaption&gt;&lt;span&gt;install -g jasmine&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;```&amp;#10;Initializing&amp;#10;To initialize a project for Jasmine&amp;#10;&amp;#10;```jasmine init&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;To seed your project with some examples&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;figcaption&gt;&lt;span&gt;examples&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;```&amp;#10;Usage&amp;#10;To run your test suite&amp;#10;```  jasmine&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight actionscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;describe(&lt;span class=&quot;string&quot;&gt;&quot;A suite&quot;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  it(&lt;span class=&quot;string&quot;&gt;&quot;contains spec with an expectation&quot;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    expect(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;).toBe(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;mocha(推荐,简洁明了)&lt;/p&gt;
&lt;p&gt;Installation&lt;/p&gt;
&lt;p&gt;Install with npm:&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm &lt;span class=&quot;operator&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; -&lt;span class=&quot;keyword&quot;&gt;g&lt;/span&gt; mocha&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Getting Started&lt;br&gt;&lt;figure class=&quot;highlight stata&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install -&lt;span class=&quot;keyword&quot;&gt;g&lt;/span&gt; mocha&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;keyword&quot;&gt;mkdir&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;label&quot;&gt;$EDITOR&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;test&lt;/span&gt;/&lt;span class=&quot;keyword&quot;&gt;test&lt;/span&gt;.js&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;In your editor:&lt;br&gt;&lt;figure class=&quot;highlight lua&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var &lt;span class=&quot;built_in&quot;&gt;assert&lt;/span&gt; = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;chai&#39;&lt;/span&gt;).&lt;span class=&quot;built_in&quot;&gt;assert&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;describe(&lt;span class=&quot;string&quot;&gt;&#39;Array&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  describe(&lt;span class=&quot;string&quot;&gt;&#39;#indexOf()&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    it(&lt;span class=&quot;string&quot;&gt;&#39;should return -1 when the value is not present&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;assert&lt;/span&gt;.equal(-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;].indexOf(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;assert&lt;/span&gt;.equal(-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;].indexOf(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;you need to install chai.&lt;br&gt;Back in the terminal:&lt;br&gt;&lt;figure class=&quot;highlight autohotkey&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;    $  mocha&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      .&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      ✔ &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; test complete (&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;escape&quot;&gt;``&lt;/span&gt;&lt;span class=&quot;escape&quot;&gt;` &lt;/span&gt;     &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;### 前端TDD测试框架&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Qunit&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Installation&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ npm i qunit
&lt;/code&gt;&lt;/pre&gt;&lt;figure class=&quot;highlight livecodeserver&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;API&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;http&lt;/span&gt;://api.qunitjs.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Qunit是一款强大的用于帮助调试代码的，JavaScript单元测试框架。QUnit由jQuery团队成员编写，是jQuery的官方测试套件，不仅如此，QUnit还可以测试任何常规JavaScript代码，甚至可以通过一些像Rhino或者V8这样的JavaScript引擎，测试服务端JavaScript代码。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;可以想象其跟jquery UI及jquery animation等库结局一样，逃脱不了各种被后来的库全方位的比较和“超越”.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;## Unit Testing&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Mocha &amp;amp;&amp;amp; Jasmine&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Mocha 跟 Jasmine 是目前最火的两个单元测试框架，基本上目前前端单元测试就在这两个库之间选了，下面是这两个库的区别，大家可以根据自己的需求进行选择：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mocha：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    优点：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    终端显示友好&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    灵活，扩展性好&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    缺点：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    自身集成度不高（没有断言，spy，异步等），而且经常要配合Chai，Sinon等库使用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    配置相对麻烦一点点&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Jasmine:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    优点：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    集成度高，自带BBD，spy，方便的异步支持(&lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    配置方便&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    缺点：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    相对不太灵活&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    由于各种功能内建，断言方式或者异步等风格相对比较固定&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    没有自带mockserver， 如果需要这功能的得另外配置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;jest&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Jest 是Facebook的一个专门进行Javascript单元测试的工具.它是在Jasmine测试框架上演变开发而来，使用了我们熟知的expect(&lt;span class=&quot;built_in&quot;&gt;value&lt;/span&gt;).toBe(other) 这种断言格式。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;First install Jest &lt;span class=&quot;operator&quot;&gt;with&lt;/span&gt; npm &lt;span class=&quot;keyword&quot;&gt;by&lt;/span&gt; running:&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;pre&gt;&lt;code&gt;npm install --save-dev jest-cli
&lt;/code&gt;&lt;/pre&gt;&lt;figure class=&quot;highlight stata&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Great! Now let&#39;s get started &lt;span class=&quot;keyword&quot;&gt;by&lt;/span&gt; writing a &lt;span class=&quot;keyword&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; a hypothetical &lt;span class=&quot;keyword&quot;&gt;sum&lt;/span&gt;.js &lt;span class=&quot;keyword&quot;&gt;file&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;pre&gt;&lt;code&gt;function sum(a, b) {
  return a + b;
}
module.exports = sum;
&lt;/code&gt;&lt;/pre&gt;&lt;figure class=&quot;highlight livecodeserver&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Create &lt;span class=&quot;operator&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;directory&lt;/span&gt; __tests__/ &lt;span class=&quot;operator&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;sum&lt;/span&gt;-test.js:&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;pre&gt;&lt;code&gt;jest.unmock(&amp;apos;../sum&amp;apos;); // unmock to use the actual implementation of sum
describe(&amp;apos;sum&amp;apos;, () =&amp;gt; {
  it(&amp;apos;adds 1 + 2 to equal 3&amp;apos;, () =&amp;gt; {
    const sum = require(&amp;apos;../sum&amp;apos;);
    expect(sum(1, 2)).toBe(3);
  });
});
&lt;/code&gt;&lt;/pre&gt;&lt;figure class=&quot;highlight dockerfile&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Add&lt;/span&gt; &lt;span class=&quot;bash&quot;&gt;the following to your package.json:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;pre&gt;&lt;code&gt;&amp;quot;scripts&amp;quot;: {
  &amp;quot;test&amp;quot;: &amp;quot;jest&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;figure class=&quot;highlight dockerfile&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Run&lt;/span&gt; &lt;span class=&quot;bash&quot;&gt;npm &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;pre&gt;&lt;code&gt;[PASS] __tests__/sum-test.js (0.010s)
&lt;/code&gt;&lt;/pre&gt;&lt;figure class=&quot;highlight armasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;## 代码覆盖率工具&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;jscover&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;jscover&lt;/span&gt;是一个用来显示JavaScript项目代码覆盖率的工具，它是继承于JSCoverage的，用C++/SpiderMonkey 取代了Java/Rhino&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;但是已经沦落到淘汰的边缘&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;Istanbul&lt;/span&gt;(推荐目前最强大前端代码覆盖率工具)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;Istanbul&lt;/span&gt; 是 JavaScript 程序的代码覆盖率工具,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;能产生 Statements/Lines/Functions/&lt;span class=&quot;keyword&quot;&gt;Branches &lt;/span&gt;等指标报表，并以各种格式导出。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;http:&lt;/span&gt;//qaseven.github.io/&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;01&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;25&lt;/span&gt;/gulp_for_qa/ 这篇文章里已经详细介绍了。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;blanketjs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;blanketjs是一个易于安装,易于配置和易于使用的JavaScript代码覆盖库 &lt;/span&gt;对于nodejs和浏览器都支持的不错。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;NodeJS&lt;/span&gt; (Powered &lt;span class=&quot;keyword&quot;&gt;by &lt;/span&gt;Mocha)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;Install&lt;/span&gt; from npm.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;pre&gt;&lt;code&gt;npm install blanket
&lt;/code&gt;&lt;/pre&gt;&lt;figure class=&quot;highlight armasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;Make&lt;/span&gt; sure you &lt;span class=&quot;preprocessor&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;Blanket &lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;before &lt;/span&gt;you &lt;span class=&quot;preprocessor&quot;&gt;require&lt;/span&gt; or run any of the &lt;span class=&quot;preprocessor&quot;&gt;code&lt;/span&gt; you want covered&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;preprocessor&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;blanket&quot;&lt;/span&gt;)(&amp;#123; &lt;span class=&quot;comment&quot;&gt;/* optional options */&lt;/span&gt; &amp;#125;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;preprocessor&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;src/myscripttotest&quot;&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;Run&lt;/span&gt; your tests using mocha &lt;span class=&quot;keyword&quot;&gt;and &lt;/span&gt;take advantage of the json-cov &lt;span class=&quot;keyword&quot;&gt;and &lt;/span&gt;html-cov reporters to output the coverage results.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;## e2e test&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;ui&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;webdriverio&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;这个库是nodejs的一个webdriver模块(浏览器自动化)。你可以用它写超级简单&lt;span class=&quot;keyword&quot;&gt;Selenium测试在你最喜欢的BDD &lt;/span&gt;/ TDD测试框架中,并且可以在本地运行或在云端中， Sauce Lab,&lt;span class=&quot;keyword&quot;&gt;BrowserStack或TestingBot。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;webdriverio&lt;/span&gt; 支持 Cucumber, Jasmine &lt;span class=&quot;keyword&quot;&gt;and &lt;/span&gt;Mocha+Chai  这些测试框架&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;nightwatch&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;Nightwatch.js&lt;/span&gt; 是一个易于使用的，基于 Node.js 平台的浏览器自动化测试解决方案。它使用强大的 &lt;span class=&quot;keyword&quot;&gt;Selenium &lt;/span&gt;WebDriver API 来在 DOM 元素上执行命令和断言。 语法简单但很强大，使您可以快速编写测试。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;只需使用 Javascript 和 CSS 选择器，不需要初始化其他对象和类，您只需要编写测试规范。内置命令行测试运行器，使您能够运行整体测试，分组测试或者单个测试。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;pre&gt;&lt;code&gt;this.demoTestGoogle = function (browser) {
browser
.url(“http://www.google.com”)
.waitForElementVisible(&amp;apos;body&amp;apos;, 1000)
.setValue(&amp;apos;input[type=text]&amp;apos;, &amp;apos;nightwatch&amp;apos;)
.waitForElementVisible(&amp;apos;button[name=btnG]&amp;apos;, 1000)
.click(&amp;apos;button[name=btnG]&amp;apos;)
.pause(1000)
.assert.containsText(&amp;apos;#main&amp;apos;, &amp;apos;The Night Watch&amp;apos;)
.end();
};
&lt;/code&gt;&lt;/pre&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;当涉及异步调用时，基于链式的队列是个糟糕的模式&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CodeceptJS&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CodeceptJS是一个基于WebDriver全新的端到端测试框架。它们从用户角度简单描述用户操作步骤来编写测试脚本&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;pre&gt;&lt;code&gt;Feature(&amp;apos;CodeceptJS Demonstration&amp;apos;);

Scenario(&amp;apos;test some forms&amp;apos;, (I) =&amp;gt; {
  I.amOnPage(&amp;apos;http://simple-form-bootstrap.plataformatec.com.br/documentation&amp;apos;);
  I.fillField(&amp;apos;Email&amp;apos;, &amp;apos;hello@world.com&amp;apos;);
  I.fillField(&amp;apos;Password&amp;apos;, &amp;apos;123456&amp;apos;);
  I.checkOption(&amp;apos;Active&amp;apos;);
  I.checkOption(&amp;apos;Male&amp;apos;);  
  I.click(&amp;apos;Create User&amp;apos;);
  I.see(&amp;apos;User is valid&amp;apos;);
  I.dontSeeInCurrentUrl(&amp;apos;/documentation&amp;apos;);
});
&lt;/code&gt;&lt;/pre&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;protractor&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(angluarjs亲儿子，由angluarjs核心人物开发的e2e测试工具)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;protractor 是 AngularJS 团队构建的一个端对端的测试运行工具，模拟用户交互，帮助你验证你的Angular应用的运行状况。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Protractor使用Jasmine测试框架来定义测试,当然你也可以选择其他测试框架来定义测试，如mocha。Protractor为不同的页面交互提供一套健壮的API。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;pre&gt;&lt;code&gt;var chai = require(&amp;apos;chai&amp;apos;);
var chaiAsPromised = require(&amp;apos;chai-as-promised&amp;apos;);

chai.use(chaiAsPromised);
var expect = chai.expect;

describe(&amp;apos;angularjs 首页&amp;apos;, function() {
  it(&amp;apos;应该欢迎一个具名的用户&amp;apos;, function() {
    //要求浏览器访问网址http://www.angularjs.org
    browser.get(&amp;apos;http://www.angularjs.org&amp;apos;);

    //找到ng-model名为&amp;apos;youname&amp;apos;的HTML元素，要求浏览器键入名字
    element(by.model(&amp;apos;yourName&amp;apos;)).sendKeys(&amp;apos;tanshuai&amp;apos;);

    var greeting = element(by.binding(&amp;apos;yourName&amp;apos;));

     //取得结果并作断言测试
    expect(greeting.getText()).to.eventually.equal(&amp;apos;Hello tanshuai!&amp;apos;);
  });
});
&lt;/code&gt;&lt;/pre&gt;&lt;figure class=&quot;highlight nginx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;## headless&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;PhantomJS&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PhantomJS 是一个基于 WebKit 的服务器端 JavaScript API。它全面支持web而不需浏览器支持，其快速，原生支持各种Web标准： DOM 处理, CSS 选择器, JSON, Canvas, 和 SVG。 PhantomJS 可以用于 页面自动化 ， 网络监测 ， 网页截屏 ，以及 无界面测试 等。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;很多其它的测试框架都是基于PhantomJS二次开发的,例如下面要讲的casperjs，nightmare&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nightmare&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nightmare是一个高级浏览器自动化依赖库。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;var Nightmare = require(‘nightmare’);&lt;br&gt;    var expect = require(‘chai’).expect; // jshint ignore:line&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;describe(&amp;apos;test yahoo search results&amp;apos;, function() {
it(&amp;apos;should find the nightmare github link first&amp;apos;, function*() {
  var nightmare = Nightmare()
  var link = yield nightmare
    .goto(&amp;apos;http://yahoo.com&amp;apos;)
    .type(&amp;apos;form[action*=&amp;quot;/search&amp;quot;] [name=p]&amp;apos;, &amp;apos;github nightmare&amp;apos;)
    .click(&amp;apos;form[action*=&amp;quot;/search&amp;quot;] [type=submit]&amp;apos;)
    .wait(&amp;apos;#main&amp;apos;)
    .evaluate(function () {
      return document.querySelector(&amp;apos;#main .searchCenterMiddle li a&amp;apos;).href
    })
  expect(link).to.equal(&amp;apos;https://github.com/segmentio/nightmare&amp;apos;);
});
});
&lt;/code&gt;&lt;/pre&gt;&lt;figure class=&quot;highlight erlang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;casperjs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;CasperJS&lt;/span&gt; 是一个开源的导航脚本和测试工具，使用 &lt;span class=&quot;variable&quot;&gt;JavaScript&lt;/span&gt; 基于 &lt;span class=&quot;variable&quot;&gt;PhantomJS&lt;/span&gt; 编写，用于测试 &lt;span class=&quot;variable&quot;&gt;Web&lt;/span&gt; 应用功能，&lt;span class=&quot;variable&quot;&gt;Phantom&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;JS&lt;/span&gt;是一个服务器端的 &lt;span class=&quot;variable&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;API&lt;/span&gt; 的 &lt;span class=&quot;variable&quot;&gt;WebKit&lt;/span&gt;。其支持各种&lt;span class=&quot;variable&quot;&gt;Web&lt;/span&gt;标准： &lt;span class=&quot;variable&quot;&gt;DOM&lt;/span&gt; 处理, &lt;span class=&quot;variable&quot;&gt;CSS&lt;/span&gt; 选择器, &lt;span class=&quot;variable&quot;&gt;JSON&lt;/span&gt;, &lt;span class=&quot;variable&quot;&gt;Canvas&lt;/span&gt;, 和 &lt;span class=&quot;variable&quot;&gt;SVG&lt;/span&gt;.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; var casper = require(‘casper’).create();&lt;br&gt;    var fs = require(‘fs’)&lt;br&gt;    casper.start(‘&lt;a href=&quot;https://github.com/login/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/login/&lt;/a&gt;‘);&lt;br&gt;    casper.waitForSelector(‘input.btn.btn-primary.btn-block’); // wait for the form node to be added&lt;br&gt;    casper.then(function() {&lt;br&gt;      this.fillSelectors(‘.auth-form-body’, {&lt;br&gt;          ‘#login_field’: ‘qileilove’,&lt;br&gt;          ‘#password’: ‘&lt;strong&gt;*&lt;/strong&gt;‘&lt;br&gt;       });&lt;br&gt;      this.click(‘input.btn.btn-primary.btn-block’); // Click the login button instead of submitting the form&lt;br&gt;      this.echo(‘Browser Cookie: ‘ + this.evaluate(function() {&lt;br&gt;           return document.cookie;&lt;br&gt;       }));&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;casper.run(function() {
  var cookies = JSON.stringify((this.page.cookies));
  fs.write(&amp;apos;cookie.txt&amp;apos;, cookies, &amp;apos;w&amp;apos;);
  this.exit();
});
casper.wait(3000); // Wait for ajax form submission
casper.then(function() {
  this.capture(&amp;apos;logged-in.png&amp;apos;)
});

casper.run();
&lt;/code&gt;&lt;/pre&gt;&lt;figure class=&quot;highlight armasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;## visual regression-test&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;backstopjs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;BackstopJS &lt;/span&gt;是自动 CSS 回归测试工具，它通过比较不同视窗大小的 DOM 截图来回应你所测试的 Web 界面。可以识别出两个不同视角上的网页差异。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;pre&gt;&lt;code&gt;&amp;quot;scenarios&amp;quot;: [
  {
    &amp;quot;label&amp;quot;: &amp;quot;My Local Test&amp;quot;,
    &amp;quot;url&amp;quot;: &amp;quot;../../index.html&amp;quot;,
    &amp;quot;hideSelectors&amp;quot;: [],
    &amp;quot;removeSelectors&amp;quot;: [
    ],
    &amp;quot;selectors&amp;quot;: [
      &amp;quot;nav&amp;quot;,
      &amp;quot;.jumbotron&amp;quot;,
      &amp;quot;body .col-md-4:nth-of-type(1)&amp;quot;,
      &amp;quot;body .col-md-4:nth-of-type(2)&amp;quot;,
      &amp;quot;body .col-md-4:nth-of-type(3)&amp;quot;,
      &amp;quot;footer&amp;quot;
    ],
    &amp;quot;readyEvent&amp;quot;: null,
    &amp;quot;delay&amp;quot;: 0,
    &amp;quot;onReadyScript&amp;quot;: null,
    &amp;quot;onBeforeScript&amp;quot;: null
  }
],
&lt;/code&gt;&lt;/pre&gt;&lt;figure class=&quot;highlight http&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;vim&quot;&gt;	viff&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  咱们公司的 基于selenium的，已经废了。。。 &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;年多没更新了&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	success&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Succss &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;command&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt; tool built &lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;find&lt;/span&gt; image-based differences between website updates. Succss relies &lt;span class=&quot;keyword&quot;&gt;on&lt;/span&gt; npm &lt;span class=&quot;built_in&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; installed globally.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    http&lt;span class=&quot;variable&quot;&gt;s:&lt;/span&gt;//github.&lt;span class=&quot;keyword&quot;&gt;com&lt;/span&gt;/B2F/Succss&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  也一年没更新了..&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	phantomcss&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PhantomCSS 是 CSS 回归测试工具。一个通过 PhantomJS 或者 SlimerJS 和 Resemble.js 进行自动视觉回归测试的 CasperJS 模块。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;pre&gt;&lt;code&gt;casper.
    start( url ).
    then(function(){        
// do something
        casper.click(&amp;apos;button#open-dialog&amp;apos;);        
// Take a screenshot of the UI component
        phantomcss.screenshot(&amp;apos;#the-dialog&amp;apos;, &amp;apos;a screenshot of my dialog&amp;apos;);

    });
&lt;/code&gt;&lt;/pre&gt;&lt;figure class=&quot;highlight vala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;##JavaScript验证工具&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;eslint&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;jshint&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;jslint&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;三者比较的文章&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;https:&lt;span class=&quot;comment&quot;&gt;//www.sitepoint.com/comparison-javascript-linting-tools/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;## 前端mock工具&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Mock.js&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; Mockjs是个能够拦截页面ajax请求并模拟返回数据的小工具，借助Mockjs，前端开发中在后台测试接口还没有给的时候就可以自己拦截请求模拟数据进行愉快的开发了，所以只要制定好了协议，前后端分离开发的成本可以降到基本为&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;，也不需要联调工具了。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sinon.js&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;为Javascript提供独立的spies，stubs和mocks。没有任何依赖，可以与任何单元测试框架协同工作。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;## api测试工具&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SuperTest&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;基于SuperAgent ，提供对HTTP测试的高度抽象.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;能嵌入各类测试框架，提供语义良好的断言.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;pre&gt;&lt;code&gt;var app = require(&amp;apos;../app&amp;apos;);
var request = require(&amp;apos;supertest&amp;apos;);

describe(&amp;apos;router testing&amp;apos;, function () {
    it(&amp;apos;site root response&amp;apos;, function (done) {
        request(app)
            .get(&amp;apos;/&amp;apos;)
            .expect(&amp;apos;Content-Type&amp;apos;, &amp;apos;text/html; charset=utf-8&amp;apos;)
            .expect(200)
            .end(function(err, res){
                if (err) throw err;
                done();
            });
    });
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;```&lt;br&gt;利用Mocha + Chai + SuperTest就可以搭建一套 前端rest－api测试框架&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/image/front-end-tools.png&quot; alt=&quot;front-end-tools&quot;&gt;&lt;/p&gt;
&lt;p&gt;总结最近了解的前端测试的相关内容，发现前端这里真的是太庞大了，而且各种测试工具层出不穷，需要总结东西太多了，如有遗漏请大家见谅。&lt;/p&gt;

    
    </summary>
    
    
      <category term="前端测试" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>appium并发测试</title>
    <link href="http://yoursite.com/2016/05/05/appium/"/>
    <id>http://yoursite.com/2016/05/05/appium/</id>
    <published>2016-05-05T05:53:59.000Z</published>
    <updated>2016-05-24T13:05:42.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;appium__u4ECB_u7ECD&quot;&gt;&lt;a href=&quot;#appium__u4ECB_u7ECD&quot; class=&quot;headerlink&quot; title=&quot;appium 介绍&quot;&gt;&lt;/a&gt;appium 介绍&lt;/h2&gt;&lt;p&gt;Appium 是一个开源的，跨平台的自动化测试工具。 它支持模拟器（iOS，FirefoxOS，Android）和真机（iOS， Android， FirefoxOS）上的原生应用，混合应用和移动 web 应用。&lt;/p&gt;
&lt;h2 id=&quot;appium__u5DE5_u4F5C_u539F_u7406&quot;&gt;&lt;a href=&quot;#appium__u5DE5_u4F5C_u539F_u7406&quot; class=&quot;headerlink&quot; title=&quot;appium 工作原理&quot;&gt;&lt;/a&gt;appium 工作原理&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/image/mobile-test-automation-using-appium-ios-android.jpg&quot; alt=&quot;appium&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;Android&quot;&gt;&lt;a href=&quot;#Android&quot; class=&quot;headerlink&quot; title=&quot;Android&quot;&gt;&lt;/a&gt;Android&lt;/h3&gt;&lt;p&gt;在Android端，appium基于WebDriver协议，利用Bootstrap.jar，最后通过调⽤用UiAutomator的命令，实现App的自动化测试。&lt;/p&gt;
&lt;p&gt;UiAutomator测试框架是Android SDK自带的App UI自动化测试Java库。&lt;/p&gt;
&lt;p&gt;另外由于UiAutomator对H5的支持有限，appium引入了chromedriver以及safaridriver等来实现基于H5的自动化。&lt;/p&gt;
&lt;h4 id=&quot;appium__u5728android_u7AEF_u5DE5_u4F5C_u6D41&quot;&gt;&lt;a href=&quot;#appium__u5728android_u7AEF_u5DE5_u4F5C_u6D41&quot; class=&quot;headerlink&quot; title=&quot;appium 在android端工作流&quot;&gt;&lt;/a&gt;appium 在android端工作流&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;client端也就是我们 test script是我们的webdriver测试脚本。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;中间是起的Appium的服务，Appium在服务端起了一个Server（4723端口），跟selenium&lt;br&gt;Webdriver测试框架类似， Appium⽀持标准的WebDriver JSONWireProtocol。在这里提供它提供了一套REST的接口,Appium Server接收web driver client标准rest请求，解析请求内容，调⽤用对应的框架响应操作。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;appium server会把请求转发给中间件Bootstrap.jar ，它是用java写的，安装在手机上.&lt;br&gt;Bootstrap监听4724端口并接收appium 的命令，最终通过调⽤用UiAutomator的命令来实现。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;最后Bootstrap将执行的结果返回给appium server。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;appium server再将结果返回给 appium client。&lt;/p&gt;
&lt;h3 id=&quot;ios&quot;&gt;&lt;a href=&quot;#ios&quot; class=&quot;headerlink&quot; title=&quot;ios&quot;&gt;&lt;/a&gt;ios&lt;/h3&gt;&lt;p&gt;在IOS端，appium同样使⽤WebDriver的一套协议。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;与Android端测试框架不同的是，appium ios封装了apple的 Instruments框架，主要用了Instrument里的UI Automation（Apple的⾃自动化测试框架），然后在设备中注⼊入bootstrap.js进⾏行监听。&lt;/p&gt;
&lt;h4 id=&quot;appium__u5728ios_u7AEF_u5DE5_u4F5C_u6D41&quot;&gt;&lt;a href=&quot;#appium__u5728ios_u7AEF_u5DE5_u4F5C_u6D41&quot; class=&quot;headerlink&quot; title=&quot;appium 在ios端工作流&quot;&gt;&lt;/a&gt;appium 在ios端工作流&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;client端 依然是 test script是我们的webdriver测试脚本。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;中间是起的Appium的服务，Appium在服务端起了一个Server（4723端口），跟selenium&lt;br&gt;Webdriver测试框架类似， Appium⽀持标准的WebDriver JSONWireProtocol。在这里提供它提供了一套REST的接口,Appium Server接收web driver client标准rest请求，解析请求内容，调⽤用对应的框架响应操作。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;appium server调用instruments.js 启动⼀一个socket server，同时分出一个⼦子进程运⾏instruments.app，将bootstrap.js（一个UIAutomation脚本）注⼊入到device⽤于和外界进行交互&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;最后Bootstrap.js将执行的结果返回给appium server&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;appium server再将结果返回给 appium client。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;所以我们可以看到android与ios区别在于appium 将请求转发到bootstrap.js或者bootstrap.jar.然后由bootstrap 驱动UIAutomation和UiAutomator去devices上完成具体的动作。&lt;/p&gt;
&lt;h2 id=&quot;appium__u5E76_u53D1&quot;&gt;&lt;a href=&quot;#appium__u5E76_u53D1&quot; class=&quot;headerlink&quot; title=&quot;appium 并发&quot;&gt;&lt;/a&gt;appium 并发&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/image/appium 并发测试.png&quot; alt=&quot;appium bingfa&quot;&gt;&lt;/p&gt;
&lt;p&gt;关于appium并发，我将之分为2类，第一类单机并发。第二类基于selenium grid 多节点并发测试,也可称之为云测。&lt;/p&gt;
&lt;h3 id=&quot;appium__u5355_u673A_u5E76_u53D1&quot;&gt;&lt;a href=&quot;#appium__u5355_u673A_u5E76_u53D1&quot; class=&quot;headerlink&quot; title=&quot;appium 单机并发&quot;&gt;&lt;/a&gt;appium 单机并发&lt;/h3&gt;&lt;p&gt;Android并发测试&lt;br&gt;Appium提供了在一台设备上启动多个Android会话的方案。&lt;/p&gt;
&lt;p&gt;appium -p 4492 -bp 2251 -U 32456&lt;/p&gt;
&lt;p&gt;启动多个Android会话的重要指令包括：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;指令&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;功能&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;-p&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Appium的主要端口&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-U&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;设备id&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-bp&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Appium bootstrap端口&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–chromedriver-port&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;chromedriver端口（当使用了webviews或者chrome）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–selendroid-port&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;selendroid端口（当使用了selendroid）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;iOS并发测试&lt;/p&gt;
&lt;p&gt;不幸的是，IOS不能进行本地并发测试。跟Android不一样，IOS在同一时间只能启动一个版本的模拟器来运行多个测试。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;总结:&lt;br&gt;单机并发目前只能在android实现，且必须启动n个appium server 对应不同devices，这里devices可以是真机或模拟器。但是必须保证端口后没有重复使用。&lt;br&gt;接下来工作就是利用测试框架(testng,jasmine,rspec,cucumber等)将测试分发到不同appium server上。&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&quot;u4EE3_u7801_u793A_u4F8B&quot;&gt;&lt;a href=&quot;#u4EE3_u7801_u793A_u4F8B&quot; class=&quot;headerlink&quot; title=&quot;代码示例&quot;&gt;&lt;/a&gt;代码示例&lt;/h4&gt;&lt;p&gt; &lt;a href=&quot;https://github.com/saikrishna321/AppiumTestDistribution&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;代码解析：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;首先让我们来看下代码中的AppiumParallelTest这个类，他们先判断操作系统，并获取操作系统上连接的devices。&lt;br&gt;利用AndroidDeviceConfiguration.java 与 IOSDeviceConfiguration.java 中的getIOSUDID，getDevices方法分别获取真机与模拟器的id.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;然后利用startAppiumServer方法启动appium server, 利用appiumServerForAndroid()或者appiumServerForIOS().&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;aa&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;appium_grid__u5206_u5E03_u5F0F_u5E76_u53D1&quot;&gt;&lt;a href=&quot;#appium_grid__u5206_u5E03_u5F0F_u5E76_u53D1&quot; class=&quot;headerlink&quot; title=&quot;appium grid 分布式并发&quot;&gt;&lt;/a&gt;appium grid 分布式并发&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;start selenium grid sever&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;java -jar selenium-server-standalone-&lt;span class=&quot;number&quot;&gt;2.47&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.1&lt;/span&gt;.jar -port &lt;span class=&quot;number&quot;&gt;4444&lt;/span&gt; -role hub   -hub http:&lt;span class=&quot;comment&quot;&gt;//192.168.199.140:4444/grid/registe&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Registered appium server as the grid node&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;appium&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;--nodeconfig&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;appium_node_S3&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.json&lt;/span&gt;  &lt;span class=&quot;tag&quot;&gt;-p&lt;/span&gt; 4823  &lt;span class=&quot;tag&quot;&gt;-bp&lt;/span&gt; 3356 &lt;span class=&quot;tag&quot;&gt;-U&lt;/span&gt; &quot;192&lt;span class=&quot;class&quot;&gt;.168&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.99&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.104&lt;/span&gt;&lt;span class=&quot;pseudo&quot;&gt;:5555&quot;&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;--chromedriver-port&lt;/span&gt; 4738&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Configure the test script,run the tests&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@BeforeTest&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Parameters&lt;/span&gt;(&amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;deviceName&quot;&lt;/span&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setUp&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String deviceName)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        capabilities.setCapability(&lt;span class=&quot;string&quot;&gt;&quot;deviceName&quot;&lt;/span&gt;,deviceName);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        capabilities.setCapability(&lt;span class=&quot;string&quot;&gt;&quot;platformVersion&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;5.0&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        capabilities.setCapability(&lt;span class=&quot;string&quot;&gt;&quot;app&quot;&lt;/span&gt;, getApp(&lt;span class=&quot;string&quot;&gt;&quot;ContactManager.apk&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        setUpAndroidDriver();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;GRID_NODE_CONFIGURATION_EXAMPLE_JSON_FILE&quot;&gt;&lt;a href=&quot;#GRID_NODE_CONFIGURATION_EXAMPLE_JSON_FILE&quot; class=&quot;headerlink&quot; title=&quot;GRID NODE CONFIGURATION EXAMPLE JSON FILE&quot;&gt;&lt;/a&gt;GRID NODE CONFIGURATION EXAMPLE JSON FILE&lt;/h4&gt;&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;&lt;span class=&quot;attribute&quot;&gt;capabilities&lt;/span&gt;&quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;value&quot;&gt;[&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123; &quot;&lt;span class=&quot;attribute&quot;&gt;deviceName&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;192.168.56.101:5555&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &quot;&lt;span class=&quot;attribute&quot;&gt;browserName&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;e.g._iPhone5_or_iPad4&amp;gt;&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &quot;&lt;span class=&quot;attribute&quot;&gt;version&lt;/span&gt;&quot;:&lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;version_of_iOS_e.g._7.1&amp;gt;&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &quot;&lt;span class=&quot;attribute&quot;&gt;maxInstances&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &quot;&lt;span class=&quot;attribute&quot;&gt;platform&lt;/span&gt;&quot;:&lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;platform_e.g._MAC_or_ANDROID&amp;gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      ]&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;&lt;span class=&quot;attribute&quot;&gt;configuration&lt;/span&gt;&quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;value&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;&lt;span class=&quot;attribute&quot;&gt;cleanUpCycle&lt;/span&gt;&quot;:&lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;number&quot;&gt;2000&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;&lt;span class=&quot;attribute&quot;&gt;timeout&lt;/span&gt;&quot;:&lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;number&quot;&gt;30000&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;&lt;span class=&quot;attribute&quot;&gt;proxy&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;org.openqa.grid.selenium.proxy.DefaultRemoteProxy&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;&lt;span class=&quot;attribute&quot;&gt;url&lt;/span&gt;&quot;:&lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;http://&amp;lt;host_name_appium_server_or_ip-address_appium_server&amp;gt;:&amp;lt;appium_port&amp;gt;/wd/hub&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;&lt;span class=&quot;attribute&quot;&gt;host&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&amp;lt;host_name_appium_server_or_ip-address_appium_server&amp;gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;&lt;span class=&quot;attribute&quot;&gt;port&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&amp;lt;appium_port&amp;gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;&lt;span class=&quot;attribute&quot;&gt;maxSession&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;&lt;span class=&quot;attribute&quot;&gt;register&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;&lt;span class=&quot;attribute&quot;&gt;registerCycle&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;number&quot;&gt;5000&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;&lt;span class=&quot;attribute&quot;&gt;hubPort&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&amp;lt;grid_port&amp;gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;&lt;span class=&quot;attribute&quot;&gt;hubHost&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;Grid_host_name_or_grid_ip-address&amp;gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;p&gt;未完待续&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;appium__u4ECB_u7ECD&quot;&gt;&lt;a href=&quot;#appium__u4ECB_u7ECD&quot; class=&quot;headerlink&quot; title=&quot;appium 介绍&quot;&gt;&lt;/a&gt;appium 介绍&lt;/h2&gt;&lt;p&gt;Appium 是一个开源的，跨平台的自动化测
    
    </summary>
    
    
      <category term="appium, mobile testing" scheme="http://yoursite.com/tags/appium-mobile-testing/"/>
    
  </entry>
  
  <entry>
    <title>前端性能分析优化</title>
    <link href="http://yoursite.com/2016/02/23/%E5%89%8D%E7%AB%AF%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90%E4%BC%98%E5%8C%96/"/>
    <id>http://yoursite.com/2016/02/23/前端性能分析优化/</id>
    <published>2016-02-23T13:05:28.000Z</published>
    <updated>2016-02-24T03:10:23.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;u5206_u6790_u95EE_u9898&quot;&gt;&lt;a href=&quot;#u5206_u6790_u95EE_u9898&quot; class=&quot;headerlink&quot; title=&quot;分析问题&quot;&gt;&lt;/a&gt;分析问题&lt;/h2&gt;&lt;p&gt;我们并不仅仅关注页面资源的解析和展示响应时间，而是要关注总时间；我们进行web前端性能测试的目的是计算出包含页面渲染、网络传输以及服务器端解析等综合因素在内的加载时间等指标，对该页面性能进行评估分析，找出影响性能的主要因素和瓶颈，并在此结果的基础上，给出一定的优化建议和解决方案，从而提升用户体验。&lt;/p&gt;
&lt;p&gt; 根据雅虎团队经验：网站页面性能优化的34条黄金守则，我们逐条分析。&lt;/p&gt;
&lt;p&gt; &lt;strong&gt;性能黄金法则&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;只有10%-20%的最终用户响应时间花在接收请求的HTML文档上，剩下的80%-90%时间花在HTML文档所引用的所有组件(图片，script，css，flash等等)进行的HTTP请求上。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;尽量减少HTTP请求次数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;合并文件.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;例如将项目中用的资源文件合并。所有的CSS文件都放入一个样式表中.或者将js文件合并压缩&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;利用gulp,grunt,webpack等构建工具将项目资源文件整合&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;利用CSS Sprites 减少图像请求.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;通过使用合并图片，通过指定css的backgroud-image和backgroud-position来显示元素。&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;启用浏览器缓存&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;要利用浏览器缓存存储可缓存的资源&lt;/p&gt;
&lt;p&gt;&lt;code&gt;在HTTP标头中为静态资源设置有效期或最长存在时间，可指示浏览器从本地磁盘中加载以前下载的资源而不是从网络中加载。&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;减少DNS查找&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;DNS缓存&lt;/p&gt;
&lt;p&gt;&lt;code&gt;当客户端的DNS缓存为空时，DNS查找的数量与Web页面中唯一主机名的数量相等。减少唯一主机名的数量就可以减少DNS查找的数量。&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用内容分发网络&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;页面静态化,取决于发布系统&lt;/p&gt;
&lt;p&gt;&lt;code&gt;按页面内容划分域名，在合适的资源服务器上存放文件&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;避免404错误&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;避免内部无效的链接&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;避免重定向&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;压缩组件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;精简Javascript和Css&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;尽量缩减页面大小&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;页面必须小于150K(不含图片）&lt;/p&gt;
&lt;p&gt;a) 静态文件是否gzip&lt;/p&gt;
&lt;p&gt;b) 图片是否压缩优化过&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;预处理&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;浏览器空闲时请求将来可能会用到的页面内容&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;无条件加载：触发onload事件时，直接加载额外的页面内容&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;有预期的加载：载入重新设计过的页面时使用预加载。&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;移除重复脚本&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使iframe的数量最小&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;异步加载&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;js 开发规范&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;代码逻辑分层&lt;/li&gt;
&lt;li&gt;避免全局变量&lt;/li&gt;
&lt;li&gt;便于多人协作开发&lt;/li&gt;
&lt;li&gt;各部分代码模块化，可以按需加载 利用requirejs和seajs等模块化工具加载&lt;/li&gt;
&lt;li&gt;保持全局变量的清洁&lt;/li&gt;
&lt;li&gt;可进行单元测试&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;参考&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/li0803/archive/2009/09/20/1570581.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;yahoo前端性能优化指南中文版&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.yahoo.com/performance/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;yahoo前端性能优化指南&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;u5206_u6790_u95EE_u9898&quot;&gt;&lt;a href=&quot;#u5206_u6790_u95EE_u9898&quot; class=&quot;headerlink&quot; title=&quot;分析问题&quot;&gt;&lt;/a&gt;分析问题&lt;/h2&gt;&lt;p&gt;我们并不仅仅关注页面资源的解析和展示响应时间，而
    
    </summary>
    
    
      <category term="性能测试" scheme="http://yoursite.com/tags/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>前端性能测试之分析篇</title>
    <link href="http://yoursite.com/2016/02/23/%E5%89%8D%E7%AB%AF%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E4%B9%8B%E5%88%86%E6%9E%90%E7%AF%87/"/>
    <id>http://yoursite.com/2016/02/23/前端性能测试之分析篇/</id>
    <published>2016-02-23T03:31:51.000Z</published>
    <updated>2016-02-23T07:43:46.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;u5F15_u8A00&quot;&gt;&lt;a href=&quot;#u5F15_u8A00&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h2&gt;&lt;p&gt;前一章，我们讲了browser的工作原理,那么怎么样才能让了解整个主站前端的性能呢？监控！ 对，是的，我们可以利用各种工作对我们的website进行实时的监控,目前监控的方式有两种。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;优点&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;缺点&lt;/th&gt;
&lt;th style=&quot;text-align:right&quot;&gt;示例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;非侵入式&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;指标齐全、客户端主动监测、竞品监控&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;无法知道性能影响用户数、采样少容易失真、无法监控复杂应用与细分功能&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;Pagespeed、yslow、PhantomJS、webpagetest、sitespeedio&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;侵入式&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;真实海量用户数据、能监控复杂应用与业务功能、用户点击与区域渲染&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;需插入脚本统计、网络指标不全、无法监控竞品&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;new relic、Google analyse、oneapm&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&quot;u524D_u7AEF_u6027_u80FD_u5206_u6790_u5DE5_u5177&quot;&gt;&lt;a href=&quot;#u524D_u7AEF_u6027_u80FD_u5206_u6790_u5DE5_u5177&quot; class=&quot;headerlink&quot; title=&quot;前端性能分析工具&quot;&gt;&lt;/a&gt;前端性能分析工具&lt;/h2&gt;&lt;p&gt;那有哪些简易便利的工具能帮助我们更好的进行测试呢？&lt;br&gt;ok，工具集锦来临。&lt;/p&gt;
&lt;h3 id=&quot;u6D4F_u89C8_u5668_u63D2_u4EF6_u7C7B&quot;&gt;&lt;a href=&quot;#u6D4F_u89C8_u5668_u63D2_u4EF6_u7C7B&quot; class=&quot;headerlink&quot; title=&quot;浏览器插件类&quot;&gt;&lt;/a&gt;浏览器插件类&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;FireBug&lt;br&gt;它可以对页面进行调试，可以记录所有网页的访问耗时，下载的资源等&lt;/li&gt;
&lt;li&gt;Page Speed&lt;br&gt;&lt;img src=&quot;/image/pagespeed.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;li&gt;Yslow&lt;br&gt;&lt;img src=&quot;/image/yslow.gif&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;li&gt;page performance&lt;br&gt;&lt;img src=&quot;/image/page_perfor.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;li&gt;performance analyse&lt;br&gt;&lt;img src=&quot;/image/performance_alay.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;u5728_u7EBF_u7F51_u7AD9_u7C7B&quot;&gt;&lt;a href=&quot;#u5728_u7EBF_u7F51_u7AD9_u7C7B&quot; class=&quot;headerlink&quot; title=&quot;在线网站类&quot;&gt;&lt;/a&gt;在线网站类&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;WebPageTest&lt;br&gt;&lt;img src=&quot;/image/webpagespeed.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;li&gt;showslow&lt;br&gt;&lt;img src=&quot;/image/showslow.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;sitespeed.io&lt;br&gt;&lt;img src=&quot;/image/sitespeed.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;u5E73_u53F0_u7C7B&quot;&gt;&lt;a href=&quot;#u5E73_u53F0_u7C7B&quot; class=&quot;headerlink&quot; title=&quot;平台类&quot;&gt;&lt;/a&gt;平台类&lt;/h3&gt;&lt;h4 id=&quot;u6536_u8D39_u670D_u52A1_u5E73_u53F0&quot;&gt;&lt;a href=&quot;#u6536_u8D39_u670D_u52A1_u5E73_u53F0&quot; class=&quot;headerlink&quot; title=&quot;收费服务平台&quot;&gt;&lt;/a&gt;收费服务平台&lt;/h4&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;google_analytics&lt;br&gt;&lt;img src=&quot;/image/google_alay.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;new relic&lt;br&gt;&lt;img src=&quot;/image/relic1.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;li&gt;oneapm&lt;br&gt;&lt;img src=&quot;/image/oneapm.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;u5F00_u6E90_u5E73_u53F0&quot;&gt;&lt;a href=&quot;#u5F00_u6E90_u5E73_u53F0&quot; class=&quot;headerlink&quot; title=&quot;开源平台&quot;&gt;&lt;/a&gt;开源平台&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;InfluxDB + Grafana&lt;br&gt;参考文章&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href=&quot;https://ruby-china.org/topics/23470&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;InfluxDB + Grafana 快速搭建自己的 NewRelic，分析应用运行情况
&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.rittmanmead.com/2015/02/obiee-monitoring-and-diagnostics-with-influxdb-and-grafana/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;OBIEE Monitoring and Diagnostics with InfluxDB and Grafana
&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Nagios&lt;/li&gt;
&lt;li&gt;Zabbix&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;u5F15_u8A00&quot;&gt;&lt;a href=&quot;#u5F15_u8A00&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h2&gt;&lt;p&gt;前一章，我们讲了browser的工作原理,那么怎么样才能让了解整个主站前端的性能呢？监控！ 对，是的，我
    
    </summary>
    
    
      <category term="性能测试" scheme="http://yoursite.com/tags/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>前端性能测试分析</title>
    <link href="http://yoursite.com/2016/02/23/%E5%89%8D%E7%AB%AF%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E5%88%86%E6%9E%90_%E5%8E%9F%E7%90%86%E7%AF%87/"/>
    <id>http://yoursite.com/2016/02/23/前端性能测试分析_原理篇/</id>
    <published>2016-02-23T02:12:40.000Z</published>
    <updated>2016-02-23T03:28:31.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;u539F_u7406_u7BC7&quot;&gt;&lt;a href=&quot;#u539F_u7406_u7BC7&quot; class=&quot;headerlink&quot; title=&quot;原理篇&quot;&gt;&lt;/a&gt;原理篇&lt;/h1&gt;&lt;h2 id=&quot;browser_u5DE5_u4F5C_u539F_u7406&quot;&gt;&lt;a href=&quot;#browser_u5DE5_u4F5C_u539F_u7406&quot; class=&quot;headerlink&quot; title=&quot;browser工作原理&quot;&gt;&lt;/a&gt;browser工作原理&lt;/h2&gt;&lt;p&gt;web浏览器与web服务器之间通过HTTP协议进行通信的过程。所以，web C/S之间握手的协议就是HTTP协议。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/image/front_end_performance_test.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;u9875_u9762_u7684_u8BF7_u6C42_u8FC7_u7A0B&quot;&gt;&lt;a href=&quot;#u9875_u9762_u7684_u8BF7_u6C42_u8FC7_u7A0B&quot; class=&quot;headerlink&quot; title=&quot;页面的请求过程&quot;&gt;&lt;/a&gt;页面的请求过程&lt;/h2&gt;&lt;h3 id=&quot;u8BF7_u6C42_u9636_u6BB5&quot;&gt;&lt;a href=&quot;#u8BF7_u6C42_u9636_u6BB5&quot; class=&quot;headerlink&quot; title=&quot;请求阶段&quot;&gt;&lt;/a&gt;请求阶段&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;browser send url request&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;/image/LSBAWS_HTTP_request_response.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;递归寻找DNS server&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;/image/dns.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;连接目标IP并建立TCP连接&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;向目标服务器发送http请求&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;web服务器接收请求后处理&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;web服务器返回相应的结果【无效、重定向、正确页面等】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;浏览器接收返回的http内容&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;u524D_u7AEF_u89E3_u6790_u9636_u6BB5&quot;&gt;&lt;a href=&quot;#u524D_u7AEF_u89E3_u6790_u9636_u6BB5&quot; class=&quot;headerlink&quot; title=&quot;前端解析阶段&quot;&gt;&lt;/a&gt;前端解析阶段&lt;/h2&gt;&lt;p&gt;渲染引擎—通过网络获得所请求文档的内容, 解析html以构建dom树-&amp;gt;构建render树-&amp;gt;布局render树-&amp;gt;绘制render树&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;开始解析html文件，当然是自上而下，先是头部，后是body&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;当解析到头部css外部链接时，同步去下载，如果遇到外部js链接也是下载【不过js链接不建议放在头部，因为耽误页面第一展现时间】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;接着解析body部分，边解析边开始生成对应的DOM树，同时等待css文件下载&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;一旦css文件下载完毕，那么就同步去用已经生成的DOM节点+CSS去生成渲染树&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;渲染树一旦有结构模型了，接着就会同步去计算渲染树节点的布局位置&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;一旦计算出来渲染的坐标后，又同步去开始渲染&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;4-6步进行过程中如果遇到图片则跳过去渲染下面内容，等待图片下载成功后会返回来在渲染原来图片的位置&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;同7步，如果渲染过程中出现js代码调整DOM树结构的情况，暂停其它渲染，再次重新来过，从修改DOM那步开始&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;最终所有节点和资源都会渲染完成&lt;/p&gt;
&lt;h2 id=&quot;u5206_u6790_u7ED3_u675F&quot;&gt;&lt;a href=&quot;#u5206_u6790_u7ED3_u675F&quot; class=&quot;headerlink&quot; title=&quot;分析结束&quot;&gt;&lt;/a&gt;分析结束&lt;/h2&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;渲染完成后开始page的onload事件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;整个页面load完成&lt;/p&gt;
&lt;h2 id=&quot;u53C2_u8003&quot;&gt;&lt;a href=&quot;#u53C2_u8003&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/zzzaquarius/article/details/6532299&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;浏览器工作原理&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;u539F_u7406_u7BC7&quot;&gt;&lt;a href=&quot;#u539F_u7406_u7BC7&quot; class=&quot;headerlink&quot; title=&quot;原理篇&quot;&gt;&lt;/a&gt;原理篇&lt;/h1&gt;&lt;h2 id=&quot;browser_u5DE5_u4F5C_u539F_u7406&quot;&gt;
    
    </summary>
    
    
      <category term="性能测试" scheme="http://yoursite.com/tags/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>前端测试进化论2</title>
    <link href="http://yoursite.com/2016/01/26/%E5%89%8D%E7%AB%AF%E6%B5%8B%E8%AF%95%E8%BF%9B%E5%8C%96%E8%AE%BA2/"/>
    <id>http://yoursite.com/2016/01/26/前端测试进化论2/</id>
    <published>2016-01-26T10:01:07.000Z</published>
    <updated>2016-01-27T04:52:52.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;u524D_u7AEF_u6D4B_u8BD5_u8FDB_u5316_u8BBA2&quot;&gt;&lt;a href=&quot;#u524D_u7AEF_u6D4B_u8BD5_u8FDB_u5316_u8BBA2&quot; class=&quot;headerlink&quot; title=&quot;前端测试进化论2&quot;&gt;&lt;/a&gt;前端测试进化论2&lt;/h1&gt;&lt;p&gt;=============&lt;/p&gt;
&lt;p&gt;说完了，前端技术的发展史，那么对应的前端测试发展史也随之发展。&lt;/p&gt;
&lt;h2 id=&quot;u77F3_u5668_u65F6_u4EE3_u2014_u2014_u7EAF_u624B_u5DE5_u6D4B_u8BD5&quot;&gt;&lt;a href=&quot;#u77F3_u5668_u65F6_u4EE3_u2014_u2014_u7EAF_u624B_u5DE5_u6D4B_u8BD5&quot; class=&quot;headerlink&quot; title=&quot;石器时代——纯手工测试&quot;&gt;&lt;/a&gt;石器时代——纯手工测试&lt;/h2&gt;&lt;p&gt;早期的页面基本都是静态化的页面，只有几个链接或者图片，那么相对测试工作量不大，只需要我们打开页面查看加载是否正确。&lt;/p&gt;
&lt;h2 id=&quot;u94C1_u5668_u65F6_u4EE3_u2013xunit&quot;&gt;&lt;a href=&quot;#u94C1_u5668_u65F6_u4EE3_u2013xunit&quot; class=&quot;headerlink&quot; title=&quot;铁器时代–xunit&quot;&gt;&lt;/a&gt;铁器时代–xunit&lt;/h2&gt;&lt;p&gt;到了javascript时代，随着其他语言xunit 风靡天下,js 也出现了它的xunit 框架。&lt;/p&gt;
&lt;p&gt;Jsunit，以往在测试js的时候，都是以alert方式来检测错误，很不专业。&lt;/p&gt;
&lt;p&gt;2001年 jsunit 出现，让js调试称为可能。&lt;/p&gt;
&lt;p&gt;Jsunit 主要参考junit的设计，只要你会使用junit 那么jsunit 对你来说，根本不是什么事，具体使用参考&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://llying.iteye.com/blog/258605&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://llying.iteye.com/blog/258605&lt;/a&gt;&lt;br&gt;DEMO:&lt;/p&gt;
&lt;p&gt;测试代码&lt;br&gt;&lt;figure class=&quot;highlight nimrod&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!&lt;span class=&quot;type&quot;&gt;DOCTYPE&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;PUBLIC&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;HTML&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;lt;&lt;span class=&quot;type&quot;&gt;HEAD&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;&lt;span class=&quot;type&quot;&gt;TITLE&lt;/span&gt;&amp;gt;testHtml&amp;lt;/&lt;span class=&quot;type&quot;&gt;TITLE&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;lt;/&lt;span class=&quot;type&quot;&gt;HEAD&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script &lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; src=&lt;span class=&quot;string&quot;&gt;&quot;myjs.js&quot;&lt;/span&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script &lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; src=&lt;span class=&quot;string&quot;&gt;&quot;jsunit\app\jsUnitCore.js&quot;&lt;/span&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script &lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!--&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function testAdd()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt; = add(arg1,arg2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	warn(&lt;span class=&quot;string&quot;&gt;&quot;result&quot;&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	debug(&lt;span class=&quot;string&quot;&gt;&quot;result&quot;&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	info(&lt;span class=&quot;string&quot;&gt;&quot;result&quot;&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	assertEquals(&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;,&lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function testMinus()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt; = minus(arg1,arg2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	assertEquals(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function testMultiply()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt; = multiply(arg1,arg2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	assertEquals(&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;,&lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function testDivide()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt; = divide(arg1,arg2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	assertEquals(&lt;span class=&quot;string&quot;&gt;&quot;4 divide 2 is 2&quot;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function setUpPage()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	arg1 = &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	arg2 = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	setUpPageStatus = &lt;span class=&quot;string&quot;&gt;&quot;complete&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function exposeTestFunctionNames()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; tests = new &lt;span class=&quot;type&quot;&gt;Array&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	tests[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]=&lt;span class=&quot;string&quot;&gt;&quot;testAdd&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	tests[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]=&lt;span class=&quot;string&quot;&gt;&quot;testMinus&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	tests[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;]=&lt;span class=&quot;string&quot;&gt;&quot;testMultiply&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; tests;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//--&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/&lt;span class=&quot;type&quot;&gt;SCRIPT&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;lt;&lt;span class=&quot;type&quot;&gt;BODY&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;lt;/&lt;span class=&quot;type&quot;&gt;BODY&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/&lt;span class=&quot;type&quot;&gt;HTML&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;测试驱动&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;doctype&quot;&gt;&amp;lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;HTML&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;HEAD&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;TITLE&lt;/span&gt;&amp;gt;&lt;/span&gt;suit test&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;TITLE&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;HEAD&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;jsunit\app\jsUnitCore.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!--&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;suite&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; testSuite = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; top.jsUnitTestSuite();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//增加的测试页面的路径是相对于测试运行器的路径的（testRunner.html），而不是相对于当前的页面&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	testSuite.addTestPage(&lt;span class=&quot;string&quot;&gt;&quot;../mytest1.html&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//套件里还可以在包含套件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	testSuite.addTestSuite(Suite2());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; testSuite;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Suite2&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) //需要与&lt;span class=&quot;title&quot;&gt;suite&lt;/span&gt;定义在同一个页面中&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; testSuite = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; top.jsUnitTestSuite();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	testSuite.addTestPage(&lt;span class=&quot;string&quot;&gt;&quot;../mytest2.html&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; testSuite;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//--&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;SCRIPT&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;BODY&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;BODY&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;HTML&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;http://www.jsunit.net/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.jsunit.net/&lt;/a&gt; &lt;/p&gt;
&lt;h2 id=&quot;u5DE5_u4E1A_u9769_u547D_u2013ajax_u6D41_u884C&quot;&gt;&lt;a href=&quot;#u5DE5_u4E1A_u9769_u547D_u2013ajax_u6D41_u884C&quot; class=&quot;headerlink&quot; title=&quot;工业革命–ajax流行&quot;&gt;&lt;/a&gt;工业革命–ajax流行&lt;/h2&gt;&lt;p&gt;随着ajax的流行，jquery框架在前端开发中的普及，让开发者看到了前端的新纪元，&lt;br&gt;jquery 团队也为广大开发人员开发了Qunit.QUnit 是一款强大而且容易使用的JavaScript 测试框架，它被用于jQuery 与其插件的测试，同时它也同样可以测试普通的JavaScript 代码.&lt;/p&gt;
&lt;h3 id=&quot;TDD_u7684_u65F6_u4EE3_u6765_u4E34_QUnit_u6846_u67B6_u7248_u672C&quot;&gt;&lt;a href=&quot;#TDD_u7684_u65F6_u4EE3_u6765_u4E34_QUnit_u6846_u67B6_u7248_u672C&quot; class=&quot;headerlink&quot; title=&quot;TDD的时代来临 QUnit框架版本&quot;&gt;&lt;/a&gt;TDD的时代来临 QUnit框架版本&lt;/h3&gt;&lt;p&gt;将要被测试的代码需要添加到myProject.js中，并且你的测试用例应该插入到myTest.js。要运行这些测试，只需在一个浏览器中打开这个html文件。现在需要写一些测试用例了。&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;doctype&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;QUnit Test Suite&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;http://github.com/jquery/qunit/raw/master/qunit/qunit.css&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;mce_href&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;http://github.com/jquery/qunit/raw/master/qunit/qunit.css&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;text/css&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;media&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;screen&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;mce:script&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;http://github.com/jquery/qunit/raw/master/qunit/qunit.js&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;mce_src&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;http://github.com/jquery/qunit/raw/master/qunit/qunit.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;mce:script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- Your project file goes here --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;mce:script&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;myProject.js&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;mce_src&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;myProject.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;mce:script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- Your tests file goes here --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;mce:script&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;myTests.js&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;mce_src&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;myTests.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;mce:script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;h1&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;qunit-header&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;QUnit Test Suite&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;h2&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;qunit-banner&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;h2&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;qunit-testrunner-toolbar&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;h2&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;qunit-userAgent&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;h2&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;ol&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;qunit-tests&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;ol&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;参考&lt;br&gt;&lt;a href=&quot;http://www.cnblogs.com/nuaalfm/archive/2010/02/26/1674235.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cnblogs.com/nuaalfm/archive/2010/02/26/1674235.html&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://qunitjs.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://qunitjs.com/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;u73B0_u4EE3_u5316_u6280_u672F-BBD&quot;&gt;&lt;a href=&quot;#u73B0_u4EE3_u5316_u6280_u672F-BBD&quot; class=&quot;headerlink&quot; title=&quot;现代化技术-BBD&quot;&gt;&lt;/a&gt;现代化技术-BBD&lt;/h2&gt;&lt;p&gt;紧着angluar react 等框架大行其道的同时，bdd也在开发中兴起，基于bdd的测试框架开始在前端如雨后春笋般冒出,jasmine,mocha,karma都是其中的代表，但是各得其道，到底谁好，没惹能说得清楚。但google 在前端测试的贡献，绝对是业界良心。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/image/JASMINE.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;a href=&quot;http://jasmine.github.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://jasmine.github.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/image/KARMA.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://karma-runner.github.io/0.13/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://karma-runner.github.io/0.13/index.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/image/MOCHA.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://mochajs.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://mochajs.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这些框架本人就不举列子了，会在以后的篇章里面一一介绍。&lt;/p&gt;
&lt;h2 id=&quot;u524D_u7AEF_u7684_u672A_u6765&quot;&gt;&lt;a href=&quot;#u524D_u7AEF_u7684_u672A_u6765&quot; class=&quot;headerlink&quot; title=&quot;前端的未来&quot;&gt;&lt;/a&gt;前端的未来&lt;/h2&gt;&lt;p&gt;未来，我希望有一种框架能够解救苦逼的qa,简单的语法与api，使得我们能够处理所有前端框架而不用考虑控件问题，良好的性能，支持并发，跑ui和单元测试都在秒级，当然越快越好，最好能够自动更新ui自动化中页面对象的路径等等。也许只是个梦。Qa 还需努力。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;u524D_u7AEF_u6D4B_u8BD5_u8FDB_u5316_u8BBA2&quot;&gt;&lt;a href=&quot;#u524D_u7AEF_u6D4B_u8BD5_u8FDB_u5316_u8BBA2&quot; class=&quot;headerlink&quot; title=&quot;前端测试进化论2
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>前端测试进化论</title>
    <link href="http://yoursite.com/2016/01/25/%E5%89%8D%E7%AB%AF%E6%B5%8B%E8%AF%95%E8%BF%9B%E5%8C%96%E8%AE%BA/"/>
    <id>http://yoursite.com/2016/01/25/前端测试进化论/</id>
    <published>2016-01-25T07:36:44.000Z</published>
    <updated>2016-01-26T09:55:06.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;u524D_u7AEF_u6D4B_u8BD5_u8FDB_u5316_u8BBA&quot;&gt;&lt;a href=&quot;#u524D_u7AEF_u6D4B_u8BD5_u8FDB_u5316_u8BBA&quot; class=&quot;headerlink&quot; title=&quot;前端测试进化论&quot;&gt;&lt;/a&gt;前端测试进化论&lt;/h1&gt;&lt;h1 id=&quot;u7B2C_u4E00_u7BC7web__u53D1_u5C55_u53F2&quot;&gt;&lt;a href=&quot;#u7B2C_u4E00_u7BC7web__u53D1_u5C55_u53F2&quot; class=&quot;headerlink&quot; title=&quot;第一篇web 发展史&quot;&gt;&lt;/a&gt;第一篇web 发展史&lt;/h1&gt;&lt;p&gt;这篇主要是帮助我们qa 了解前端的历史与现状。&lt;/p&gt;
&lt;p&gt;测试工程师大部分时间可能关注的是feature正确性，而对于前端代码级别的测试基本没有关心过，随着各种前端框架在web和移动端大行其道，绽放各种高大上的功能时，我们渐渐的发现前端代码级别问题逐渐暴露出来，甚至超越后端之势。那么问题来了，为什么以前这种现象出现呢？&lt;br&gt;我们现来看看前端技术发展史。&lt;/p&gt;
&lt;p&gt;##石器时代——开荒阶段&lt;/p&gt;
&lt;h3 id=&quot;u5E26_u6709_u7B80_u5355_u903B_u8F91_u7684_u754C_u9762&quot;&gt;&lt;a href=&quot;#u5E26_u6709_u7B80_u5355_u903B_u8F91_u7684_u754C_u9762&quot; class=&quot;headerlink&quot; title=&quot;带有简单逻辑的界面&quot;&gt;&lt;/a&gt;带有简单逻辑的界面&lt;/h3&gt;&lt;p&gt;最早期的Web界面基本都是在互联网上使用，而且基本都是静态页面展示，人们浏览某些内容，填写几个表单并且提交。当时的界面以浏览为主，基本都是HTML代码，我们来看一个最简单的HTML文件：&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;开荒时代&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;静态页面&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;这是个测试&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;u5E26_u6709_u7B80_u5355_u903B_u8F91_u7684_u754C_u9762-1&quot;&gt;&lt;a href=&quot;#u5E26_u6709_u7B80_u5355_u903B_u8F91_u7684_u754C_u9762-1&quot; class=&quot;headerlink&quot; title=&quot;带有简单逻辑的界面&quot;&gt;&lt;/a&gt;带有简单逻辑的界面&lt;/h3&gt;&lt;p&gt;接下来我们发现使用一些工具可以帮助我们做一些业务处理，这时javascript到来了，开始大放异彩。这时的代码的组织比较简单，而且CSS的运用也是比较少的。譬如：下面这个文档将带有一段JavaScript代码，用于拼接两个输入框中的字符串，并且弹出窗口显示。&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;javascript时代&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;firstNameInput&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;text&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;lastNameInput&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;text&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;button&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;onclick&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;greet()&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;language&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;JavaScript&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;greet&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; firstName = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&quot;firstNameInput&quot;&lt;/span&gt;).value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; lastName = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&quot;lastNameInput&quot;&lt;/span&gt;).value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            alert(&lt;span class=&quot;string&quot;&gt;&quot;Hello, &quot;&lt;/span&gt; + firstName + &lt;span class=&quot;string&quot;&gt;&quot;.&quot;&lt;/span&gt; + lastName);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;u7ED3_u5408_u4E86_u670D_u52A1_u7AEF_u6280_u672F_u7684_u6DF7_u5408_u7F16_u7A0B&quot;&gt;&lt;a href=&quot;#u7ED3_u5408_u4E86_u670D_u52A1_u7AEF_u6280_u672F_u7684_u6DF7_u5408_u7F16_u7A0B&quot; class=&quot;headerlink&quot; title=&quot;结合了服务端技术的混合编程&quot;&gt;&lt;/a&gt;结合了服务端技术的混合编程&lt;/h3&gt;&lt;p&gt;由于静态界面不能实现保存数据等功能，出现了很多服务端技术，早期的有CGI（Common Gateway Interface，多数用C语言或者Perl实现的），ASP（使用VBScript或者JScript），JSP（使用Java），PHP等等，Python和Ruby等语言也常被用于这类用途。&lt;/p&gt;
&lt;figure class=&quot;highlight vbscript-html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;Using GET Method to Read Form Data&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;center&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;Using GET Method to Read Form Data&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;b&lt;/span&gt;&amp;gt;&lt;/span&gt;First Name:&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;b&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&lt;span class=&quot;vbscript&quot;&gt;&amp;lt;%= &lt;span class=&quot;built_in&quot;&gt;request&lt;/span&gt;.getParameter(&lt;span class=&quot;string&quot;&gt;&quot;first_name&quot;&lt;/span&gt;)%&amp;gt;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;b&lt;/span&gt;&amp;gt;&lt;/span&gt;Last  Name:&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;b&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&lt;span class=&quot;vbscript&quot;&gt;&amp;lt;%= &lt;span class=&quot;built_in&quot;&gt;request&lt;/span&gt;.getParameter(&lt;span class=&quot;string&quot;&gt;&quot;last_name&quot;&lt;/span&gt;)%&amp;gt;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;u94C1_u5668_u65F6_u4EE3_u2014Ajax_u5E2D_u5377_u5168_u4E16_u754C&quot;&gt;&lt;a href=&quot;#u94C1_u5668_u65F6_u4EE3_u2014Ajax_u5E2D_u5377_u5168_u4E16_u754C&quot; class=&quot;headerlink&quot; title=&quot;铁器时代—Ajax席卷全世界&quot;&gt;&lt;/a&gt;铁器时代—Ajax席卷全世界&lt;/h2&gt;&lt;h3 id=&quot;AJAX&quot;&gt;&lt;a href=&quot;#AJAX&quot; class=&quot;headerlink&quot; title=&quot;AJAX&quot;&gt;&lt;/a&gt;AJAX&lt;/h3&gt;&lt;p&gt;由于Ajax的出现，规模更大，效果更好的Web程序逐渐出现，在这些程序中，JavaScript代码的数量迅速增加。出于代码组织的需要，“JavaScript框架”这个概念逐步形成。&lt;/p&gt;
&lt;h4 id=&quot;JavaScript_u57FA_u7840_u5E93_u2014jquery&quot;&gt;&lt;a href=&quot;#JavaScript_u57FA_u7840_u5E93_u2014jquery&quot; class=&quot;headerlink&quot; title=&quot;JavaScript基础库—jquery&quot;&gt;&lt;/a&gt;JavaScript基础库—jquery&lt;/h4&gt;&lt;p&gt;Prototype框架主要是为JavaScript代码提供了一种组织方式，对一些原生的JavaScript类型提供了一些扩展，比如数组、字符串，又额外提供了一些实用的数据结构，如：枚举，Hash等，除此之外，还对dom操作，事件，表单和Ajax做了一些封装。&lt;/p&gt;
&lt;p&gt;Mootools框架的思路跟Prototype很接近，它对JavaScript类型扩展的方式别具一格，所以在这类框架中，经常被称作“最优雅的”对象扩展体系。&lt;br&gt;从这两个框架的所提供的功能来看，它们的定位是核心库，在使用的时候一般需要配合一些外围的库来完成。&lt;/p&gt;
&lt;p&gt;jQuery与这两者有所不同，它着眼于简化DOM相关的代码。&lt;/p&gt;
&lt;p&gt;DOM的选择&lt;/p&gt;
&lt;p&gt;jQuery提供了一系列选择器用于选取界面元素，在其他一些框架中也有类似功能，但是一般没有它的简洁、强大。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;*&quot;&lt;/span&gt;)              &lt;span class=&quot;comment&quot;&gt;//选取所有元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;#lastname&quot;&lt;/span&gt;)      &lt;span class=&quot;comment&quot;&gt;//选取id为lastname的元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;.intro&quot;&lt;/span&gt;)         &lt;span class=&quot;comment&quot;&gt;//选取所有class=&quot;intro&quot;的元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;p&quot;&lt;/span&gt;)              &lt;span class=&quot;comment&quot;&gt;//选取所有&amp;amp;lt;p&amp;amp;gt;元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;.intro.demo&quot;&lt;/span&gt;)    &lt;span class=&quot;comment&quot;&gt;//选取所有 class=&quot;intro&quot;且class=&quot;demo&quot;的元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;链式表达式&lt;/p&gt;
&lt;p&gt;在jQuery中，可以使用链式表达式来连续操作dom，比如下面这个例子：&lt;/p&gt;
&lt;figure class=&quot;highlight elixir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&quot;p.neat&quot;&lt;/span&gt;).addClass(&lt;span class=&quot;string&quot;&gt;&quot;ohmy&quot;&lt;/span&gt;).show(&lt;span class=&quot;string&quot;&gt;&quot;slow&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;除此之外，jQuery还提供了一些动画方面的特效代码，也有大量的外围库，比如jQuery UI这样的控件库，jQuery mobile这样的移动开发库等等。&lt;/p&gt;
&lt;h3 id=&quot;u6A21_u5757_u4EE3_u7801_u52A0_u8F7D_u65B9_u5F0F_u2013Requirejs&quot;&gt;&lt;a href=&quot;#u6A21_u5757_u4EE3_u7801_u52A0_u8F7D_u65B9_u5F0F_u2013Requirejs&quot; class=&quot;headerlink&quot; title=&quot;模块代码加载方式–Requirejs&quot;&gt;&lt;/a&gt;模块代码加载方式–Requirejs&lt;/h3&gt;&lt;p&gt;以上这些框架提供了代码的组织能力，但是未能提供代码的动态加载能力。动态加载JavaScript为什么重要呢？因为随着Ajax的普及，jQuery等辅助库的出现，Web上可以做很复杂的功能，因此，单页面应用程序（SPA，Single Page Application）也逐渐多了起来。&lt;/p&gt;
&lt;p&gt;单个的界面想要做很多功能，需要写的代码是会比较多的，但是，并非所有的功能都需要在界面加载的时候就全部引入，如果能够在需要的时候才加载那些代码，就把加载的压力分担了，在这个背景下，出现了一些用于动态加载JavaScript的框架，也出现了一些定义这类可被动态加载代码的规范。&lt;/p&gt;
&lt;p&gt;在这些框架里，知名度比较高的是RequireJS，它遵循一种称为AMD（Asynchronous Module Definition）的规范。&lt;br&gt;例如下列是一个js代码保存为adder.js文件&lt;br&gt;&lt;figure class=&quot;highlight lua&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;define([&lt;span class=&quot;string&quot;&gt;&quot;math&quot;&lt;/span&gt;], &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(math)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        addTen : &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(x)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;math&lt;/span&gt;.add(x, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;当我们需要使用这个模块时，我们只需引入就好&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;require.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;([&lt;span class=&quot;string&quot;&gt;&quot;adder&quot;&lt;/span&gt;], &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;adder&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//使用这个adder&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;RequireJS除了提供异步加载方式，也可以使用同步方式加载模块代码。AMD规范除了使用在前端浏览器环境中，也可以运行于nodejs等服务端环境，nodejs的模块就是基于这套规范定义的。（修订，这里弄错了，nodejs是基于类似的CMD规范的）&lt;/p&gt;
&lt;h2 id=&quot;u5DE5_u4E1A_u9769_u547D_u2014_u524D_u7AEF_u6846_u67B6&quot;&gt;&lt;a href=&quot;#u5DE5_u4E1A_u9769_u547D_u2014_u524D_u7AEF_u6846_u67B6&quot; class=&quot;headerlink&quot; title=&quot;工业革命—前端框架&quot;&gt;&lt;/a&gt;工业革命—前端框架&lt;/h2&gt;&lt;p&gt;这个时期，随着Web端功能的日益复杂，人们开始考虑这样一些问题：&lt;/p&gt;
&lt;p&gt;•    如何更好地模块化开发&lt;/p&gt;
&lt;p&gt;•    业务数据如何组织&lt;/p&gt;
&lt;p&gt;•    界面和业务数据之间通过何种方式进行交互&lt;/p&gt;
&lt;p&gt;在这种背景下，出现了一些前端MVC、MVP、MVVM框架，我们把这些框架统称为MV*框架。这些框架的出现，都是为了解决上面这些问题，具体的实现思路各有不同，主流的有Backbone，AngularJS，Ember，Spine等等，本文主要选用Backbone和AngularJS来讲述以下场景。&lt;/p&gt;
&lt;h3 id=&quot;u6570_u636E_u6A21_u578B&quot;&gt;&lt;a href=&quot;#u6570_u636E_u6A21_u578B&quot; class=&quot;headerlink&quot; title=&quot;数据模型&quot;&gt;&lt;/a&gt;数据模型&lt;/h3&gt;&lt;p&gt;在这些框架里，定义数据模型的方式与以往有些差异，主要在于数据的get和set更加有意义了，比如说，可以把某个实体的get和set绑定到RESTful的服务上，这样，对某个实体的读写可以更新到数据库中。另外一个特点是，它们一般都提供一个事件，用于监控数据的变化，这个机制使得数据绑定成为可能。&lt;br&gt;在一些框架中，数据模型需要在原生的JavaScript类型上做一层封装，比如Backbone的方式是这样：&lt;br&gt;&lt;figure class=&quot;highlight actionscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; Todo = Backbone.Model.extend(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Default attributes for the todo item.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    defaults : &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            title : &lt;span class=&quot;string&quot;&gt;&quot;empty todo...&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            order : Todos.nextOrder(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            done : &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Ensure that each todo created has `title`.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    initialize : &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;title&quot;&lt;/span&gt;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&quot;title&quot;&lt;/span&gt; : &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.defaults().title&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Toggle the &#39;done&#39; state of this todo item.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    toggle : &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.save(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            done : !&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;done&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;u63A7_u5236_u5668&quot;&gt;&lt;a href=&quot;#u63A7_u5236_u5668&quot; class=&quot;headerlink&quot; title=&quot;控制器&quot;&gt;&lt;/a&gt;控制器&lt;/h3&gt;&lt;p&gt;在Backbone中，是没有独立的控制器的，它的一些控制的职责都放在了视图里，所以其实这是一种MVP（Model View Presentation）模式，而AngularJS有很清晰的控制器层。&lt;/p&gt;
&lt;p&gt;还是以这个todo为例，在AngularJS中，会有一些约定的注入，比如$scope，它是控制器、模型和视图之间的桥梁。在控制器定义的时候，将$scope作为参数，然后，就可以在控制器里面为它添加模型的支持。&lt;br&gt;&lt;figure class=&quot;highlight xquery&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; TodoCtrl(&lt;span class=&quot;variable&quot;&gt;$scope&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;variable&quot;&gt;$scope&lt;/span&gt;.todos = [&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        text : &lt;span class=&quot;string&quot;&gt;&#39;learn angular&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        done : true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        text : &lt;span class=&quot;string&quot;&gt;&#39;build an angular app&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        done : false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;variable&quot;&gt;$scope&lt;/span&gt;.addTodo = function() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;variable&quot;&gt;$scope&lt;/span&gt;.todos.push(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            text : &lt;span class=&quot;variable&quot;&gt;$scope&lt;/span&gt;.todoText,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            done : false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;variable&quot;&gt;$scope&lt;/span&gt;.todoText = &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;variable&quot;&gt;$scope&lt;/span&gt;.remaining = function() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        var count = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        angular.forEach(&lt;span class=&quot;variable&quot;&gt;$scope&lt;/span&gt;.todos, function(todo) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            count += todo.done ? &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; : &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return count;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;variable&quot;&gt;$scope&lt;/span&gt;.archive = function() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        var oldTodos = &lt;span class=&quot;variable&quot;&gt;$scope&lt;/span&gt;.todos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;variable&quot;&gt;$scope&lt;/span&gt;.todos = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        angular.forEach(oldTodos, function(todo) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            if (!todo.done)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;variable&quot;&gt;$scope&lt;/span&gt;.todos.push(todo);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;u89C6_u56FE&quot;&gt;&lt;a href=&quot;#u89C6_u56FE&quot; class=&quot;headerlink&quot; title=&quot;视图&quot;&gt;&lt;/a&gt;视图&lt;/h3&gt;&lt;p&gt;在这些主流的MV*框架中，一般都提供了定义视图的功能。在Backbone中，是这样定义视图的：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// The DOM element for a todo item...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; TodoView = Backbone.View.extend(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//... is a list tag.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tagName : &lt;span class=&quot;string&quot;&gt;&quot;li&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Cache the template function for a single item.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    template : _.template($(&lt;span class=&quot;string&quot;&gt;&#39;#item-template&#39;&lt;/span&gt;).html()),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// The DOM events specific to an item.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    events : &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;click .toggle&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;toggleDone&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;dblclick .view&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;edit&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;click a.destroy&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;clear&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;keypress .edit&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;updateOnEnter&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;blur .edit&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;close&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// The TodoView listens for changes to its model, re-rendering. Since there&#39;s&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// a one-to-one correspondence between a **Todo** and a **TodoView** in this&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// app, we set a direct reference on the model for convenience.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    initialize : &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.listenTo(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.model, &lt;span class=&quot;string&quot;&gt;&#39;change&#39;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.render);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.listenTo(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.model, &lt;span class=&quot;string&quot;&gt;&#39;destroy&#39;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.remove);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Re-render the titles of the todo item.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    render : &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.$el.html(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.template(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.model.toJSON()));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.$el.toggleClass(&lt;span class=&quot;string&quot;&gt;&#39;done&#39;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.model.get(&lt;span class=&quot;string&quot;&gt;&#39;done&#39;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.input = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.$(&lt;span class=&quot;string&quot;&gt;&#39;.edit&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//......&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Remove the item, destroy the model.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    clear : &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.model.destroy();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;/image/asd.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;u53C2_u8003_u6587_u732E_uFF1A&quot;&gt;&lt;a href=&quot;#u53C2_u8003_u6587_u732E_uFF1A&quot; class=&quot;headerlink&quot; title=&quot;参考文献：&quot;&gt;&lt;/a&gt;参考文献：&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://any9.com/1524.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://any9.com/1524.html&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://blog.jobbole.com/45169/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.jobbole.com/45169/&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://blog.jobbole.com/45170/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.jobbole.com/45170/&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://blog.jobbole.com/41988/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.jobbole.com/41988/&lt;/a&gt;&lt;br&gt;我毕竟不是一个前端dev，有所疏漏尽请原谅，还有转载和抄录了一些人的blog 也请大家谅解，只是想写一些前端的文章给qa用。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;u524D_u7AEF_u6D4B_u8BD5_u8FDB_u5316_u8BBA&quot;&gt;&lt;a href=&quot;#u524D_u7AEF_u6D4B_u8BD5_u8FDB_u5316_u8BBA&quot; class=&quot;headerlink&quot; title=&quot;前端测试进化论&quot;&gt;&lt;
    
    </summary>
    
    
      <category term="front-end" scheme="http://yoursite.com/tags/front-end/"/>
    
  </entry>
  
  <entry>
    <title>gulp_for_qa</title>
    <link href="http://yoursite.com/2016/01/25/gulp_for_qa/"/>
    <id>http://yoursite.com/2016/01/25/gulp_for_qa/</id>
    <published>2016-01-25T07:13:20.000Z</published>
    <updated>2016-01-25T07:17:22.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;gulp__u4ECB_u7ECD&quot;&gt;&lt;a href=&quot;#gulp__u4ECB_u7ECD&quot; class=&quot;headerlink&quot; title=&quot;gulp 介绍&quot;&gt;&lt;/a&gt;gulp 介绍&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/image/Picture1.png&quot; alt=&quot;gulp&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;u4EC0_u4E48_u662Fgulp_3F_u8FD9_u548C_u6211_u4EECqa_u6709_u4EC0_u4E48_u5173_u7CFB_uFF1F&quot;&gt;&lt;a href=&quot;#u4EC0_u4E48_u662Fgulp_3F_u8FD9_u548C_u6211_u4EECqa_u6709_u4EC0_u4E48_u5173_u7CFB_uFF1F&quot; class=&quot;headerlink&quot; title=&quot;什么是gulp?这和我们qa有什么关系？&quot;&gt;&lt;/a&gt;什么是gulp?这和我们qa有什么关系？&lt;/h3&gt;&lt;p&gt;Gulp.js 是一个自动化构建工具,开发者可以使用它在项目开发过程中自动执行常见任务。&lt;br&gt;入门指南&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;全局安装 gulp：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install --global gulp&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;作为项目的开发依赖（devDependencies）安装：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install --save-dev gulp&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在项目根目录下创建一个名为 gulpfile.js 的文件：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var gulp = require(&lt;span class=&quot;string&quot;&gt;&#39;gulp&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gulp.task(&lt;span class=&quot;string&quot;&gt;&#39;default&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;function&lt;/span&gt;&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  // 将你的默认的任务代码放在这&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;运行 gulp：&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ gulp&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;默认的名为 default 的任务（task）将会被运行，在这里，这个任务并未做任何事情。&lt;br&gt;想要单独执行特定的任务（task），请输入 gulp &lt;task&gt; &lt;othertask&gt;。&lt;/othertask&gt;&lt;/task&gt;&lt;/p&gt;
&lt;p&gt;官网:&lt;br&gt;&lt;a href=&quot;http://www.gulpjs.com.cn/docs/getting-started/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.gulpjs.com.cn/docs/getting-started/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;gulp api 非常简单，只有5个task，run，watch，src，和dest.&lt;/p&gt;
&lt;p&gt;是的 你只需要搞懂这5个api 完全够用。&lt;/p&gt;
&lt;p&gt;Gulp 能帮助我们更好更快的进行测试，制定标准等工作。&lt;/p&gt;
&lt;h2 id=&quot;eslint&quot;&gt;&lt;a href=&quot;#eslint&quot; class=&quot;headerlink&quot; title=&quot;eslint&quot;&gt;&lt;/a&gt;eslint&lt;/h2&gt;&lt;p&gt;Javascript代码验证工具,这种工具可以检查你的代码并提供相关的代码改进意见&lt;br&gt;最大卖点，可以通过插件实现自定义规则&lt;/p&gt;
&lt;p&gt;例如 gc 这边用的angluar&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/eslint-plugin-angular&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.npmjs.com/package/eslint-plugin-angular&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;使用npm 安装jslint 插件&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install gulp-eslint --save-dev&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;配置 .eslintrc文件&lt;/p&gt;
&lt;p&gt;设置js规范的文件&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;env&quot;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;browser&quot;&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;globals&quot;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;angular&quot;&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;rules&quot;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;camelcase&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;curly&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;brace-style&quot;&lt;/span&gt;: [&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;1tbs&quot;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;quotes&quot;&lt;/span&gt;: [&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;single&quot;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;semi&quot;&lt;/span&gt;: [&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;always&quot;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;space-in-brackets&quot;&lt;/span&gt;: [&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;never&quot;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;space-infix-ops&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;配置 gulpfile&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var eslint = require(&lt;span class=&quot;string&quot;&gt;&#39;gulp-eslint&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gulp.task(&lt;span class=&quot;string&quot;&gt;&#39;lint&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;function&lt;/span&gt;&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; gulp.src(path.JS)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .pipe(eslint())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .pipe(eslint.format());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ gulp lint&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;u53C2_u8003_uFF1A&quot;&gt;&lt;a href=&quot;#u53C2_u8003_uFF1A&quot; class=&quot;headerlink&quot; title=&quot;参考：&quot;&gt;&lt;/a&gt;参考：&lt;/h4&gt;&lt;p&gt;运行 gulp lint 命令&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.jianshu.com/p/c599185a0d84&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.jianshu.com/p/c599185a0d84&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;jshint jslint jscs eslint的对比&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://developer.51cto.com/art/201506/481510.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://developer.51cto.com/art/201506/481510.htm&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.sitepoint.com/comparison-javascript-linting-tools/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.sitepoint.com/comparison-javascript-linting-tools/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;##browersync&lt;/p&gt;
&lt;p&gt;Browsersync能让浏览器实时、快速响应您的文件更改（html、js、css、sass、less等）并自动刷新页面。更重要的是 Browsersync可以同时在PC、平板、手机等设备下进项调试。您可以想象一下：“假设您的桌子上有pc、ipad、iphone、android等设备，同时打开了您需要调试的页面，当您使用browsersync后，您的任何一次代码保存，以上的设备都会同时显示您的改动”。无论您是前端还是后端工程师，使用它将提高您30%的工作效率。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install browser-sync gulp --save-dev&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;配置gulpfile&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var path = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        HTML : &lt;span class=&quot;string&quot;&gt;&quot;html/*.html&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        LESS : &lt;span class=&quot;string&quot;&gt;&quot;less/*.less&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CSS : &lt;span class=&quot;string&quot;&gt;&quot;css/*.css&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        JS : &lt;span class=&quot;string&quot;&gt;&quot;js/*.js&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gulp.task(&lt;span class=&quot;string&quot;&gt;&quot;serve&quot;&lt;/span&gt;, [&lt;span class=&quot;string&quot;&gt;&quot;less&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;js-watch&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;html&quot;&lt;/span&gt;], &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;function&lt;/span&gt;&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    browserSync.init(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        server : &lt;span class=&quot;string&quot;&gt;&quot;./&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    gulp.watch(path.LESS, [&lt;span class=&quot;string&quot;&gt;&quot;less&quot;&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    gulp.watch(path.JS, [&lt;span class=&quot;string&quot;&gt;&quot;js-watch&quot;&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    gulp.watch(path.HTML, [&lt;span class=&quot;string&quot;&gt;&quot;html&quot;&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    gulp.watch(path.HTML).on(&lt;span class=&quot;string&quot;&gt;&quot;change&quot;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;function&lt;/span&gt;&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        browserSync.reload;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gulp.task(&lt;span class=&quot;string&quot;&gt;&quot;less&quot;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;function&lt;/span&gt;&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    gulp.src(path.LESS)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .pipe(less())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .pipe(gulp.dest(path.CSS))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .pipe(browserSync.stream());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gulp.task(&lt;span class=&quot;string&quot;&gt;&quot;js-watch&quot;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;function&lt;/span&gt;&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    gulp.src(path.JS)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .pipe(browserSync.stream());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gulp.task(&lt;span class=&quot;string&quot;&gt;&quot;html&quot;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;function&lt;/span&gt;&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    gulp.src(path.HTML)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .pipe(browserSync.stream());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;运行命令&lt;br&gt;就可以看到代码变更对不同浏览器页面造成的影响了。&lt;br&gt;&lt;img src=&quot;/image/Picture2.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;u53C2_u8003_u6587_u6863&quot;&gt;&lt;a href=&quot;#u53C2_u8003_u6587_u6863&quot; class=&quot;headerlink&quot; title=&quot;参考文档&quot;&gt;&lt;/a&gt;参考文档&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;http://www.browsersync.cn/docs/gulp/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.browsersync.cn/docs/gulp/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;开启代理模式&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;browser-sync start --proxy &lt;span class=&quot;string&quot;&gt;&quot;http://localhost:3000/products/voip-phones/yealink-t20p&quot;&lt;/span&gt; --host &lt;span class=&quot;string&quot;&gt;&quot;http://localhost:3001/products/voip-phones/yealink-t20p&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gulp-istanbul&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;##Istanbul 是 JavaScript 程序的代码覆盖率工具&lt;br&gt;•    行覆盖率（line coverage）：是否每一行都执行了？&lt;/p&gt;
&lt;p&gt;•    函数覆盖率（function coverage）：是否每个函数都调用了？&lt;/p&gt;
&lt;p&gt;•    分支覆盖率（branch coverage）：是否每个if代码块都执行了？&lt;/p&gt;
&lt;p&gt;•    语句覆盖率（statement coverage）：是否每个语句都执行了？&lt;/p&gt;
&lt;p&gt;配置gulpfile文件&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;gulp.task(&lt;span class=&quot;string&quot;&gt;&#39;pre-test&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;function&lt;/span&gt;&lt;/span&gt; () &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; gulp.src([&lt;span class=&quot;string&quot;&gt;&#39;js/*.js&#39;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // Covering files&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .pipe(istanbul())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // Force `require` to &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; covered files&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .pipe(istanbul.hookRequire());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gulp.task(&lt;span class=&quot;string&quot;&gt;&#39;test&#39;&lt;/span&gt;, [&lt;span class=&quot;string&quot;&gt;&#39;pre-test&#39;&lt;/span&gt;], &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;function&lt;/span&gt;&lt;/span&gt; () &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; gulp.src([&lt;span class=&quot;string&quot;&gt;&#39;test/*.js&#39;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .pipe(mocha())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // Creating the reports after tests ran&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .pipe(istanbul.enforceThresholds(&amp;#123; thresholds: &amp;#123; global: &lt;span class=&quot;number&quot;&gt;90&lt;/span&gt; &amp;#125; &amp;#125;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .pipe(istanbul.writeReports(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      dir: &lt;span class=&quot;string&quot;&gt;&#39;./assets/unit-test-coverage&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          reporters: [ &lt;span class=&quot;string&quot;&gt;&#39;lcov&#39;&lt;/span&gt; ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          reportOpts: &amp;#123; dir: &lt;span class=&quot;string&quot;&gt;&#39;./assets/unit-test-coverage&#39;&lt;/span&gt;&amp;#125; &amp;#125;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;运行gulp 命令&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/image/Picture3.png&quot; alt=&quot;image1&quot;&gt;&lt;/p&gt;
&lt;p&gt;####参考：&lt;br&gt;&lt;a href=&quot;http://www.ruanyifeng.com/blog/2015/06/istanbul.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.ruanyifeng.com/blog/2015/06/istanbul.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.oskoui-oskoui.com/?p=8478&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.oskoui-oskoui.com/?p=8478&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/SBoudrias/gulp-istanbul&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/SBoudrias/gulp-istanbul&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;##所有例子用的repo&lt;br&gt;&lt;a href=&quot;https://github.com/qileilove/gulp_qa&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/qileilove/gulp_qa&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;gulp__u4ECB_u7ECD&quot;&gt;&lt;a href=&quot;#gulp__u4ECB_u7ECD&quot; class=&quot;headerlink&quot; title=&quot;gulp 介绍&quot;&gt;&lt;/a&gt;gulp 介绍&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/image/Picture1.png&quot;
    
    </summary>
    
    
      <category term="gulp" scheme="http://yoursite.com/tags/gulp/"/>
    
  </entry>
  
</feed>
