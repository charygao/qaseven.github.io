<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-12-11T09:44:43.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>espresso系列3--测试实践</title>
    <link href="http://yoursite.com/2016/12/08/espresso3/"/>
    <id>http://yoursite.com/2016/12/08/espresso3/</id>
    <published>2016-12-08T14:30:17.000Z</published>
    <updated>2016-12-11T09:44:43.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;u524D_u8A00&quot;&gt;&lt;a href=&quot;#u524D_u8A00&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;前2篇我们已经详细介绍了espresso的架构以及相应的API，相信大家也有了一定的了解，理论讲的再多，还是不如手上自己敲一遍代码。&lt;br&gt;还是深入浅出系列的套路，让我这个小司机带大家一步一步进入espresso的世界吧。&lt;/p&gt;
&lt;h2 id=&quot;u73AF_u5883_u51C6_u5907&quot;&gt;&lt;a href=&quot;#u73AF_u5883_u51C6_u5907&quot; class=&quot;headerlink&quot; title=&quot;环境准备&quot;&gt;&lt;/a&gt;环境准备&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://f.hiphotos.baidu.com/baike/c0%3Dbaike80%2C5%2C5%2C80%2C26/sign=1b0dc3d30d2442a7ba03f5f7b02ac62e/6159252dd42a2834b1c7cf5b59b5c9ea15cebf79.jpg&quot; alt=&quot;github&quot;&gt;&lt;br&gt;github，如果你还用svn的话，请放弃阅读本系列文章，太low了，而且本系列的code都是采用google官方的espresso的demo，都来源于github。&lt;br&gt;&lt;img src=&quot;http://web.img.chuanke.com/course/2015-03/04/208e43b22dffd2a46a88f2a610c77e35.jpg&quot; alt=&quot;android studio&quot;&gt;&lt;br&gt;android studio,这个不用说，目前android开发者最好的工具，并且他有很多帮助espresso测试的插件或功能，比如录制功能等。&lt;br&gt;&lt;img src=&quot;http://i1.wp.com/photo.sofun.tw/2013/09/Android-SDK-ADT-Bundle-Logo.jpg&quot; alt=&quot;android sdk&quot;&gt;&lt;br&gt;android sdk，这个更不用说，如果你连这个都没，还学什么android。&lt;br&gt;&lt;img src=&quot;http://img1.imgtn.bdimg.com/it/u=2429262149,756671414&amp;amp;fm=21&amp;amp;gp=0.jpg&quot; alt=&quot;genymotion&quot;&gt;&lt;br&gt;genymotion,android目前来说最好的模拟器，虽然原生的也很不错，但是开发者首先得还是genymotion&lt;/p&gt;
&lt;h3 id=&quot;u9996_u5148_u4F7F_u7528android_studio_u521B_u5EFA_u9879_u76EE&quot;&gt;&lt;a href=&quot;#u9996_u5148_u4F7F_u7528android_studio_u521B_u5EFA_u9879_u76EE&quot; class=&quot;headerlink&quot; title=&quot;首先使用android studio创建项目&quot;&gt;&lt;/a&gt;首先使用android studio创建项目&lt;/h3&gt;&lt;p&gt;最好你已经拥有了项目源码，espresso并不是单纯的黑盒ui测试工具，它能干得事情很多，包括单元测试，集成测试，甚至在mock服务，以及将你需要的内容注入到代码中，所以我把称为灰盒工具。&lt;br&gt;如果之前没有做个android项目的话，也可以在github上找一些开源的android app 练手。不过建议大家从espresso demo库入手。&lt;/p&gt;
&lt;h4 id=&quot;u521B_u5EFA_u9879_u76EE&quot;&gt;&lt;a href=&quot;#u521B_u5EFA_u9879_u76EE&quot; class=&quot;headerlink&quot; title=&quot;创建项目&quot;&gt;&lt;/a&gt;创建项目&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;/image/android_studio.png&quot; alt=&quot;android_studio&quot;&gt;&lt;/p&gt;
&lt;p&gt;如上图，我们可以创建新的项目，导入已经存在android项目，从版本管理软件中导入，从gradle等其他工具中导入，以及获取android代码样例导入。&lt;br&gt;google android 所有的测试demo都在以下github地址&lt;br&gt;&lt;a href=&quot;https://github.com/googlesamples/android-testing.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;    https://github.com/googlesamples/android-testing.git&lt;/a&gt;&lt;br&gt;下载完成后，我们进入espresso目录，可以看到espresso的demo还是很丰富的。&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;# lqi @ CNlqi-&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; in ~/work/test/android/android-testing on git:master x [&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;19&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ cd ui/espresso&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;# lqi @ CNlqi-&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; in ~/work/test/android/android-testing/ui/espresso on git:master x [&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;19&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;31&lt;/span&gt;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ ls&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;BasicSample           CustomMatcherSample   EspressoSpoonDemo     IntentsAdvancedSample MultiWindowSample     WebBasicSample&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;BasicSampleBundled    DataAdapterSample     IdlingResourceSample  IntentsBasicSample    RecyclerViewSample    spoon-gradle-plugin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;# lqi @ CNlqi-&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; in ~/work/test/android/android-testing/ui/espresso on git:master x [&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;19&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;37&lt;/span&gt;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ cd BasicSample&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;# lqi @ CNlqi-&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; in ~/work/test/android/android-testing/ui/espresso/BasicSample on git:master x [&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;19&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ pwd&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/Users/lqi/work/test/android/android-testing/ui/espresso/BasicSample&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;# lqi @ CNlqi-&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; in ~/work/test/android/android-testing/ui/espresso/BasicSample on git:master x [&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;42&lt;/span&gt;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;u5BFC_u5165_u9879_u76EE&quot;&gt;&lt;a href=&quot;#u5BFC_u5165_u9879_u76EE&quot; class=&quot;headerlink&quot; title=&quot;导入项目&quot;&gt;&lt;/a&gt;导入项目&lt;/h4&gt;&lt;p&gt;选择&lt;code&gt;BasicSample&lt;/code&gt;导入或者直接命令行&lt;code&gt;studio .&lt;/code&gt;打开该项目。&lt;br&gt;&lt;img src=&quot;/image/android_menu.png&quot; alt=&quot;android_menu&quot;&gt;·&lt;br&gt;外层的build.gradle文件设置的是整个项目的一些配置,例如依赖的类库，远程的仓库repositories。编译器的版本，espresso的版本等。&lt;/p&gt;
&lt;figure class=&quot;highlight gradle&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Top-level build file where you can add configuration options common to all sub-projects/modules.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;buildscript&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;repositories&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        jcenter()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;dependencies&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;classpath&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;com.android.tools.build:gradle:2.1.2&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// &lt;span class=&quot;doctag&quot;&gt;NOTE:&lt;/span&gt; Do not place your application dependencies here; they belong&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// in the individual module build.gradle files&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;allprojects&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;repositories&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        jcenter()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ext &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    buildToolsVersion = &lt;span class=&quot;string&quot;&gt;&quot;24.0.1&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    supportLibVersion = &lt;span class=&quot;string&quot;&gt;&quot;24.2.0&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    runnerVersion = &lt;span class=&quot;string&quot;&gt;&quot;0.5&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    rulesVersion = &lt;span class=&quot;string&quot;&gt;&quot;0.5&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    espressoVersion = &lt;span class=&quot;string&quot;&gt;&quot;2.2.2&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;u76EE_u5F55_u7ED3_u6784&quot;&gt;&lt;a href=&quot;#u76EE_u5F55_u7ED3_u6784&quot; class=&quot;headerlink&quot; title=&quot;目录结构&quot;&gt;&lt;/a&gt;目录结构&lt;/h4&gt;&lt;p&gt;app目录为项目主目录包含项目源代码以及测试代码&lt;br&gt;app里面也包含build.gradle文件，有时候项目可能包含几个主目录，那么各个目录的下的build.gradle文件都继承自顶层的build.gradle文件。&lt;br&gt;app下的build.gradle文件配置了android的配置信息，以及会用到的依赖。&lt;/p&gt;
&lt;figure class=&quot;highlight gradle&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;apply plugin: &lt;span class=&quot;string&quot;&gt;&#39;com.android.application&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;android &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    compileSdkVersion &lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    buildToolsVersion rootProject.buildToolsVersion&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    defaultConfig &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        applicationId &lt;span class=&quot;string&quot;&gt;&quot;com.example.android.testing.espresso.BasicSample&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        minSdkVersion &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        targetSdkVersion &lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        versionCode &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        versionName &lt;span class=&quot;string&quot;&gt;&quot;1.0&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        testInstrumentationRunner &lt;span class=&quot;string&quot;&gt;&quot;android.support.test.runner.AndroidJUnitRunner&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    lintOptions &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        abortOnError &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    productFlavors &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;dependencies&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// App dependencies&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;compile&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;com.android.support:support-annotations:&#39;&lt;/span&gt; + rootProject.supportLibVersion;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;compile&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;com.google.guava:guava:18.0&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Testing-only dependencies&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Force usage of support annotations in the test app, since it is internally used by the runner module.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    androidTestCompile &lt;span class=&quot;string&quot;&gt;&#39;com.android.support:support-annotations:&#39;&lt;/span&gt; + rootProject.supportLibVersion;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    androidTestCompile &lt;span class=&quot;string&quot;&gt;&#39;com.android.support.test:runner:&#39;&lt;/span&gt; + rootProject.runnerVersion;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    androidTestCompile &lt;span class=&quot;string&quot;&gt;&#39;com.android.support.test:rules:&#39;&lt;/span&gt; + rootProject.rulesVersion;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    androidTestCompile &lt;span class=&quot;string&quot;&gt;&#39;com.android.support.test.espresso:espresso-core:&#39;&lt;/span&gt; + rootProject.espressoVersion;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;BasicSample APP就长样子。&lt;br&gt;&lt;img src=&quot;/image/启动espresso.png&quot; alt=&quot;启动espresso&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;u542F_u52A8_u6A21_u62DF_u5668&quot;&gt;&lt;a href=&quot;#u542F_u52A8_u6A21_u62DF_u5668&quot; class=&quot;headerlink&quot; title=&quot;启动模拟器&quot;&gt;&lt;/a&gt;启动模拟器&lt;/h4&gt;&lt;p&gt;首先启动android emulator/genymotion,之后直接点击run按钮就能部署app到模拟器上。&lt;br&gt;log如下.&lt;br&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Testing started at &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;32&lt;/span&gt; PM ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;09&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;04&lt;/span&gt;: Launching ChangeTextBehaviorTe...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ adb push /Users/lqi/work/test/android/android-testing/ui/espresso/BasicSample/app/build/outputs/apk/app-debug&lt;span class=&quot;class&quot;&gt;.apk&lt;/span&gt; /data/local/tmp/com&lt;span class=&quot;class&quot;&gt;.example&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.android&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.testing&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.espresso&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.BasicSample&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ adb shell pm install -r &lt;span class=&quot;string&quot;&gt;&quot;/data/local/tmp/com.example.android.testing.espresso.BasicSample&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	pkg: /data/local/tmp/com&lt;span class=&quot;class&quot;&gt;.example&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.android&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.testing&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.espresso&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.BasicSample&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Success&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ adb push /Users/lqi/work/test/android/android-testing/ui/espresso/BasicSample/app/build/outputs/apk/app-debug-androidTest-unaligned&lt;span class=&quot;class&quot;&gt;.apk&lt;/span&gt; /data/local/tmp/com&lt;span class=&quot;class&quot;&gt;.example&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.android&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.testing&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.espresso&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.BasicSample&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ adb shell pm install -r &lt;span class=&quot;string&quot;&gt;&quot;/data/local/tmp/com.example.android.testing.espresso.BasicSample.test&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	pkg: /data/local/tmp/com&lt;span class=&quot;class&quot;&gt;.example&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.android&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.testing&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.espresso&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.BasicSample&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Success&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Running tests&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ adb shell am instrument -w -r   -e debug false -e class com&lt;span class=&quot;class&quot;&gt;.example&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.android&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.testing&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.espresso&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.BasicSample&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.ChangeTextBehaviorTest&lt;/span&gt; com&lt;span class=&quot;class&quot;&gt;.example&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.android&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.testing&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.espresso&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.BasicSample&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.test&lt;/span&gt;/android&lt;span class=&quot;class&quot;&gt;.support&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.test&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.runner&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.AndroidJUnitRunner&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Client not ready yet..&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Started running tests&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Tests ran to completion.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;u7F16_u5199_u6D4B_u8BD5&quot;&gt;&lt;a href=&quot;#u7F16_u5199_u6D4B_u8BD5&quot; class=&quot;headerlink&quot; title=&quot;编写测试&quot;&gt;&lt;/a&gt;编写测试&lt;/h4&gt;&lt;p&gt;此实例BasicSample包含1个textView,1个EditText和2个button，当点击change text 按钮时，会将edittext的值填入textview中。当点击open activity and change text 按钮时，将打开一个新的页面（姑且叫这样吧）并将edittext内容显示在这个页面。&lt;br&gt;&lt;code&gt;@RunWith(AndroidJUnit4.class)&lt;/code&gt;&lt;br&gt;采用了JUnit 4风格进行编写&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;首先我们需要新建一个测试类。&lt;br&gt;&lt;code&gt;ChangeTextBehaviorTest&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight actionscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ChangeTextBehaviorTest&lt;/span&gt; &lt;/span&gt;&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;首先创建一个@Rule,ActivityTestRule用来指明被测试的Activity;&lt;br&gt;@Rule: 简单来说，是为各个测试方法提供一些支持。具体来说，比如我需要测试一个Activity，那么我可以在@Rule注解下面采用一个ActivityTestRule，该类提供了对相应Activity的功能测试的支持。该类可以在@Before和@Test标识的方法执行之前确保将Activity运行起来，并且在所有@Test和@After方法执行结束之后将Activity杀死。在整个测试期间，每个测试方法都可以直接对相应Activity进行修改和访问。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight d&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@Rule&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; ActivityTestRule&amp;lt;MainActivity&amp;gt; mActivityRule = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ActivityTestRule&amp;lt;&amp;gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           MainActivity.&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;标识一个测试方法。一个测试类中可以有多个测试方法，每个测试方法需要用一个@Test注解来标识。&lt;br&gt;以下代码找到editTextUserInput输入‘Espresso’，关闭键盘。点击changeTextBt按钮。检查textToBeChanged的值是否为‘Espresso’。&lt;figure class=&quot;highlight scss&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;at_rule&quot;&gt;@Test&lt;span class=&quot;preprocessor&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;preprocessor&quot;&gt; void&lt;/span&gt;&lt;span class=&quot;preprocessor&quot;&gt; changeText_sameActivity&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Type text and then press the button.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;onView&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;withId&lt;/span&gt;(R&lt;span class=&quot;class&quot;&gt;.id&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.editTextUserInput&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;class&quot;&gt;.perform&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;typeText&lt;/span&gt;(STRING_TO_BE_TYPED), &lt;span class=&quot;function&quot;&gt;closeSoftKeyboard&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;onView&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;withId&lt;/span&gt;(R&lt;span class=&quot;class&quot;&gt;.id&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.changeTextBt&lt;/span&gt;))&lt;span class=&quot;class&quot;&gt;.perform&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;click&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Check that the text was changed.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;onView&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;withId&lt;/span&gt;(R&lt;span class=&quot;class&quot;&gt;.id&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.textToBeChanged&lt;/span&gt;))&lt;span class=&quot;class&quot;&gt;.check&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;matches&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;withText&lt;/span&gt;(STRING_TO_BE_TYPED)));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;顺便说说其他junit4注解的用法&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@Before: 标识在运行测试方法之前运行的代码。可以支持同一个Class中有多个@Before，但是这些方法的执行顺序是随机的。该注解替代了JUnit 3中的setUp()方法。
@After: 标识在运行测试方法结束之后运行的代码。可以在其中做一些释放资源的操作。该注解替代了JUnit 3中的tearDown()方法。
@BeforeClass: 为测试类标识一个static方法，在测试之前只执行一次。
@AfterClass: 为测试类标识一个static方法，在所有测试方法结束之后只执行一次。
@Test(timeout=&amp;lt;milliseconds&amp;gt;): 为测试方法设定超时时间。
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;到了这里我们要说下怎么定位所需的元素，其实和web差不多，我们可以利用layout inspector与android device monitor工具。&lt;br&gt;&lt;img src=&quot;/image/android_device_monitor.png&quot; alt=&quot;android_device_monitor&quot;&gt;&lt;br&gt;&lt;img src=&quot;/image/android_layout_inspector.png&quot; alt=&quot;android_device_monitor&quot;&gt;&lt;br&gt;在写一个测试，在editTextUserInput输入‘Espresso’，之后关闭键盘。点击activityChangeTextBtn按钮，查看show_text_view的值是否为‘Espresso’。&lt;br&gt;&lt;figure class=&quot;highlight scss&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;at_rule&quot;&gt;@Test&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;preprocessor&quot;&gt; public&lt;/span&gt;&lt;span class=&quot;preprocessor&quot;&gt; void&lt;/span&gt;&lt;span class=&quot;preprocessor&quot;&gt; changeText_newActivity&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// Type text and then press the button.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;function&quot;&gt;onView&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;withId&lt;/span&gt;(R&lt;span class=&quot;class&quot;&gt;.id&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.editTextUserInput&lt;/span&gt;))&lt;span class=&quot;class&quot;&gt;.perform&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;typeText&lt;/span&gt;(STRING_TO_BE_TYPED),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;function&quot;&gt;closeSoftKeyboard&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;function&quot;&gt;onView&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;withId&lt;/span&gt;(R&lt;span class=&quot;class&quot;&gt;.id&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.activityChangeTextBtn&lt;/span&gt;))&lt;span class=&quot;class&quot;&gt;.perform&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;click&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// This view is in a different Activity, no need to tell Espresso.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;function&quot;&gt;onView&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;withId&lt;/span&gt;(R&lt;span class=&quot;class&quot;&gt;.id&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.show_text_view&lt;/span&gt;))&lt;span class=&quot;class&quot;&gt;.check&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;matches&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;withText&lt;/span&gt;(STRING_TO_BE_TYPED)));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;以上是espresso最常见的测试，希望大家能够好好理解。&lt;/p&gt;
&lt;h3 id=&quot;u63A5_u4E0B_u6765_u6211_u4EEC_u770B_u770Bespresso_u5982_u4F55_u5BF9AdapterView_u63A7_u5236_u5668_u6D4B_u8BD5_u3002&quot;&gt;&lt;a href=&quot;#u63A5_u4E0B_u6765_u6211_u4EEC_u770B_u770Bespresso_u5982_u4F55_u5BF9AdapterView_u63A7_u5236_u5668_u6D4B_u8BD5_u3002&quot; class=&quot;headerlink&quot; title=&quot;接下来我们看看espresso如何对AdapterView控制器测试。&quot;&gt;&lt;/a&gt;接下来我们看看espresso如何对AdapterView控制器测试。&lt;/h3&gt;&lt;p&gt;​AdapterView​ 是一个从适配器中动态加载数据的特殊控件。最常见的 ​AdapterView​ 是 ListView​。与像 ​LinearLayout​ 这样的静态控件相反，在当前视图结构中，可能只加载了 ​AdapterView​ 子控件的一部分， 简单的 ​onview()​ 可能会找不到当前没有被加载的视图。Espresso 通过提供单独的 onData()​方法来切入点处理此问题，它可以在操作适配器中有该问题的条目或该条目的子项之前将其加载（使其获取焦点）。&lt;br&gt;导入espresso demo中的MultiWindowSample项目&lt;br&gt;该测试是从ArrayAdapter类型的dropdown_item控件中选出需要的值，类似我们用搜索引擎时，显示的list。&lt;br&gt;&lt;figure class=&quot;highlight scss&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;at_rule&quot;&gt;@Test&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;preprocessor&quot;&gt; public&lt;/span&gt;&lt;span class=&quot;preprocessor&quot;&gt; void&lt;/span&gt;&lt;span class=&quot;preprocessor&quot;&gt; autoCompleteTextView_onDataClickAndCheck&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;comment&quot;&gt;// NB: The autocompletion box is implemented with a ListView, so the preferred way&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;comment&quot;&gt;// to interact with it is onData(). We can use inRoot here too!&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;function&quot;&gt;onView&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;withId&lt;/span&gt;(R&lt;span class=&quot;class&quot;&gt;.id&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.auto_complete_text_view&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;span class=&quot;class&quot;&gt;.perform&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;typeText&lt;/span&gt;(&quot;S&quot;), &lt;span class=&quot;function&quot;&gt;closeSoftKeyboard&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;comment&quot;&gt;// This is useful because some of the completions may not be part of the View Hierarchy&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;comment&quot;&gt;// unless you scroll around the list.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;function&quot;&gt;onData&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;allOf&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;instanceOf&lt;/span&gt;(String&lt;span class=&quot;class&quot;&gt;.class&lt;/span&gt;), &lt;span class=&quot;function&quot;&gt;is&lt;/span&gt;(&quot;Baltic Sea&quot;)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;span class=&quot;class&quot;&gt;.inRoot&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;withDecorView&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;not&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;is&lt;/span&gt;(mActivity&lt;span class=&quot;class&quot;&gt;.getWindow&lt;/span&gt;()&lt;span class=&quot;class&quot;&gt;.getDecorView&lt;/span&gt;()))))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;span class=&quot;class&quot;&gt;.perform&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;click&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;comment&quot;&gt;// The text should be filled in.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;function&quot;&gt;onView&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;withId&lt;/span&gt;(R&lt;span class=&quot;class&quot;&gt;.id&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.auto_complete_text_view&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;span class=&quot;class&quot;&gt;.check&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;matches&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;withText&lt;/span&gt;(&quot;Baltic Sea&quot;)));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;，AutoCompleteText的选择等。 这些测试项都有一个共同的特点。即不在主UI布局的结构(layout,及其include的layout)之中，是不能直接定位的。 所以这里就需要使用inRoot( ) 了。&lt;br&gt;&lt;code&gt;onData(allOf(instanceOf(String.class), is(&amp;quot;Baltic Sea&amp;quot;)))
        .inRoot(withDecorView(not(is(mActivity.getWindow().getDecorView()))))
        .perform(click());&lt;/code&gt;&lt;br&gt;以上代码就解决了之前UiAutomator不支持Toast的验证的问题。&lt;/p&gt;
&lt;h3 id=&quot;u8FD0_u884C_u6D4B_u8BD5&quot;&gt;&lt;a href=&quot;#u8FD0_u884C_u6D4B_u8BD5&quot; class=&quot;headerlink&quot; title=&quot;运行测试&quot;&gt;&lt;/a&gt;运行测试&lt;/h3&gt;&lt;p&gt;运行测试的方法很多，第一种命令行执行。&lt;br&gt;切换到当前项目目录，终端运行&lt;br&gt;&lt;code&gt;./gradlew cAT&lt;/code&gt;&lt;br&gt;其中，cAT意为connectedAndroidTest。&lt;/p&gt;
&lt;p&gt;另一种方式是在android studio中，点击run按钮，或者右键执行单一测试。&lt;br&gt;&lt;img src=&quot;/image/android_test.png&quot; alt=&quot;android_device_monitor&quot;&gt;&lt;/p&gt;
&lt;p&gt;这一章还是以基础的实践为主，之后我们将深入架构，来看看espresso的API 方法，帮助大家理解API 更好更快的编写测试。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;u524D_u8A00&quot;&gt;&lt;a href=&quot;#u524D_u8A00&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;前2篇我们已经详细介绍了espresso的架构以及相应的API，相信大家也有了一定的了解，理论讲的再多，
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>espresso基础架构与API分析</title>
    <link href="http://yoursite.com/2016/12/02/espresso2/"/>
    <id>http://yoursite.com/2016/12/02/espresso2/</id>
    <published>2016-12-02T03:57:43.000Z</published>
    <updated>2016-12-05T15:08:59.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;espresso_u57FA_u7840_u67B6_u6784_u4E0EAPI_u5206_u6790&quot;&gt;&lt;a href=&quot;#espresso_u57FA_u7840_u67B6_u6784_u4E0EAPI_u5206_u6790&quot; class=&quot;headerlink&quot; title=&quot;espresso基础架构与API分析&quot;&gt;&lt;/a&gt;espresso基础架构与API分析&lt;/h2&gt;&lt;p&gt;Espresso测试框架提供了一组API来构建UI测试，以测试应用程序内的用户流。 这些API让您能够编写简洁，运行可靠的自动化UI测试。 Espresso非常适合编写白盒式自动化测试，其中测试代码使用来自所测试的应用程序的实现代码细节。&lt;/p&gt;
&lt;p&gt;Espresso测试框架的主要功能包括：&lt;/p&gt;
&lt;p&gt;用于在目标应用程序中查看和适配器匹配的灵活API。 有关详细信息，请参阅&lt;a href=&quot;https://developer.android.com/topic/libraries/testing-support-library/index.html#espresso-matching&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;View matching&lt;/a&gt;。&lt;br&gt;一组广泛的操作API，用于自动化UI交互。 有关更多信息，请参阅&lt;a href=&quot;https://developer.android.com/topic/libraries/testing-support-library/index.html#espresso-actions&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; Action APIs&lt;/a&gt;。&lt;br&gt;UI线程同步提高测试的可靠性。 有关更多信息，请参阅 &lt;a href=&quot;https://developer.android.com/topic/libraries/testing-support-library/index.html#espresso-thread-sync&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;UI thread synchronization&lt;/a&gt;。&lt;br&gt;可以作为参数传入 ​ViewInteraction.check()​方法中的 ViewAssertion 的集合。通常，你会使用带有视图匹配器的匹配断言来判断当前被选中视图的状态，请参阅&lt;a href=&quot;https://developer.android.com/reference/android/support/test/espresso/assertion/package-summary.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ViewAssertions&lt;/a&gt;&lt;br&gt;需要Android 2.2（API级别8）或更高版本。&lt;/p&gt;
&lt;h2 id=&quot;View_matching&quot;&gt;&lt;a href=&quot;#View_matching&quot; class=&quot;headerlink&quot; title=&quot;View matching&quot;&gt;&lt;/a&gt;View matching&lt;/h2&gt;&lt;h3 id=&quot;onView_28_29&quot;&gt;&lt;a href=&quot;#onView_28_29&quot; class=&quot;headerlink&quot; title=&quot;onView()&quot;&gt;&lt;/a&gt;onView()&lt;/h3&gt;&lt;p&gt;Espresso.onView()方法允许您访问目标应用程序中的UI组件并与其进行交互。 该方法接受Matcher参数并搜索视图层次以定位满足某些给定标准的对应View实例。 您可以通过指定以下条件来优化搜索：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;视图的类名&lt;/li&gt;
&lt;li&gt;视图的内容描述&lt;/li&gt;
&lt;li&gt;视图的R.id&lt;/li&gt;
&lt;li&gt;视图中显示的文本&lt;br&gt;例如，要定位ID值为my_button的按钮，您可以指定一个匹配器，如下所示：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;onView（withId（R.id.my_button））;&lt;/code&gt;&lt;br&gt;如果搜索成功，onView()方法返回一个引用，该引用允许您对目标视图执行用户操作和测试断言。&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;ViewInteraction &lt;span class=&quot;title&quot;&gt;onView&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; Matcher&amp;lt;View&amp;gt; viewMatcher)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; BASE.plus(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ViewInteractionModule(viewMatcher)).viewInteraction();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;ViewMatchers&quot;&gt;&lt;a href=&quot;#ViewMatchers&quot; class=&quot;headerlink&quot; title=&quot;ViewMatchers&quot;&gt;&lt;/a&gt;ViewMatchers&lt;/h4&gt;&lt;p&gt;onView方法需要传入类型为Matcher&lt;view&gt;泛型viewMatcher对象.&lt;/view&gt;&lt;/p&gt;
&lt;p&gt;ViewMatchers类中方法有&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;isAssignableFrom，withClassName，isDisplayed，isCompletelyDisplayed，isDisplayingAtLeast，isEnabled，isFocusable，hasFocus，isSelected，hasSibling，withContentDescription，withContentDescription，withContentDescription，withId，withResourceName，withTagKey，withTagValue，withText，withCharSequence，withHint，isChecked，isNotChecked，withCheckBoxState，hasContentDescription，hasDescendant，isClickable，isDescendantOfA，withEffectiveVisibility，withParent，withChild，isRoot，supportsInputMethods，hasImeAction，hasImeAction，hasLinks，assertThat，withSpinnerText，isJavascriptEnabled，hasErrorText，withInputType。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt; 这些方法能够帮助我们快速定位到特定的视图。&lt;br&gt; 我们来看看常用的几个方法&lt;br&gt; withId&lt;br&gt; 返回基于资源ids匹配视图的匹配器。&lt;br&gt; withText&lt;br&gt; 返回基于TextView的文本属性值匹配TextView的匹配器。&lt;br&gt;&lt;code&gt;onView(allOf(withId(R.id.my_view), withText(&amp;quot;Hello!&amp;quot;)))&lt;/code&gt;&lt;br&gt; isDisplayed&lt;br&gt; 返回与当前显示在屏幕上的视图匹配的匹配器给用户。&lt;br&gt; 如下&lt;/p&gt;
&lt;p&gt; &lt;code&gt;Espresso.onView(ViewMatchers.withId(R.id.mpu_summary_send_receipt_button))
          .check(ViewAssertions.matches(ViewMatchers.isDisplayed()));&lt;/code&gt;&lt;br&gt;其他API方法可以在以下文档中找到具体用法和解释，我们并不需要记住每个方法，遇到具体的场景的时候再过来查询也来得及&lt;br&gt;&lt;a href=&quot;https://developer.android.com/reference/android/support/test/espresso/matcher/ViewMatchers.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;viewmatchers-API&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;ViewMatchers_u4E0Ehamcrest_u5339_u914D_u5668_u914D_u5408_u4F7F_u7528&quot;&gt;&lt;a href=&quot;#ViewMatchers_u4E0Ehamcrest_u5339_u914D_u5668_u914D_u5408_u4F7F_u7528&quot; class=&quot;headerlink&quot; title=&quot;ViewMatchers与hamcrest匹配器配合使用&quot;&gt;&lt;/a&gt;ViewMatchers与hamcrest匹配器配合使用&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;什么是hamcrest？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Hamcrest框架是junit4框架新引入的断言框架，Hamcest提供了一套匹配符Matcher，这些匹配符更接近自然语言，可读性高，更加灵活。&lt;br&gt;我们可以通过各种viewmatchers与Hamcrest组合匹配器来缩小搜索的范围。&lt;br&gt;如以下示例所示：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;onView(allOf(withId(R.id.button_signin), withText(&amp;quot;Sign-in&amp;quot;)));&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;你也可以使用 ​not​ 反转匹配：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;onView(allOf(withId(R.id.button_signin), not(withText(&amp;quot;Sign-out&amp;quot;))));&lt;/code&gt;&lt;br&gt;&lt;strong&gt;注意：&lt;/strong&gt;&lt;br&gt;一个工程化的应用中，所有用户可与之交互的视图都应该包含说明文字或有一个内容描述（参考 Android 可访问性指导）。如果你不能通过使用 ‘withText’ 或 ‘withContentDescripiton’ 来缩小onView的搜索范围，可以认为这是一个可访问性的 bug。&lt;/p&gt;
&lt;p&gt;请使用最少的匹配器来定位视图。不要过指定，因为这将强制框架做无用功。例如，如果一个视图可以通过它的文字唯一确定，你不需要说明该视图也可以通过 ​TextView​ 指定。对许多视图而言，使用它的​R.id​值就足够了。&lt;/p&gt;
&lt;p&gt;更多的hamcrest api请查看&lt;br&gt;&lt;a href=&quot;http://hamcrest.org/JavaHamcrest/javadoc/1.3/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hamcrest api&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;###onData&lt;br&gt;当espresso在AdapterView中查找视图时需要用onData方法，例如在AdapterView小部件中，视图在运行时动态填充子视图。如果要测试的目标视图位于AdapterView（例如ListView，GridView或Spinner）中，则onView()方法可能无法工作，因为只有一部分视图可能会加载到当前视图层次结构中。&lt;/p&gt;
&lt;p&gt;相反，调用onData()方法可获取DataInteraction对象以访问目标视图元素。 Espresso处理将目标视图元素加载到当前视图层次结构中。 Espresso还负责滚动到目标元素，并将放在焦点元素。&lt;/p&gt;
&lt;p&gt;注意：onData()方法不检查您指定的项目是否与视图对应。 Espresso仅搜索当前视图层次结构。如果没有找到匹配，该方法将抛出NoMatchingViewException异常。&lt;/p&gt;
&lt;p&gt;下面的代码片段展示了如何使用onData()方法和Hamcrest匹配来搜索包含给定字符串的列表中的特定行。在此示例中，LongListActivity类包含通过SimpleAdapter公开的字符串列表。&lt;/p&gt;
&lt;figure class=&quot;highlight lisp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;onData&lt;span class=&quot;list&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;allOf&lt;/span&gt;&lt;span class=&quot;list&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;list&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;instanceOf&lt;/span&gt;&lt;span class=&quot;list&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;Map&lt;/span&gt;.class)&lt;/span&gt;)&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        hasEntry&lt;span class=&quot;list&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;equalTo&lt;/span&gt;&lt;span class=&quot;list&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;LongListActivity&lt;/span&gt;.ROW_TEXT)&lt;/span&gt;, is&lt;span class=&quot;list&quot;&gt;(&lt;span class=&quot;string&quot;&gt;&quot;test input&quot;&lt;/span&gt;)&lt;/span&gt;)&lt;/span&gt;)&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Performing_Actions&quot;&gt;&lt;a href=&quot;#Performing_Actions&quot; class=&quot;headerlink&quot; title=&quot;Performing Actions&quot;&gt;&lt;/a&gt;Performing Actions&lt;/h2&gt;&lt;p&gt;调用ViewInteraction.perform()或DataInteraction.perform()方法来模拟UI组件上的用户交互。您必须传入一个或多个ViewAction对象作为参数。Espresso按照给定的顺序依次触发每个动作，并在主线程中执行它们。&lt;br&gt;ViewActions类提供了指定常用操作的帮助方法列表。您可以使用这些方法作为方便的快捷方式，而不是创建和配置单个ViewAction对象。您可以指定以下操作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ViewActions.click()：点击视图。&lt;/li&gt;
&lt;li&gt;ViewActions.typeText()：点击视图并输入指定的字符串。&lt;/li&gt;
&lt;li&gt;ViewActions.scrollTo()：滚动到视图。目标视图必须是来自ScrollView的子类，它的android：visibility属性的值必须是VISIBLE。对于扩展AdapterView（例如，ListView）的视图，onData()方法为您处理滚动。&lt;/li&gt;
&lt;li&gt;ViewActions.pressKey()：使用指定的键码执行键按下。&lt;/li&gt;
&lt;li&gt;ViewActions.clearText()：清除目标视图中的文本。&lt;br&gt;如果目标视图位于ScrollView内部，请先执行ViewActions.scrollTo()操作，以在其他操作进行之前在屏幕中显示视图。如果视图已显示，ViewActions.scrollTo()操作将不起作用。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;例如，要模拟输入字符串值并按按钮提交值，您可以编写类似这样的自动测试脚本。 ViewInteraction.perform()和DataInteraction.perform()方法采用一个或多个ViewAction参数，并按提供的顺序运行操作。&lt;/p&gt;
&lt;p&gt;//将文本键入EditText视图，然后关闭软键盘&lt;br&gt;&lt;figure class=&quot;highlight lisp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;onView&lt;span class=&quot;list&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;withId&lt;/span&gt;&lt;span class=&quot;list&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;R&lt;/span&gt;.id.editTextUserInput)&lt;/span&gt;）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     .perform&lt;span class=&quot;list&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;typeText&lt;/span&gt;&lt;span class=&quot;list&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;STRING_TO_BE_TYPED&lt;/span&gt;)&lt;/span&gt;,closeSoftKeyboard&lt;span class=&quot;list&quot;&gt;()&lt;/span&gt;）&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;//按按钮提交文本更改&lt;br&gt;&lt;code&gt;onView(withId(R.id.changeTextBt)).perform(click());&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;其他action api 请查看&lt;br&gt;&lt;a href=&quot;/espresso.action&quot;&gt;https://developer.android.com/reference/android/support/test/espresso/action/package-summary.html&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Verifying_Results&quot;&gt;&lt;a href=&quot;#Verifying_Results&quot; class=&quot;headerlink&quot; title=&quot;Verifying Results&quot;&gt;&lt;/a&gt;Verifying Results&lt;/h2&gt;&lt;p&gt;调用ViewInteraction.check()或DataInteraction.check()方法来断言UI中的视图匹配一些预期状态。 您必须传递一个ViewAssertion对象作为参数。 如果断言失败，Espresso会抛出一个AssertionFailedError。&lt;br&gt;ViewAssertions类提供了用于指定公共断言的帮助程序方法的列表。 您可以使用的断言包括：&lt;br&gt;doesNotExist：断言没有与当前视图层次结构中指定的条件匹配的视图。&lt;br&gt;matches：断言指定视图存在于当前视图层次结构中，并且其状态与某个给定的Hamcrest匹配器匹配。&lt;br&gt;selectedDescendentsMatch：存在指定的孩子为父视图查看的声明，它们的状态与某个给定的Hamcrest匹配器匹配。&lt;/p&gt;
&lt;p&gt;以下代码段显示了如何检查UI中显示的文本的值与之前在EditText字段中输入的文本的值相同。&lt;br&gt;&lt;figure class=&quot;highlight scss&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public void &lt;span class=&quot;function&quot;&gt;testChangeText_sameActivity&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Type text and then press the button.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;onView&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;withText&lt;/span&gt;(R&lt;span class=&quot;class&quot;&gt;.string&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.item_1_text&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;class&quot;&gt;.check&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;doesNotExist&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Check that the text was changed.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;onView&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;withId&lt;/span&gt;(R&lt;span class=&quot;class&quot;&gt;.id&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.textToBeChanged&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;class&quot;&gt;.check&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;matches&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;withText&lt;/span&gt;(STRING_TO_BE_TYPED)));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;ViewMatchers, ViewActions, ViewAssertions 组成了espresso的基础架构，所以要真正的掌握espresso必须将这3部分基础熟悉。&lt;br&gt;上一节&lt;a href=&quot;https://qaseven.github.io/2016/11/30/expresso/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;espresso基础&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;espresso_u57FA_u7840_u67B6_u6784_u4E0EAPI_u5206_u6790&quot;&gt;&lt;a href=&quot;#espresso_u57FA_u7840_u67B6_u6784_u4E0EAPI_u5206_u6790&quot; class=&quot;heade
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>espresso系列一简介</title>
    <link href="http://yoursite.com/2016/11/30/expresso/"/>
    <id>http://yoursite.com/2016/11/30/expresso/</id>
    <published>2016-11-30T08:59:53.000Z</published>
    <updated>2016-12-05T15:11:42.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;espresso_u662F_u4EC0_u4E48_uFF1F&quot;&gt;&lt;a href=&quot;#espresso_u662F_u4EC0_u4E48_uFF1F&quot; class=&quot;headerlink&quot; title=&quot;espresso是什么？&quot;&gt;&lt;/a&gt;espresso是什么？&lt;/h2&gt;&lt;p&gt; Espresso 测试框架提供了一系列的API用于构建UI测试来测试app内用户流操作。这些API让你可以编写简洁可靠的自动化UI测试。Espresso非常适合用来编写白盒测试，其中测试代码的编写是利用了被测试app中程序代码实现细节。&lt;/p&gt;
&lt;p&gt;Espresso测试可运行android 2.3.3(API 10 level)以及更高版本的设备上。使用Espresso的主要好处是,当你运行测试时它提供了自动的同步测试动作与应用程序UI。Espresso会检测你的主线程是否为空闲状态,如果你的没有被利用,这时候他就会抢占主线程运行测试，所以它能够在恰当的时间运行您的测试命令,提高测试的可靠性。这种能力也使您无须添加任何额外的措施,例如在测试代码中加入&lt;code&gt;thread.sleep()&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;Espresso测试框架基于 instrumentation-based API 并且使用 AndroidJUnitRunner测试驱动运行测试。&lt;/p&gt;
&lt;p&gt;Espresso测试框架的关键特性包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[ ] 提供了灵活的API用于匹配目标app中view和adapter。更多的信息，见&lt;a href=&quot;https://developer.android.com/topic/libraries/testing-support-library/index.html#espresso-matching&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;View匹配&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] 大而全的 行为 api（action APIs） 用于自动化UI交互。更多的信息，见&lt;a href=&quot;https://developer.android.com/topic/libraries/testing-support-library/index.html#espresso-actions&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;行为APIs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ ] UI线程同步来提高测试可靠性。更多信息，&lt;a href=&quot;https://developer.android.com/topic/libraries/testing-support-library/index.html#espresso-thread-sync&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;见UI线程同步&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;u7248_u672C_u517C_u5BB9&quot;&gt;&lt;a href=&quot;#u7248_u672C_u517C_u5BB9&quot; class=&quot;headerlink&quot; title=&quot;版本兼容&quot;&gt;&lt;/a&gt;版本兼容&lt;/h2&gt;&lt;p&gt;Espresso 支持如下 API：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;代号&lt;/th&gt;
&lt;th&gt;API&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Froyo&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Gingerbread&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;  Ice Cream Sandwich&lt;/td&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;  Jelly Bean&lt;/td&gt;
&lt;td&gt;16, 17 ,18&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;  KitKat&lt;/td&gt;
&lt;td&gt;19&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;  Lollipop&lt;/td&gt;
&lt;td&gt;21&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;注意：&lt;br&gt;切记 espresso 有版本断层，并不是全版本支持，请注意你设备android系统的版本，以免造成不必要的免费。&lt;br&gt;不过最新的android系统版本 espresso都是支持的。&lt;/p&gt;
&lt;h2 id=&quot;u914D_u7F6Eespresso&quot;&gt;&lt;a href=&quot;#u914D_u7F6Eespresso&quot; class=&quot;headerlink&quot; title=&quot;配置espresso&quot;&gt;&lt;/a&gt;配置espresso&lt;/h2&gt;&lt;p&gt;官方文档建议我们在开始配置之前，先看看如何开始测试，我觉得非常有必要，很多新手上来就拿着不知道那找来的例子运行下，就以为自己真的什么都会。这样的真的很不好，官方文档才是最好的老师，让我们一步一步慢慢来。&lt;/p&gt;
&lt;p&gt;android是基于JUnit测试框架,单元测试,您可以运行任意本地的单元测试在JVM或instrumented tests在Android设备上。&lt;/p&gt;
&lt;h3 id=&quot;u6D4B_u8BD5_u7C7B_u578B&quot;&gt;&lt;a href=&quot;#u6D4B_u8BD5_u7C7B_u578B&quot; class=&quot;headerlink&quot; title=&quot;测试类型&quot;&gt;&lt;/a&gt;测试类型&lt;/h3&gt;&lt;p&gt;当使用Android studio 编写任何你的测试时,你的测试代码必须进入两个不同的代码目录(源集)。每个模块在您的项目中,Android Studio都包括源集,对应于以下测试类型:&lt;/p&gt;
&lt;h4 id=&quot;u672C_u5730_u5355_u5143_u6D4B_u8BD5&quot;&gt;&lt;a href=&quot;#u672C_u5730_u5355_u5143_u6D4B_u8BD5&quot; class=&quot;headerlink&quot; title=&quot;本地单元测试&quot;&gt;&lt;/a&gt;本地单元测试&lt;/h4&gt;&lt;p&gt;位于 &lt;code&gt;module-name/src/test/java/.&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这些测试运行在本地JVM并没有访问Android框架api功能的权限。&lt;br&gt;让我们首先开始如何构建本地单元测试。&lt;/p&gt;
&lt;h3 id=&quot;u6784_u5EFA_u672C_u5730_u5355_u5143_u6D4B_u8BD5&quot;&gt;&lt;a href=&quot;#u6784_u5EFA_u672C_u5730_u5355_u5143_u6D4B_u8BD5&quot; class=&quot;headerlink&quot; title=&quot;构建本地单元测试&quot;&gt;&lt;/a&gt;构建本地单元测试&lt;/h3&gt;&lt;p&gt;如果您的单元测试没有依赖或只有简单的依赖Android系统,你应该在本地开发机器上运行您的测试。这种测试方法是有效的,因为它可以帮助你避免加载目标应用程序时的开销以及单元测试需要在一个物理设备或模拟器运行。因此,运行单元测试的时间将大大的减少。使用这种方法,您通常使用mocking 框架,列如Mockito、这可以帮助我们mock测试需要的依赖。&lt;/p&gt;
&lt;h3 id=&quot;u8BBE_u7F6E_u6D4B_u8BD5_u73AF_u5883&quot;&gt;&lt;a href=&quot;#u8BBE_u7F6E_u6D4B_u8BD5_u73AF_u5883&quot; class=&quot;headerlink&quot; title=&quot;设置测试环境&quot;&gt;&lt;/a&gt;设置测试环境&lt;/h3&gt;&lt;p&gt;在你的Android Studio项目时,您必须为本地单元测试存储源文件在 module-name/src/test/java/。当你创建一个新项目，这个目录就已经存在。您还需要为您的项目配置测试依赖,因为需要使用JUnit 4的框架提供标准的api。&lt;br&gt;如果您的测试需要与Android依赖关系,包括使用Mockito来简化你的单元测试。更多地使用 mock objects在本地的单元测试中,请查看Mocking Android依赖关系。在你的应用程序的顶层目录的build.gradle文件里,您需要指定这些库的依赖关系:&lt;/p&gt;
&lt;figure class=&quot;highlight gradle&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;dependencies&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Required -- JUnit 4 framework&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    testCompile &lt;span class=&quot;string&quot;&gt;&#39;junit:junit:4.12&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Optional -- Mockito framework&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    testCompile &lt;span class=&quot;string&quot;&gt;&#39;org.mockito:mockito-core:1.10.19&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;u521B_u5EFA_u672C_u5730_u5355_u5143_u6D4B_u8BD5_u7C7B&quot;&gt;&lt;a href=&quot;#u521B_u5EFA_u672C_u5730_u5355_u5143_u6D4B_u8BD5_u7C7B&quot; class=&quot;headerlink&quot; title=&quot;创建本地单元测试类&quot;&gt;&lt;/a&gt;创建本地单元测试类&lt;/h3&gt;&lt;p&gt;你当地的单元测试类应该写成一个JUnit 4测试类。JUnit是最受欢迎和广泛使用为Java单元测试框架。这个框架的最新版本,JUnit4,允许您在一个比之前的版更清洁和更灵活的方法中编写测试。之前的Android单元测试基于JUnit3框架,使用JUnit4,您不需要扩展junit.framework。TestCase类。你也不需要在测试方法名称包含“test”关键字,或者使用junit的任何类在junit.framework或junit.extensions包。&lt;/p&gt;
&lt;p&gt;创建一个基本的JUnit 4测试类,首先需要创建一个Java类,它包含一个或多个测试方法。一个测试方法以@Test annotation标注并且包含代码的实现和验证的代码中包含您想要测试的一个功能组件。&lt;/p&gt;
&lt;p&gt;下面的例子展示了如何实现一个本地的单元测试类。测试方法emailValidator_CorrectEmailSimple_ReturnsTrue验证isValidEmail()方法，应用程序返回正确的结果。&lt;br&gt;&lt;figure class=&quot;highlight actionscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.junit.Test;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.regex.Pattern;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; static org.junit.Assert.assertFalse;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; static org.junit.Assert.assertTrue;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;EmailValidatorTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Test&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; emailValidator_CorrectEmailSimple_ReturnsTrue() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        assertThat(EmailValidator.isValidEmail(&lt;span class=&quot;string&quot;&gt;&quot;name@email.com&quot;&lt;/span&gt;), &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt;(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;测试组件在应用程序返回预期的结果,使用junit.Assert方法来执行验证检查(或断言)来对比测试组件的状态和一些期望值。为了使测试具有更好的可读的,您可以使用Hamcrest matchers(如 is()和equalTo()方法)来匹配返回的结果与预期的结果。&lt;/p&gt;
&lt;h3 id=&quot;Mock_Android_u4F9D_u8D56_u5173_u7CFB&quot;&gt;&lt;a href=&quot;#Mock_Android_u4F9D_u8D56_u5173_u7CFB&quot; class=&quot;headerlink&quot; title=&quot;Mock Android依赖关系&quot;&gt;&lt;/a&gt;Mock Android依赖关系&lt;/h3&gt;&lt;p&gt;默认情况下,Android插件Gradle执行本地的单元测试与修改后的版本的Android.jar库,它不包含任何实际的代码。相反,从你的单元测试方法调用安卓类抛出异常。这确保你的测试代码和不依赖于任何特定的行为的Android平台(你没有显式地mock)。&lt;br&gt;您可以使用模拟框架在代码中存根外部依赖关系，以便轻松测试您的组件是否按照预期的方式与依赖关系交互。 通过用模拟对象替换Android依赖项，您可以将单元测试与Android系统的其余部分隔离，同时验证这些依赖关系中的正确方法是否被调用。 Java的Mockito mocking框架（1.9.5及更高版本）提供了与Android单元测试的兼容性。 使用Mockito，您可以配置模拟对象以在调用时返回一些特定值。&lt;/p&gt;
&lt;p&gt;要使用此框架将mock对象添加到本地单元测试，请遵循以下编程模型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在build.gradle文件中包含Mockito库依赖关系，如设置测试环境中所述。&lt;/li&gt;
&lt;li&gt;在单元测试类定义的开始，添加@RunWith（MockitoJUnitRunner.class）注释。 这个注释告诉Mockito测试运行器验证你的框架的使用是正确的，并简化了你的模拟对象的初始化。&lt;/li&gt;
&lt;li&gt;要为Android依赖项创建模拟对象，请在字段声明之前添加@Mock注释。&lt;/li&gt;
&lt;li&gt;要存根依赖关系的行为，可以使用when（）和thenReturn（）方法指定条件并返回值。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以下示例显示如何创建使用mock上下文对象的单元测试。&lt;br&gt;&lt;figure class=&quot;highlight nimrod&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; org.hamcrest.&lt;span class=&quot;type&quot;&gt;MatcherAssert&lt;/span&gt;.assertThat;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; org.hamcrest.&lt;span class=&quot;type&quot;&gt;CoreMatchers&lt;/span&gt;.*;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; org.mockito.&lt;span class=&quot;type&quot;&gt;Mockito&lt;/span&gt;.*;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.junit.&lt;span class=&quot;type&quot;&gt;Test&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.junit.runner.&lt;span class=&quot;type&quot;&gt;RunWith&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.mockito.&lt;span class=&quot;type&quot;&gt;Mock&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.mockito.runners.&lt;span class=&quot;type&quot;&gt;MockitoJUnitRunner&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; android.content.&lt;span class=&quot;type&quot;&gt;SharedPreferences&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@&lt;span class=&quot;type&quot;&gt;RunWith&lt;/span&gt;(&lt;span class=&quot;type&quot;&gt;MockitoJUnitRunner&lt;/span&gt;.class)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public class &lt;span class=&quot;type&quot;&gt;UnitTestSample&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; final &lt;span class=&quot;type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;FAKE_STRING&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;&quot;HELLO WORLD&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @&lt;span class=&quot;type&quot;&gt;Mock&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;Context&lt;/span&gt; mMockContext;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @&lt;span class=&quot;type&quot;&gt;Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public &lt;span class=&quot;type&quot;&gt;void&lt;/span&gt; readStringFromContext_LocalizedString() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // &lt;span class=&quot;type&quot;&gt;Given&lt;/span&gt; a mocked &lt;span class=&quot;type&quot;&gt;Context&lt;/span&gt; injected into the &lt;span class=&quot;keyword&quot;&gt;object&lt;/span&gt; under test...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;when&lt;/span&gt;(mMockContext.getString(R.&lt;span class=&quot;type&quot;&gt;string&lt;/span&gt;.hello_word))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                .thenReturn(&lt;span class=&quot;type&quot;&gt;FAKE_STRING&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;ClassUnderTest&lt;/span&gt; myObjectUnderTest = new &lt;span class=&quot;type&quot;&gt;ClassUnderTest&lt;/span&gt;(mMockContext);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // ...&lt;span class=&quot;keyword&quot;&gt;when&lt;/span&gt; the &lt;span class=&quot;type&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; returned &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; the &lt;span class=&quot;keyword&quot;&gt;object&lt;/span&gt; under test...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt; = myObjectUnderTest.getHelloWorldString();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // ...then the &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt; should be the expected one.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        assertThat(&lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt;(&lt;span class=&quot;type&quot;&gt;FAKE_STRING&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;要了解有关使用Mockito框架的更多信息，请参阅示例代码中的Mockito API参考和SharedPreferencesHelperTest类。&lt;br&gt;如果Android.jar中的Android API抛出的异常对于测试有问题，您可以更改行为，以使方法通过在项目的顶级build.gradle文件中添加以下配置来返回null或零：&lt;br&gt;&lt;code&gt;android {
  ...
  testOptions {
    unitTests.returnDefaultValues = true
  }
}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;警告：将returnDefaultValues属性设置为true应该小心。  null/zero 返回值可以在测试中引入回归，这难以调试，并且可能允许失败的测试通过。 只能使用它作为最后的手段。&lt;/p&gt;
&lt;h3 id=&quot;u8FD0_u884C_u672C_u5730_u6D4B_u8BD5&quot;&gt;&lt;a href=&quot;#u8FD0_u884C_u672C_u5730_u6D4B_u8BD5&quot; class=&quot;headerlink&quot; title=&quot;运行本地测试&quot;&gt;&lt;/a&gt;运行本地测试&lt;/h3&gt;&lt;p&gt;要运行本地单元测试，请按照下列步骤操作：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;通过单击工具栏中的 Sync Project，确保您的项目与Gradle同步。&lt;/li&gt;
&lt;li&gt;使用以下方法之一运行测试：&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;要运行单个测试，请打开“Project”窗口，然后右键单击测试，然后单击RUN。&lt;/li&gt;
&lt;li&gt;要测试类中的所有方法，请右键单击测试文件中的类或方法，然后单击Run。&lt;/li&gt;
&lt;li&gt;要在目录中运行所有测试，请右键单击目录并选择Run test。&lt;br&gt;Gradle的Android插件编译位于默认目录（src / test / java /）中的本地单元测试代码，构建一个测试应用程序，并使用默认的测试运行器类在本地执行它。 然后，Android Studio将在“运行”窗口中显示结果。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;Instrumented_tests&quot;&gt;&lt;a href=&quot;#Instrumented_tests&quot; class=&quot;headerlink&quot; title=&quot;Instrumented tests&quot;&gt;&lt;/a&gt;Instrumented tests&lt;/h4&gt;&lt;p&gt;位于module-name/src/androidTest/java/。&lt;br&gt;这些都是必须在Android硬件设备或Android模拟器上运行的测试。&lt;/p&gt;
&lt;p&gt;仪表化测试内置于在测试下的应用旁边的设备上运行的APK。 系统在同一个过程中运行测试APK和您的应用程序，因此您的测试可以调用方法和修改应用程序中的字段，并自动化用户与您的应用程序的互动。&lt;/p&gt;
&lt;p&gt;有关如何创建检测测试的信息，请参阅以下主题：&lt;/p&gt;
&lt;p&gt;构建测试单元测试：使用Android依赖项构建复杂的单元测试，这些测试不能满足模拟对象。&lt;br&gt;自动化用户界面测试：创建测试以验证用户界面在单个应用程序内的用户交互或多个应用程序之间的交互操作正确。&lt;br&gt;测试应用程序组件集成：验证用户不直接与之交互的组件（例如服务或内容提供者）的行为。&lt;br&gt;&lt;img src=&quot;https://developer.android.com/images/testing/test-types_2x.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;但是，上述的本地单元测试和instrumented tests只是用于区分在本地JVM上运行的测试和在Android平台（在硬件设备或模拟器上）运行的测试之间的术语。 在构建完整测试套件时应该理解的真实测试类型在下表中描述。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;子类型&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Unit tests&lt;/td&gt;
&lt;td&gt;Local Unit Tests&lt;/td&gt;
&lt;td&gt;本地单元测试在Java虚拟机（JVM）上本地运行的单元测试。当您的测试没有Android框架依赖项或者可以模拟Android框架依赖项时，使用这些测试来最小化执行时间。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Unit tests&lt;/td&gt;
&lt;td&gt;Instrumented unit tests&lt;/td&gt;
&lt;td&gt;测试单元测试在Android设备或模拟器上运行的单元测试。这些测试可以访问Instrumentation信息，例如您要测试的应用程序的上下文。当你的测试有Android依赖，模拟对象不能满足时，使用这些测试。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Integration Tests&lt;/td&gt;
&lt;td&gt;Components within your app only&lt;/td&gt;
&lt;td&gt;您的应用程序中的组件仅当用户执行特定操作或在其活动中输入特定输入时，此类型的测试验证目标应用程序的行为如预期。例如，它允许您检查目标应用程序返回正确的UI输出，以响应用户在应用程序活动中的互动。 Espresso等UI测试框架允许您以编程方式模拟用户操作并测试复杂的应用内用户交互。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Integration Tests&lt;/td&gt;
&lt;td&gt;Cross-app Components&lt;/td&gt;
&lt;td&gt;跨应用程序组件此类型的测试验证不同用户应用程序之间或用户应用程序和系统应用程序之间的交互的正确行为。例如，当用户在Android设置菜单中执行操作时，您可能需要测试您的应用是否正确运行。支持跨应用程序交互的UI测试框架（如UI Automator）允许您为这些场景创建测试。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&quot;Test_APIs&quot;&gt;&lt;a href=&quot;#Test_APIs&quot; class=&quot;headerlink&quot; title=&quot;Test APIs&quot;&gt;&lt;/a&gt;Test APIs&lt;/h4&gt;&lt;p&gt;以下是用于在Android上测试应用的常见API。&lt;br&gt;JUnit&lt;br&gt;您应该将您的单元或集成测试类写为JUnit 4测试类。 该框架提供了一种方便的方法来在测试中执行常见的setup, teardown, and assertion操作。&lt;/p&gt;
&lt;p&gt;基本的JUnit 4测试类是包含一个或多个测试方法的Java类。 测试方法以@Test注释开始，包含练习和验证要测试的组件中的单个功能（即逻辑单元）的代码。&lt;/p&gt;
&lt;p&gt;以下代码段显示了一个示例JUnit 4集成测试，它使用Espresso API对UI元素执行单击操作，然后检查是否显示预期的字符串。&lt;br&gt;&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@RunWith&lt;/span&gt;(AndroidJUnit4.&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@LargeTest&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MainActivityInstrumentationTest&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Rule&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; ActivityTestRule mActivityRule = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ActivityTestRule&amp;lt;&amp;gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            MainActivity.&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;typename&quot;&gt;void&lt;/span&gt; sayHello()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        onView(withText(&lt;span class=&quot;string&quot;&gt;&quot;Say hello!&quot;&lt;/span&gt;)).perform(click());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        onView(withId(R.id.textView)).check(matches(withText(&lt;span class=&quot;string&quot;&gt;&quot;Hello, World!&quot;&lt;/span&gt;)));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在您的JUnit 4测试类中，您可以通过使用以下注释调用测试代码中的部分进行特殊处理：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;@Before：使用此注释来指定包含测试设置操作的代码块。测试类在每次测试之前调用此代码块。你可以有多个@Before方法，但是测试类调用这些方法的顺序不能保证。&lt;/li&gt;
&lt;li&gt;@After：此注释指定一个包含测试拆分操作的代码块。测试类在每个测试方法之后调用这个代码块。您可以在测试代码中定义多个@After操作。使用此注释从内存释放任何资源。&lt;/li&gt;
&lt;li&gt;@Test：使用此注释标记测试方法。单个测试类可以包含多个测试方法，每个测试方法都以此注释作为前缀。&lt;/li&gt;
&lt;li&gt;@Rule：规则允许您以可重用的方式灵活地添加或重新定义每个测试方法的行为。在Android测试中，将此注释与Android测试支持库提供的测试规则类之一一起使用，例如ActivityTestRule或ServiceTestRule。&lt;/li&gt;
&lt;li&gt;@BeforeClass：使用此注释为每个测试类指定仅调用一次的静态方法。此测试步骤对于消耗大的操作（例如连接到数据库）很有用。&lt;/li&gt;
&lt;li&gt;@AfterClass：使用此注释为测试类指定静态方法，仅在类中的所有测试运行后调用。 这个测试步骤对释放在@BeforeClass块中分配的任何资源很有用。&lt;/li&gt;
&lt;li&gt;@Test（timeout =）：一些注释支持传递元素的能力，您可以为其设置值。 例如，您可以为测试指定超时期限。 如果测试开始，但没有在给定的超时期间内完成，它会自动失败。 您必须以毫秒为单位指定超时期限，例如：@Test（timeout = 5000）。&lt;br&gt;使用JUnit Assert类来验证对象状态的正确性。 assert方法将您从测试所期望的值与实际结果进行比较，如果比较失败，则抛出异常。 断言类更详细地描述这些方法。&lt;h4 id=&quot;Android_u6D4B_u8BD5_u652F_u6301_u5E93&quot;&gt;&lt;a href=&quot;#Android_u6D4B_u8BD5_u652F_u6301_u5E93&quot; class=&quot;headerlink&quot; title=&quot;Android测试支持库&quot;&gt;&lt;/a&gt;Android测试支持库&lt;/h4&gt;Android测试支持库提供了一组API，允许您快速构建和运行应用程序的测试代码，包括JUnit 4和功能UI测试。 库包括以下基于工具的API，当您想要自动化测试时，这些API是有用的：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;AndroidJUnitRunner&lt;br&gt;适用于Android的JUnit 4兼容测试运行器。&lt;br&gt;espresso&lt;br&gt;一个UI测试框架; 适用于在应用程序内的功能UI测试。&lt;br&gt;UI automator&lt;br&gt;适用于系统和已安装应用程序之间跨应用程序功能UI测试的UI测试框架。&lt;/p&gt;
&lt;h4 id=&quot;u65AD_u8A00_u7C7B&quot;&gt;&lt;a href=&quot;#u65AD_u8A00_u7C7B&quot; class=&quot;headerlink&quot; title=&quot;断言类&quot;&gt;&lt;/a&gt;断言类&lt;/h4&gt;&lt;p&gt;由于Android测试支持库API扩展JUnit，因此可以使用断言方法显示测试结果。断言方法将测试返回的实际值与预期值进行比较，如果比较测试失败，则抛出AssertionException异常。使用断言比记录更方便，并提供更好的测试性能。&lt;/p&gt;
&lt;p&gt;为了简化测试开发，您应该使用Hamcrest库，它允许您使用Hamcrest匹配器API创建更灵活的测试。&lt;/p&gt;
&lt;p&gt;Monkey 和 monkeyrunner&lt;br&gt;Android SDK包含两个用于功能级应用测试的工具：&lt;/p&gt;
&lt;p&gt;Monkey&lt;br&gt;这是一个命令行工具，用于向设备发送按键，触摸和手势的伪随机流。您使用Android Debug Bridge（adb）工具运行它，并使用它来压力测试您的应用程序，报告所遇到的错误，或通过使用相同的随机数种子多次运行该工具来重复事件流。&lt;br&gt;monkeyrunner&lt;br&gt;此工具是用Python编写的测试程序的API和执行环境。 API包括用于连接到设备，安装和卸载包，截取屏幕截图，比较两个图像以及针对应用运行测试包的功能。使用API​​，您可以编写大量，强大和复杂的测试。您使用monkeyrunner命令行工具运行使用API​​的程序。&lt;/p&gt;
&lt;h4 id=&quot;u6784_u5EFAAndroid_u6D4B_u8BD5_u7684_u6307_u5357&quot;&gt;&lt;a href=&quot;#u6784_u5EFAAndroid_u6D4B_u8BD5_u7684_u6307_u5357&quot; class=&quot;headerlink&quot; title=&quot;构建Android测试的指南&quot;&gt;&lt;/a&gt;构建Android测试的指南&lt;/h4&gt;&lt;p&gt;以下文档提供了有关如何构建和运行各种测试类型的更多详细信息：&lt;/p&gt;
&lt;p&gt;建立本地单元测试&lt;br&gt;构建单元测试没有依赖或只有简单的依赖，你可以mock，它运行在本地JVM上。&lt;br&gt;建筑仪表单元测试&lt;br&gt;使用Android依赖项构建复杂的单元测试，这对于在硬件设备或模拟器上运行的模拟对象无法满足。&lt;br&gt;自动化用户界面测试&lt;br&gt;创建测试以验证用户界面在单个应用程序内的用户交互或多个应用程序之间的交互正确运行。&lt;br&gt;测试应用程序集成&lt;br&gt;验证用户不直接与之交互的组件（例如服务或内容提供者）的行为。&lt;br&gt;测试显示性能&lt;br&gt;编写测试应用程序UI性能的测试，以确保持续流畅的用户体验。&lt;br&gt;ok 我们已经看完了 怎么开始android测试，我想大家一定有了很深入的了解了吧&lt;br&gt;让我们进入正题 配置espresso&lt;br&gt;在Android应用程序模块的build.gradle文件中，必须为Espresso引入jar依赖：&lt;/p&gt;
&lt;figure class=&quot;highlight gradle&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;dependencies&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Other dependencies ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    androidTestCompile &lt;span class=&quot;string&quot;&gt;&#39;com.android.support.test.espresso:espresso-core:2.2.2&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;关闭测试设备上的动画 - 在测试设备中打开系统动画可能会导致意外的结果，或可能导致测试失败。 通过打开开发者选项并关闭所有以下选项，从设置中关闭动画：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在设备上的设置-&amp;gt;开发者选项中禁用一下三项设置： &amp;gt; 窗口动画缩放 &amp;gt; 过渡动画缩放 &amp;gt; 动画程序时长缩放&lt;/li&gt;
&lt;li&gt;确保你已经安装了最新的 Extras 下的 Android Support Repository&lt;br&gt;设置junit为测试驱动框架&lt;br&gt;在build.gradle 中 添加&lt;br&gt;&lt;code&gt;testInstrumentationRunner &amp;quot;android.support.test.runner.AndroidJUnitRunner&amp;quot;&lt;/code&gt;&lt;h2 id=&quot;u5B8C_u6574_u7684build-gradle__u793A_u4F8B_u6587_u4EF6_u5982_u4E0B&quot;&gt;&lt;a href=&quot;#u5B8C_u6574_u7684build-gradle__u793A_u4F8B_u6587_u4EF6_u5982_u4E0B&quot; class=&quot;headerlink&quot; title=&quot;完整的build.gradle 示例文件如下&quot;&gt;&lt;/a&gt;完整的build.gradle 示例文件如下&lt;/h2&gt;&lt;figure class=&quot;highlight gradle&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;​android.defaultConfigpply plugin: &lt;span class=&quot;string&quot;&gt;&#39;com.android.application&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;android &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    compileSdkVersion &lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    buildToolsVersion rootProject.buildToolsVersion&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    defaultConfig &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        applicationId &lt;span class=&quot;string&quot;&gt;&quot;com.example.android.testing.espresso.BasicSample&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        minSdkVersion &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        targetSdkVersion &lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        versionCode &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        versionName &lt;span class=&quot;string&quot;&gt;&quot;1.0&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        testInstrumentationRunner &lt;span class=&quot;string&quot;&gt;&quot;android.support.test.runner.AndroidJUnitRunner&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    lintOptions &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        abortOnError &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    productFlavors &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;dependencies&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// App dependencies&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;compile&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;com.android.support:support-annotations:&#39;&lt;/span&gt; + rootProject.supportLibVersion;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;compile&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;com.google.guava:guava:18.0&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Testing-only dependencies&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Force usage of support annotations in the test app, since it is internally used by the runner module.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    androidTestCompile &lt;span class=&quot;string&quot;&gt;&#39;com.android.support:support-annotations:&#39;&lt;/span&gt; + rootProject.supportLibVersion;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    androidTestCompile &lt;span class=&quot;string&quot;&gt;&#39;com.android.support.test:runner:&#39;&lt;/span&gt; + rootProject.runnerVersion;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    androidTestCompile &lt;span class=&quot;string&quot;&gt;&#39;com.android.support.test:rules:&#39;&lt;/span&gt; + rootProject.rulesVersion;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    androidTestCompile &lt;span class=&quot;string&quot;&gt;&#39;com.android.support.test.espresso:espresso-core:&#39;&lt;/span&gt; + rootProject.espressoVersion;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;之后我们只需要在命令行中输入gradle就会帮我们下载依赖运行测试了，对了记着要安装gradle到你的系统中.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;espresso_u662F_u4EC0_u4E48_uFF1F&quot;&gt;&lt;a href=&quot;#espresso_u662F_u4EC0_u4E48_uFF1F&quot; class=&quot;headerlink&quot; title=&quot;espresso是什么？&quot;&gt;&lt;/a&gt;espresso是什
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>从QA的角度来谈谈代码质量的改进</title>
    <link href="http://yoursite.com/2016/10/31/qaquilty/"/>
    <id>http://yoursite.com/2016/10/31/qaquilty/</id>
    <published>2016-10-31T14:15:46.000Z</published>
    <updated>2016-11-01T03:30:47.000Z</updated>
    
    <content type="html">&lt;p&gt;大部分人看到这个题目时，直接的反应是QA关心代码质量干嘛，能看懂代码吗？怎么给dev feedback？&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/image/qa.gif&quot; alt=&quot;qa&quot;&gt;&lt;/p&gt;
&lt;p&gt;如果还有人持这样的观点后，那么我只能说too young too simple。&lt;br&gt;首先我们得谈谈什么是代码质量？&lt;br&gt;创建优秀的代码涉及到正确性、可维护性甚至优美性。&lt;br&gt;正确性，最起码你的代码实现的业务逻辑是正确的。&lt;br&gt;可维护性，公司中其他的小伙伴能看看懂你的代码逻辑，便于修改代码。&lt;br&gt;优美性，符合各种代码规范，其他人看到代码后惊为天人。&lt;br&gt;但是要做到以上几点绝非易事，首先你得有高超的编程能力，其次你对前端或后端的代码规范有深刻的理解，但是能有这样能力的人又有多少呢？&lt;br&gt;我们都知道软件开发是团队合作才能完成的工作。&lt;br&gt;那么项目的质量与客户的需求才是项目生存下去的关键。&lt;br&gt;所以怎么才能改进项目代码的质量？我们先看看业界巨头公司都是如何做的？&lt;/p&gt;
&lt;h2 id=&quot;microsoft_u600E_u4E48_u505A_uFF1F&quot;&gt;&lt;a href=&quot;#microsoft_u600E_u4E48_u505A_uFF1F&quot; class=&quot;headerlink&quot; title=&quot;microsoft怎么做？&quot;&gt;&lt;/a&gt;microsoft怎么做？&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/image/mircosoft.jpg&quot; alt=&quot;microsoft&quot;&gt;&lt;/p&gt;
&lt;p&gt;我们都知道微软是做操作系统出身的，其实微软的测试能力与测试工具都是业界中领先的，以下是两张表展示的是微软如何从visual studio与开发过程中提高代码质量&lt;/p&gt;
&lt;h4 id=&quot;Visual_Studio&quot;&gt;&lt;a href=&quot;#Visual_Studio&quot; class=&quot;headerlink&quot; title=&quot;Visual Studio&quot;&gt;&lt;/a&gt;Visual Studio&lt;/h4&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;标准&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;使用代码分析工具分析应用程序质量&lt;/td&gt;
&lt;td&gt;静态代码分析工具可查找 C++ 和托管代码里的设计、使用、可维护性和样式问题。 其中的许多问题可能导致难以在标准测试环境中重现的 bug。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;单元测试代码&lt;/td&gt;
&lt;td&gt;“测试资源管理器”可以在开发实践中轻松地集成单元测试。 可以使用 Microsoft 单元测试框架或若干第三方和开源框架之一。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;  测量托管代码的复杂性和可维护性&lt;/td&gt;
&lt;td&gt;代码度量是一组软件度量值，使开发人员可以更好地了解他们正在开发的代码。 度量值包括函数和类的可维护性指数、函数的圈复杂度、类的继承深度和类耦合度的数值。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;  使用代码克隆检测功能查找重复代码&lt;/td&gt;
&lt;td&gt;代码克隆工具可用于在整个 Visual Studio 解决方案内搜索 Visual C# 和 Visual Basic 项目中重复或高度相似的代码。 可以经常重构代码以消除重复代码，从而创建更易于维护的解决方案。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;  PreEmptive Analytics for Team Foundation Server&lt;/td&gt;
&lt;td&gt;PreEmptive Analytics for TFS CE 有助于将反馈驱动的开发过程集成到开发工作流中。 当应用程序在执行过程中发生错误时，它会自动将异常报告数据发回给 PreEmptive Analytics 服务。 然后，该服务将根据你定义的规则和阈值创建或更新 Microsoft Team Foundation Server 中的工作项。  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;  PreEmptive Dotfuscator 和 Analytics CE&lt;/td&gt;
&lt;td&gt;PreEmptive Dotfuscator 是 .NET 模糊处理程序和压缩程序，有助于防止程序遭遇反向工程，同时使程序更小更高效。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&quot;u5F00_u53D1_u8FC7_u7A0B_u4E2D_u6539_u8FDB_u4EE3_u7801_u8D28_u91CF&quot;&gt;&lt;a href=&quot;#u5F00_u53D1_u8FC7_u7A0B_u4E2D_u6539_u8FDB_u4EE3_u7801_u8D28_u91CF&quot; class=&quot;headerlink&quot; title=&quot;开发过程中改进代码质量&quot;&gt;&lt;/a&gt;开发过程中改进代码质量&lt;/h4&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;标准&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;  设计和代码的检查准则&lt;/td&gt;
&lt;td&gt;提供若干帮助进行设计和代码检查的技术，通过让其他同事检查代码来发现 bug 和不正确的假设。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;  安全代码编写准则&lt;/td&gt;
&lt;td&gt;描述编写安全代码的技术和策略。  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;  高质量代码签入准则&lt;/td&gt;
&lt;td&gt;列出以不同方式检查代码以确保代码实现您的预期高质量设计目的的准则。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;  代码分析工具使用准则&lt;/td&gt;
&lt;td&gt;提供几条使用代码分析工具的准则。  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;  检测和更正 C/C++ 代码缺陷&lt;/td&gt;
&lt;td&gt;描述如何使用用于托管代码的代码分析工具检测和更正代码缺陷。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;  代码分析签入策略&lt;/td&gt;
&lt;td&gt;描述如何创建与 Team Foundation 源控件签入关联的自定义签入策略。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;调试准则&lt;/td&gt;
&lt;td&gt;提供几条查找代码缺陷的准则。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&quot;google__u53C8_u662F_u600E_u4E48_u505A_uFF1F&quot;&gt;&lt;a href=&quot;#google__u53C8_u662F_u600E_u4E48_u505A_uFF1F&quot; class=&quot;headerlink&quot; title=&quot;google 又是怎么做？&quot;&gt;&lt;/a&gt;google 又是怎么做？&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/image/google.jpg&quot; alt=&quot;google&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;代码审查。在你提交任何代码改动之前，你得找去代码“主人”签字确认。为了实现，评审者（被鼓励去）建议大修代码，而不是让它成为根本没有经过思考的“图章”代码。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;按语言可读性要求坚持代码风格指南（请参阅这里）。除了让我们代码有统一的外观（所以我们能快速识别方法、变了等），我们的风格指南禁止了一些复杂、混乱、易出错的 C++ 特性（比如：class 类型的静态和全局变量）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;整个团队都致力改进我们代码库的质量，维护我们的核心库，不断做出更好的工具。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;一个活跃的“code health”课题组。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;发布软件时，不对外部期限承担责任。一般而言，这让我们可以正确做事，而非为了期限内完成任务把乱七八糟的代码拼凑起来。&lt;/li&gt;
&lt;li&gt;“Fix it.” 例如，一个工程师或许说，“我认为我们真应该别再用过时的  Cruft Map 类（class）了。我打算在 1 月 20 日组织一次 Fix it。” 当 1 月 20 日来临时，大家应当暂停其正常运作，把他们代码中的 Cruft Maps 都换掉。在 1 月 21 日，Google 就永远和 Cruft Map 说拜拜了！不过最近，核心库团队已经很优秀了，貌似没有啥东西可再值得类似的 fix it 了。&lt;/li&gt;
&lt;li&gt;测试文化。单元测试覆盖率可能接近 100%，我们有持续构建/整合/测试，还有知名的 “Testing on the Toilet” (请参见Google Testing Blog)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;facebook__u5462_uFF1F__u53C8_u6709_u4EC0_u4E48_u4E0D_u4E00_u6837&quot;&gt;&lt;a href=&quot;#facebook__u5462_uFF1F__u53C8_u6709_u4EC0_u4E48_u4E0D_u4E00_u6837&quot; class=&quot;headerlink&quot; title=&quot;facebook 呢？ 又有什么不一样&quot;&gt;&lt;/a&gt;facebook 呢？ 又有什么不一样&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/image/facebook.jpeg&quot; alt=&quot;facebook&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;开发对质量负责： 开发从设计，实现，测试，到部署都要自己做。其它做工具，流程的工程师通过开发工具和流程来帮助开发人员更为简单方便地做测试，做部署和做监控。每个开发人员有自己单独的测试环境，测试环境就是运行在开发本地机器上，部署非常简单快速。测试环境用的是真实的用户数据。&lt;/li&gt;
&lt;li&gt;持续集成和测试自动化：每周发布一次。星期天晚上，要发布的构建从主线上分支出来到发布分支，到星期二的中午如果没有大的问题，就可以上线了。所有的测试运行控制在10分钟以内，所以不需要考虑不运行哪些测试用例。运行所有测试用例。 （只是听说，没有经过考证。）&lt;/li&gt;
&lt;li&gt;严格实施代码审计：在Facebook 做 code review时间大约占50%，管理者对代码质量负有一定责任 。甚至代码质量高于一切：Facebook Code review是重点KPI考核的对象，实行连坐制，如果因为代码质量问题，那么产生的KPI责任包括领导30％、程序员50％、审核人员20％。 在代码checkin之前，都要由专人进行review。Facebook 创始人兼 CEO 马克扎克伯格会亲自对 News Feed 每个代码更新把关。在 Facebook，所有重大升级的代码都进行强制评估，任何一个改动都至少由一人把关。但是，无论工程师对 News Feed 做出任何改动，都将由扎克伯格亲自把关。&lt;/li&gt;
&lt;li&gt;内测 （dog food）：发布之前，公司员工使用要发布的功能。2－3天之内可以有几百个或上千个人在使用新功能。负责要发布功能的开发人员在星期天晚上到星期二中午之间会做大量的测试 。&lt;/li&gt;
&lt;li&gt;通过灰度发布控制风险：新功能本身质量可能有问题，新功能也可能影响其它现有功能。为了减少或控制这些风险。Facebook开发了一整套完善的发布，控制，监控流程和工具。做到：1.测试通过后，产品质量基本有保证。2.即使有漏测的bug，只会影响很少量的用户。3.及时监控到问题。4.及时修复。&lt;/li&gt;
&lt;li&gt;产品监控：通过社区讨论的正负面舆情，及与历史应用数据的对比情况，监控产品的系统的运行状态技术修复。&lt;h2 id=&quot;thoughtworks__u4E1A_u754C_u4EE5_u654F_u6377_u8457_u79F0_u7684_u8F6F_u4EF6_u4F01_u4E1A_u53C8_u662F_u5982_u4F55_u6539_u8FDB_u7684&quot;&gt;&lt;a href=&quot;#thoughtworks__u4E1A_u754C_u4EE5_u654F_u6377_u8457_u79F0_u7684_u8F6F_u4EF6_u4F01_u4E1A_u53C8_u662F_u5982_u4F55_u6539_u8FDB_u7684&quot; class=&quot;headerlink&quot; title=&quot;thoughtworks 业界以敏捷著称的软件企业又是如何改进的&quot;&gt;&lt;/a&gt;thoughtworks 业界以敏捷著称的软件企业又是如何改进的&lt;/h2&gt;&lt;img src=&quot;/image/thoughtworks.jpg&quot; alt=&quot;thoughtworks&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;项目的初期，dev,BA,QA就会做到一起IPM,让不同的角色都能了解story，让dev尽早的分析story以及采用那种技术去完成工作。&lt;br&gt;&lt;img src=&quot;/image/twqa.jpg&quot; alt=&quot;pair&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;开发阶段，dev会采用pair的方式，和QA，其他dev共同完成story，这样的好处是，一让不熟悉的新人尽快的了解项目架构，二与QApair,QA将会提供dev考虑不足的点，一起编写单元测试以及feature test。&lt;/li&gt;
&lt;li&gt;当dev完成代码工作后，会在github上发出pull request 或邀请其他dev，一起评审代码。&lt;/li&gt;
&lt;li&gt;各个项目都有自己完备的cd流程，确保发布过程的正确性，减少人为手工操作的失误。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;从以上业界代表公司的改进方式，我们可以看出它们都是从以下几点出发的：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;完整的单元测试覆盖率&lt;br&gt;UI自动化测试的覆盖率很难被保证，不断的改变的ui,使使用UI测试来验证产品的功能变得十分麻烦，但是单元测试则不同，各种语言都有自己的测试工具以及测试覆盖率工具帮助我们更好的完善我们的代码质量，我们也可以用接口测试与pact测试来保证第三方集成服务的正确性，所以高覆盖率的单元测试时产品的质量的基础。&lt;/li&gt;
&lt;li&gt;严格的代码审查机制&lt;br&gt;facebook，google，微软等公司严格的代码审查机制，是确保代码不被破坏的关键点，不会因为团队成员的某次粗心的提交，造成整个项目的失败。&lt;/li&gt;
&lt;li&gt;&lt;p&gt;强大的代码分析工具&lt;br&gt;代码级别的规范化，以及动态与静态扫描，进一步的帮助软件开发人员、质量保证人员查找代码中存在的结构性错误、安全漏洞等问题，从而保证软件的整体质量。与CI,CD的集成，能够让我们尽早的发现代码中存在的错误。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;规范化的测试流程&lt;br&gt;各个公司规范化的测试流程，保证项目在每一阶段都能够输出高质量的代码。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;完善的风险控制&lt;br&gt;完善的风险控制，不仅仅表现的google与Facebook的A/B测试，也表现在当有任何重大问题时，能够随意的切换到旧的版本，保证产品不因为该问题，就造成宕机。&lt;/li&gt;
&lt;li&gt;实时的监控&lt;br&gt;这些行业的巨头，都有着非常强大的运维团队，从产品的开发阶段就开始实施了各种监控手段，监控范围包括编译阶段，部署阶段，产品环境，硬件服务器的状态等，帮助项目的中所有成员及时的发现产品中存在的问题，快速跟踪以及定位问题。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;第一篇分析各个公司都采取了那些代码质量改进措施完毕，接下来我会从不同的角度去详细介绍这些改进措施。
&lt;/strong&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;大部分人看到这个题目时，直接的反应是QA关心代码质量干嘛，能看懂代码吗？怎么给dev feedback？&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/image/qa.gif&quot; alt=&quot;qa&quot;&gt;&lt;/p&gt;
&lt;p&gt;如果还有人持这样的观点后，那么我只能说too young too si
    
    </summary>
    
    
      <category term="QA" scheme="http://yoursite.com/tags/QA/"/>
    
  </entry>
  
  <entry>
    <title>capybara5--实现你第一个自动化场景</title>
    <link href="http://yoursite.com/2016/09/01/capybara5/"/>
    <id>http://yoursite.com/2016/09/01/capybara5/</id>
    <published>2016-09-01T14:31:15.000Z</published>
    <updated>2016-09-06T05:43:25.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;u5B9E_u73B0_u4F60_u7B2C_u4E00_u4E2A_u81EA_u52A8_u5316_u573A_u666F&quot;&gt;&lt;a href=&quot;#u5B9E_u73B0_u4F60_u7B2C_u4E00_u4E2A_u81EA_u52A8_u5316_u573A_u666F&quot; class=&quot;headerlink&quot; title=&quot;实现你第一个自动化场景&quot;&gt;&lt;/a&gt;实现你第一个自动化场景&lt;/h2&gt;&lt;p&gt;万事俱备，只欠东风，让我们来实现我们一个自动化测试场景，百度上搜索capybara。&lt;/p&gt;
&lt;figure class=&quot;highlight vbnet&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;describe &lt;span class=&quot;string&quot;&gt;&quot;i want search capybara&quot;&lt;/span&gt;,  :type =&amp;gt; :feature &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    context &lt;span class=&quot;comment&quot;&gt;&#39;i need to open browser&#39; do&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      it &lt;span class=&quot;comment&quot;&gt;&#39;should be  has an browser&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    context &lt;span class=&quot;comment&quot;&gt;&#39;when i input baidu url into the browser textarea&#39; do&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      it &lt;span class=&quot;comment&quot;&gt;&#39;should be redirect  to the baidu homepage&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    context &lt;span class=&quot;comment&quot;&gt;&#39;when i input the capybara into search text &#39; do&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      it &lt;span class=&quot;comment&quot;&gt;&#39;responds with 200 and show the result&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;p&gt;rspec 与 cucumber完整的使用指南并不包含在本书的范畴，但我会给大家讲解基本的项目架构与语法，帮助大家更好的理解capybara和自动化测试的规范。&lt;/p&gt;
&lt;h3 id=&quot;rspec_u65B9_u5F0F&quot;&gt;&lt;a href=&quot;#rspec_u65B9_u5F0F&quot; class=&quot;headerlink&quot; title=&quot;rspec方式&quot;&gt;&lt;/a&gt;rspec方式&lt;/h3&gt;&lt;p&gt;对于基于rspec框架的项目，我们首先需要创建spec目录，来将我们的测试文件放置当中，这样做使我们项目代码结构更加清晰。&lt;br&gt;此外我们还需要创建spec/rspec_help.rb文件帮助我们设置测试的配置信息。&lt;/p&gt;
&lt;p&gt;如果你的项目是基于rails的，那么就更简单了，你只需要执行以下命令，系统就帮助我们完成这些基础配置和文件的生成&lt;/p&gt;
&lt;figure class=&quot;highlight cmake&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;rails generate rspec:&lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;.rspec&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;spec/spec_helper&lt;span class=&quot;class&quot;&gt;.rb&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;spec/rails_helper.rb&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;让我正式开始&lt;br&gt;首先我们需要配置spec_helper.rb文件，&lt;br&gt;将以下内容复制到spec_helper.rb中，稍后章节中我将具体介绍配置文件中每条代码实际的作用&lt;/p&gt;
&lt;figure class=&quot;highlight elixir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;117&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;require &lt;span class=&quot;string&quot;&gt;&quot;capybara/rspec&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;require &lt;span class=&quot;string&quot;&gt;&quot;capybara&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;require &lt;span class=&quot;string&quot;&gt;&quot;rspec&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;require &lt;span class=&quot;string&quot;&gt;&#39;pry&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;constant&quot;&gt;Capybara.&lt;/span&gt;default_driver = &lt;span class=&quot;symbol&quot;&gt;:selenium&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;constant&quot;&gt;Capybara.&lt;/span&gt;app_host = &lt;span class=&quot;string&quot;&gt;&#39;http://www.baidu.com&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;constant&quot;&gt;Capybara.&lt;/span&gt;register_driver &lt;span class=&quot;symbol&quot;&gt;:selenium&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; |app| &lt;span class=&quot;constant&quot;&gt;Capybara:&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:Selenium&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:Driver&lt;/span&gt;.new(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app, &lt;span class=&quot;symbol&quot;&gt;:browser&lt;/span&gt; =&amp;gt; &lt;span class=&quot;symbol&quot;&gt;:chrome&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# This file was generated by the `rspec --init` command. Conventionally, all&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# specs live under a `spec` directory, which RSpec adds to the `$LOAD_PATH`.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# The generated `.rspec` file contains `--require spec_helper` which will cause&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# this file to always be loaded, without a need to explicitly require it in any&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# files.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Given that it is always loaded, you are encouraged to keep this file as&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# light-weight as possible. Requiring heavyweight dependencies from this file&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# will add to the boot time of your test suite on EVERY test run, even for an&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# individual file that may not need all of that loaded. Instead, consider making&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# a separate helper file that requires the additional dependencies and performs&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# the additional setup, and require it from the spec files that actually need&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# it.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# The `.rspec` file also contains a few flags that are not defaults but that&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# users commonly want.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# See http://rubydoc.info/gems/rspec-core/RSpec/Core/Configuration&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;constant&quot;&gt;RSpec.&lt;/span&gt;configure &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; |config|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# rspec-expectations config goes here. You can use an alternate&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# assertion/expectation library such as wrong or the stdlib/minitest&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# assertions if you prefer.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  config.expect_with &lt;span class=&quot;symbol&quot;&gt;:rspec&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; |expectations|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# This option will default to `true` in RSpec 4. It makes the `description`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# and `failure_message` of custom matchers include text for helper methods&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# defined using `chain`, e.g.:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;#     be_bigger_than(2).and_smaller_than(4).description&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;#     # =&amp;gt; &quot;be bigger than 2 and smaller than 4&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# ...rather than:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;#     # =&amp;gt; &quot;be bigger than 2&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    expectations.include_chain_clauses_in_custom_matcher_descriptions = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# rspec-mocks config goes here. You can use an alternate test double&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# library (such as bogus or mocha) by changing the `mock_with` option here.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  config.mock_with &lt;span class=&quot;symbol&quot;&gt;:rspec&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; |mocks|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# Prevents you from mocking or stubbing a method that does not exist on&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# a real object. This is generally recommended, and will default to&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# `true` in RSpec 4.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mocks.verify_partial_doubles = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# This option will default to `:apply_to_host_groups` in RSpec 4 (and will&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# have no way to turn it off -- the option exists only for backwards&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# compatibility in RSpec 3). It causes shared context metadata to be&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# inherited by the metadata hash of host groups and examples, rather than&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# triggering implicit auto-inclusion in groups with matching metadata.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  config.shared_context_metadata_behavior = &lt;span class=&quot;symbol&quot;&gt;:apply_to_host_groups&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# The settings below are suggested to provide a good initial experience&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# with RSpec, but feel free to customize to your heart&#39;s content.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;=&lt;span class=&quot;keyword&quot;&gt;begin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# This allows you to limit a spec run to individual examples or groups&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# you care about by tagging them with `:focus` metadata. When nothing&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# is tagged with `:focus`, all examples get run. RSpec also provides&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# aliases for `it`, `describe`, and `context` that include `:focus`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# metadata: `fit`, `fdescribe` and `fcontext`, respectively.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  config.filter_run_when_matching &lt;span class=&quot;symbol&quot;&gt;:focus&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# Allows RSpec to persist some state between runs in order to support&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# the `--only-failures` and `--next-failure` CLI options. We recommend&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# you configure your source control system to ignore this file.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  config.example_status_persistence_file_path = &lt;span class=&quot;string&quot;&gt;&quot;spec/examples.txt&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# Limits the available syntax to the non-monkey patched syntax that is&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# recommended. For more details, see:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;#   - http://rspec.info/blog/2012/06/rspecs-new-expectation-syntax/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;#   - http://www.teaisaweso.me/blog/2013/05/27/rspecs-new-message-expectation-syntax/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;#   - http://rspec.info/blog/2014/05/notable-changes-in-rspec-3/#zero-monkey-patching-mode&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  config.disable_monkey_patching!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# This setting enables warnings. It&#39;s recommended, but in some cases may&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# be too noisy due to issues in dependencies.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  config.warnings = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# Many RSpec users commonly either run the entire suite or an individual&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# file, and it&#39;s useful to allow more verbose output when running an&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# individual spec file.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  if config.files_to_run.one?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# Use the documentation formatter for detailed output,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# unless a formatter has already been configured&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# (e.g. via a command-line flag).&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    config.default_formatter = &lt;span class=&quot;string&quot;&gt;&#39;doc&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# Print the 10 slowest examples and example groups at the&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# end of the spec run, to help surface which specs are running&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# particularly slow.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  config.profile_examples = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# Run specs in random order to surface order dependencies. If you find an&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# order dependency and want to debug it, you can fix the order by providing&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# the seed, which is printed after each run.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;#     --seed 1234&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  config.order = &lt;span class=&quot;symbol&quot;&gt;:random&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# Seed global randomization in this process using the `--seed` CLI option.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# Setting this allows you to use `--seed` to deterministically reproduce&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# test failures related to randomization by passing the same `--seed` value&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# as the one that triggered the failure.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;constant&quot;&gt;Kernel.&lt;/span&gt;srand config.seed&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;=&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们执行以下命令来运行我们的测试&lt;/p&gt;
&lt;figure class=&quot;highlight nimrod&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# lqi @ CNlqi in ~/work/test/capybara_demo on git:master x [22:00:31]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ rspec ./spec/features/baidusearch_spec.rb&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;***&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;Pending&lt;/span&gt;: (&lt;span class=&quot;type&quot;&gt;Failures&lt;/span&gt; listed here are expected &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; affect your suite&#39;s status)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) i want search capybara i need to open browser should be  has an browser&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;comment&quot;&gt;# Not yet implemented&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;comment&quot;&gt;# ./spec/features/bb_spec.rb:9&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) i want search capybara &lt;span class=&quot;keyword&quot;&gt;when&lt;/span&gt; i input baidu url into the browser textarea should be redirect  to the baidu homepage&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;comment&quot;&gt;# Not yet implemented&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;comment&quot;&gt;# ./spec/features/bb_spec.rb:16&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;) i want search capybara &lt;span class=&quot;keyword&quot;&gt;when&lt;/span&gt; i input the capybara into search text  responds &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; show the &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;comment&quot;&gt;# Not yet implemented&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;comment&quot;&gt;# ./spec/features/bb_spec.rb:20&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;Finished&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;00059&lt;/span&gt; seconds (files took &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;37&lt;/span&gt; seconds to load)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; examples, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; failures, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; pending&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们从测试结果能看出，我们并没有实现任何具体操作步骤，接下就让我们完成这些工作。&lt;br&gt;将我们测试文件baidusearch_spec.rb修改为以下内容&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;operator&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;describe&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;i want search capybara&quot;&lt;/span&gt;,  :&lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt; =&amp;gt; :feature &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;context&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;the page&quot;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;before&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      page.driver.browser.manage.window.resize_to(&lt;span class=&quot;number&quot;&gt;1440&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;900&lt;/span&gt;) #Mention it here&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      visit &lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;context&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;i need to open browser&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      it &lt;span class=&quot;string&quot;&gt;&#39;should be  has an browser&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      expect(page.driver.browser.browser).&lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt; eq :chrome&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;context&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;when i input baidu url into the browser textarea&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      it &lt;span class=&quot;string&quot;&gt;&#39;should be redirect  to the baidu homepage&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       expect(page.driver.current_url).&lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt; eq(&lt;span class=&quot;string&quot;&gt;&#39;https://www.baidu.com/&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;context&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;when i input the capybara into search text &#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      it &lt;span class=&quot;string&quot;&gt;&#39; show search the result&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fill_in &lt;span class=&quot;string&quot;&gt;&#39;kw&#39;&lt;/span&gt;, :&lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;capybara&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        click_button &lt;span class=&quot;string&quot;&gt;&#39;百度一下&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        expect(page).&lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt; have_content &lt;span class=&quot;string&quot;&gt;&#39;Capybara - Wikipedia, the free encyclopedia&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;再次运行测试&lt;br&gt;这时浏览器打开并且按照我们测试文件中具体步骤一步一步进行操作和验证，全部通过&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;# lqi @ CNlqi in ~/work/test/capybara_demo on git:master x [&lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;26&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;] C:&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ rspec ./spec/features/baidusearch_spec.rb&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Finished in &lt;span class=&quot;number&quot;&gt;5.46&lt;/span&gt; seconds (files took &lt;span class=&quot;number&quot;&gt;3.81&lt;/span&gt; seconds to load)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; examples, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; failures&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;cucumber_u65B9_u5F0F&quot;&gt;&lt;a href=&quot;#cucumber_u65B9_u5F0F&quot; class=&quot;headerlink&quot; title=&quot;cucumber方式&quot;&gt;&lt;/a&gt;cucumber方式&lt;/h3&gt;&lt;p&gt;首先我们运行cucumber查看cucumber是否安装正确&lt;br&gt;&lt;figure class=&quot;highlight stata&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# lqi @ CNlqi &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; ~/work/&lt;span class=&quot;keyword&quot;&gt;test&lt;/span&gt;/capybara_demo &lt;span class=&quot;keyword&quot;&gt;on&lt;/span&gt; git:master x [13:42:41]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ cucumber&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;No&lt;/span&gt; such &lt;span class=&quot;keyword&quot;&gt;file&lt;/span&gt; or directory - features. You can &lt;span class=&quot;keyword&quot;&gt;use&lt;/span&gt; `cucumber --init` to get started.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;当我们看到以上提示没有文件或者目录时，我们就可以确认cucumber安装成功&lt;br&gt;接下来让我们初始化cucumber测试目录结构&lt;br&gt;&lt;figure class=&quot;highlight livecodeserver&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# lqi @ CNlqi in ~/work/test/capybara_demo on git:master x [11:24:56] C:2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ cucumber &lt;span class=&quot;comment&quot;&gt;--init&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;create&lt;/span&gt;   features&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;create&lt;/span&gt;   features/step_definitions&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;create&lt;/span&gt;   features/support&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;create&lt;/span&gt;   features/support/env.rb&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这样就完成目录结构的初始化，我们要将所有feature文件都放到features目录下&lt;br&gt;support目录下，使我们需要的一些配置文件.&lt;/p&gt;
&lt;p&gt;step&lt;em&gt;definitions目录下，是对feature文件中的具体操作实现。因为我们都知道feature文件中只是做了一些描述，具体的执行是放到step&lt;/em&gt; definitions下面的文件里面的。&lt;br&gt;接下来，我们用cucumber完成和上面spec一样的场景。&lt;br&gt;&lt;figure class=&quot;highlight nimrod&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;Feature&lt;/span&gt;: &lt;span class=&quot;type&quot;&gt;Search&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; capybara on baidu&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;type&quot;&gt;Scenario&lt;/span&gt;: &lt;span class=&quot;type&quot;&gt;Search&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; website &lt;span class=&quot;keyword&quot;&gt;of&lt;/span&gt; baidu&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;type&quot;&gt;Given&lt;/span&gt; I am on the baidu home page&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;type&quot;&gt;When&lt;/span&gt; I search &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;capybara&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;type&quot;&gt;Then&lt;/span&gt; website &lt;span class=&quot;keyword&quot;&gt;of&lt;/span&gt; search &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt; are returned&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在命令行中运行cucumber命令，&lt;br&gt;运行上述测试用例，便可以看到下列输出，你可以使用下面的代码段实现步骤定义：&lt;br&gt;&lt;figure class=&quot;highlight livecodeserver&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# lqi @ CNlqi in ~/work/test/capybara_demo on git:master x [14:25:16] C:1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ cucumber&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Feature: Search &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; capybara &lt;span class=&quot;command&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;baidu&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Scenario: Search &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; website &lt;span class=&quot;operator&quot;&gt;of&lt;/span&gt; baidu        &lt;span class=&quot;comment&quot;&gt;# features/baidu_search_capybara.feature:2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Given I am &lt;span class=&quot;command&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;baidu&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;home&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;page&lt;/span&gt;          # &lt;span class=&quot;title&quot;&gt;features&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;baidu_search_capybara&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;feature&lt;/span&gt;:&lt;span class=&quot;title&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    When I search &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;capybara&quot;&lt;/span&gt;               &lt;span class=&quot;comment&quot;&gt;# features/baidu_search_capybara.feature:4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Then website &lt;span class=&quot;operator&quot;&gt;of&lt;/span&gt; search &lt;span class=&quot;built_in&quot;&gt;result&lt;/span&gt; are returned &lt;span class=&quot;comment&quot;&gt;# features/baidu_search_capybara.feature:5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; scenario (&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; undefined)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; steps (&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; undefined)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;m0&lt;span class=&quot;number&quot;&gt;.395&lt;/span&gt;s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;You can implement step definitions &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; undefined steps &lt;span class=&quot;operator&quot;&gt;with&lt;/span&gt; these snippets:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Given(/^I am &lt;span class=&quot;command&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;baidu&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;home&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;page&lt;/span&gt;$/) &lt;span class=&quot;title&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  pending &lt;span class=&quot;comment&quot;&gt;# Write code here that turns the phrase above into concrete actions&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;When&lt;/span&gt;(/^&lt;span class=&quot;title&quot;&gt;I&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;search&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;for&lt;/span&gt; &quot;([^&quot;]*)&quot;$/) &lt;span class=&quot;title&quot;&gt;do&lt;/span&gt; |&lt;span class=&quot;title&quot;&gt;arg1&lt;/span&gt;|&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  pending &lt;span class=&quot;comment&quot;&gt;# Write code here that turns the phrase above into concrete actions&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;Then&lt;/span&gt;(/^&lt;span class=&quot;title&quot;&gt;website&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;search&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;are&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;returned&lt;/span&gt;$/) &lt;span class=&quot;title&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  pending &lt;span class=&quot;comment&quot;&gt;# Write code here that turns the phrase above into concrete actions&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;复制以上代码到具体step.rb文件中，我们新建文件capybara_search_step.rb。&lt;br&gt;再次运行cucumber命令&lt;br&gt;现在,您将看到命令行报告,这些步骤已经存在但没有实现:&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;# lqi @ CNlqi in ~/work/test/capybara_demo on git:master x [&lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;25&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ cucumber&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Feature: Search &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; capybara on baidu&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Scenario: Search &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; website of baidu        &lt;span class=&quot;preprocessor&quot;&gt;# features/baidu_search_capybara.feature:&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Given I am on the baidu home page          &lt;span class=&quot;preprocessor&quot;&gt;# features/step_definitions/capybara_search_step.rb:&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      TODO (Cucumber::Pending)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      ./features/step_definitions/capybara_search_step.rb:&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;:in `/^I am on the baidu home page$/&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      features/baidu_search_capybara.feature:&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;:in `Given I am on the baidu home page&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    When I search &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;capybara&quot;&lt;/span&gt;               &lt;span class=&quot;preprocessor&quot;&gt;# features/step_definitions/capybara_search_step.rb:&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Then website of search result are returned &lt;span class=&quot;preprocessor&quot;&gt;# features/step_definitions/capybara_search_step.rb:&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; scenario (&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; pending)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; steps (&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; skipped, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; pending)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;m0&lt;span class=&quot;number&quot;&gt;.152&lt;/span&gt;s&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;接下来，我们通过增加少量的代码来使我们自动化运行起来。&lt;br&gt;首先确保你的env.rb文件配置如下：&lt;br&gt;&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;capybara/cucumber&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;constant&quot;&gt;Capybara&lt;/span&gt;.default_driver = &lt;span class=&quot;symbol&quot;&gt;:selenium&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;首先，我们在文件中添加require ‘capybara/cucumber’;&lt;br&gt;这是我们必须需要加载文件。&lt;br&gt;之后我们需要告诉capybara使用selenium驱动：&lt;br&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Capybara&lt;span class=&quot;class&quot;&gt;.default_driver&lt;/span&gt; = :selenium&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;再次重申，capybara只是充当一个中间件，适配不同的dirver,使我们能够兼容任何的驱动程序,例如（Selecting the Driver，&lt;br&gt;RackTest，&lt;br&gt;Selenium，&lt;br&gt;Capybara-webkit，&lt;br&gt;Poltergeist）这里我们选择selemium webdriver 是因为它是目前最流行的开源浏览器自动化工具，很多公司的自动化框架都是基于它之上的二次开发而成，例如appium，淘宝的Automan X,网易Dagger等。&lt;/p&gt;
&lt;p&gt;如果我们不设置驱动，将会得到以下错误&lt;br&gt;&lt;figure class=&quot;highlight crystal&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# lqi @ CNlqi in ~/work/test/capybara_demo on git:master x [17:13:47] C:2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$ &lt;/span&gt;cucumber&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rack-test requires a rack application, but none was given (&lt;span class=&quot;constant&quot;&gt;ArgumentError&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/&lt;span class=&quot;constant&quot;&gt;Users&lt;/span&gt;/lqi/.rbenv/versions/&lt;span class=&quot;number&quot;&gt;2.2&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;/&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;lib&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;ruby&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;gems&lt;/span&gt;/2.2.0/&lt;span class=&quot;title&quot;&gt;gems&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;capybara&lt;/span&gt;-2.8.0/&lt;span class=&quot;title&quot;&gt;lib&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;capybara&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;rack_test&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;driver&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;rb&lt;/span&gt;:17:&lt;span class=&quot;title&quot;&gt;in&lt;/span&gt; `&lt;span class=&quot;title&quot;&gt;initialize&lt;/span&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/&lt;span class=&quot;constant&quot;&gt;Users&lt;/span&gt;/lqi/.rbenv/versions/&lt;span class=&quot;number&quot;&gt;2.2&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;/&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;lib&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;ruby&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;gems&lt;/span&gt;/2.2.0/&lt;span class=&quot;title&quot;&gt;gems&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;capybara&lt;/span&gt;-2.8.0/&lt;span class=&quot;title&quot;&gt;lib&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;capybara&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;rb&lt;/span&gt;:509:&lt;span class=&quot;title&quot;&gt;in&lt;/span&gt; `&lt;span class=&quot;title&quot;&gt;new&lt;/span&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/&lt;span class=&quot;constant&quot;&gt;Users&lt;/span&gt;/lqi/.rbenv/versions/&lt;span class=&quot;number&quot;&gt;2.2&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;/&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;lib&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;ruby&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;gems&lt;/span&gt;/2.2.0/&lt;span class=&quot;title&quot;&gt;gems&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;capybara&lt;/span&gt;-2.8.0/&lt;span class=&quot;title&quot;&gt;lib&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;capybara&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;rb&lt;/span&gt;:509:&lt;span class=&quot;title&quot;&gt;in&lt;/span&gt; `&lt;span class=&quot;title&quot;&gt;block&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;in&lt;/span&gt; &amp;lt;&lt;span class=&quot;title&quot;&gt;top&lt;/span&gt; (&lt;span class=&quot;title&quot;&gt;required&lt;/span&gt;)&amp;gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/&lt;span class=&quot;constant&quot;&gt;Users&lt;/span&gt;/lqi/.rbenv/versions/&lt;span class=&quot;number&quot;&gt;2.2&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;/&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;lib&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;ruby&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;gems&lt;/span&gt;/2.2.0/&lt;span class=&quot;title&quot;&gt;gems&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;capybara&lt;/span&gt;-2.8.0/&lt;span class=&quot;title&quot;&gt;lib&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;capybara&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;session&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;rb&lt;/span&gt;:85:&lt;span class=&quot;title&quot;&gt;in&lt;/span&gt; `&lt;span class=&quot;title&quot;&gt;call&lt;/span&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/&lt;span class=&quot;constant&quot;&gt;Users&lt;/span&gt;/lqi/.rbenv/versions/&lt;span class=&quot;number&quot;&gt;2.2&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;/&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;lib&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;ruby&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;gems&lt;/span&gt;/2.2.0/&lt;span class=&quot;title&quot;&gt;gems&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;capybara&lt;/span&gt;-2.8.0/&lt;span class=&quot;title&quot;&gt;lib&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;capybara&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;session&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;rb&lt;/span&gt;:85:&lt;span class=&quot;title&quot;&gt;in&lt;/span&gt; `&lt;span class=&quot;title&quot;&gt;driver&lt;/span&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/&lt;span class=&quot;constant&quot;&gt;Users&lt;/span&gt;/lqi/work/test/capybara_demo/features/support/env.&lt;span class=&quot;symbol&quot;&gt;rb:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;:in &lt;span class=&quot;string&quot;&gt;`&amp;lt;top (required)&amp;gt;&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/Users/lqi/.rbenv/versions/2.2.2/lib/ruby/gems/2.2.0/gems/cucumber-2.4.0/lib/cucumber/rb_support/rb_language.rb:96:in `&lt;/span&gt;load&lt;span class=&quot;string&quot;&gt;&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/Users/lqi/.rbenv/versions/2.2.2/lib/ruby/gems/2.2.0/gems/cucumber-2.4.0/lib/cucumber/rb_support/rb_language.rb:96:in `load_code_file&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/&lt;span class=&quot;constant&quot;&gt;Users&lt;/span&gt;/lqi/.rbenv/versions/&lt;span class=&quot;number&quot;&gt;2.2&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;/&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;lib&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;ruby&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;gems&lt;/span&gt;/2.2.0/&lt;span class=&quot;title&quot;&gt;gems&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;cucumber&lt;/span&gt;-2.4.0/&lt;span class=&quot;title&quot;&gt;lib&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;cucumber&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;runtime&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;support_code&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;rb&lt;/span&gt;:142:&lt;span class=&quot;title&quot;&gt;in&lt;/span&gt; `&lt;span class=&quot;title&quot;&gt;load_file&lt;/span&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/&lt;span class=&quot;constant&quot;&gt;Users&lt;/span&gt;/lqi/.rbenv/versions/&lt;span class=&quot;number&quot;&gt;2.2&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;/&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;lib&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;ruby&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;gems&lt;/span&gt;/2.2.0/&lt;span class=&quot;title&quot;&gt;gems&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;cucumber&lt;/span&gt;-2.4.0/&lt;span class=&quot;title&quot;&gt;lib&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;cucumber&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;runtime&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;support_code&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;rb&lt;/span&gt;:84:&lt;span class=&quot;title&quot;&gt;in&lt;/span&gt; `&lt;span class=&quot;title&quot;&gt;block&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;load_files!&lt;/span&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/&lt;span class=&quot;constant&quot;&gt;Users&lt;/span&gt;/lqi/.rbenv/versions/&lt;span class=&quot;number&quot;&gt;2.2&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;/&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;lib&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;ruby&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;gems&lt;/span&gt;/2.2.0/&lt;span class=&quot;title&quot;&gt;gems&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;cucumber&lt;/span&gt;-2.4.0/&lt;span class=&quot;title&quot;&gt;lib&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;cucumber&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;runtime&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;support_code&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;rb&lt;/span&gt;:83:&lt;span class=&quot;title&quot;&gt;in&lt;/span&gt; `&lt;span class=&quot;title&quot;&gt;each&lt;/span&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/&lt;span class=&quot;constant&quot;&gt;Users&lt;/span&gt;/lqi/.rbenv/versions/&lt;span class=&quot;number&quot;&gt;2.2&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;/&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;lib&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;ruby&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;gems&lt;/span&gt;/2.2.0/&lt;span class=&quot;title&quot;&gt;gems&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;cucumber&lt;/span&gt;-2.4.0/&lt;span class=&quot;title&quot;&gt;lib&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;cucumber&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;runtime&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;support_code&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;rb&lt;/span&gt;:83:&lt;span class=&quot;title&quot;&gt;in&lt;/span&gt; `&lt;span class=&quot;title&quot;&gt;load_files!&lt;/span&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/&lt;span class=&quot;constant&quot;&gt;Users&lt;/span&gt;/lqi/.rbenv/versions/&lt;span class=&quot;number&quot;&gt;2.2&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;/&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;lib&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;ruby&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;gems&lt;/span&gt;/2.2.0/&lt;span class=&quot;title&quot;&gt;gems&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;cucumber&lt;/span&gt;-2.4.0/&lt;span class=&quot;title&quot;&gt;lib&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;cucumber&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;runtime&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;rb&lt;/span&gt;:253:&lt;span class=&quot;title&quot;&gt;in&lt;/span&gt; `&lt;span class=&quot;title&quot;&gt;load_step_definitions&lt;/span&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/&lt;span class=&quot;constant&quot;&gt;Users&lt;/span&gt;/lqi/.rbenv/versions/&lt;span class=&quot;number&quot;&gt;2.2&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;/&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;lib&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;ruby&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;gems&lt;/span&gt;/2.2.0/&lt;span class=&quot;title&quot;&gt;gems&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;cucumber&lt;/span&gt;-2.4.0/&lt;span class=&quot;title&quot;&gt;lib&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;cucumber&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;runtime&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;rb&lt;/span&gt;:61:&lt;span class=&quot;title&quot;&gt;in&lt;/span&gt; `&lt;span class=&quot;title&quot;&gt;run!&lt;/span&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/&lt;span class=&quot;constant&quot;&gt;Users&lt;/span&gt;/lqi/.rbenv/versions/&lt;span class=&quot;number&quot;&gt;2.2&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;/&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;lib&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;ruby&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;gems&lt;/span&gt;/2.2.0/&lt;span class=&quot;title&quot;&gt;gems&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;cucumber&lt;/span&gt;-2.4.0/&lt;span class=&quot;title&quot;&gt;lib&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;cucumber&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;cli&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;rb&lt;/span&gt;:32:&lt;span class=&quot;title&quot;&gt;in&lt;/span&gt; `&lt;span class=&quot;title&quot;&gt;execute!&lt;/span&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/&lt;span class=&quot;constant&quot;&gt;Users&lt;/span&gt;/lqi/.rbenv/versions/&lt;span class=&quot;number&quot;&gt;2.2&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;/&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;lib&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;ruby&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;gems&lt;/span&gt;/2.2.0/&lt;span class=&quot;title&quot;&gt;gems&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;cucumber&lt;/span&gt;-2.4.0/&lt;span class=&quot;title&quot;&gt;bin&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;cucumber&lt;/span&gt;:8:&lt;span class=&quot;title&quot;&gt;in&lt;/span&gt; `&amp;lt;&lt;span class=&quot;title&quot;&gt;top&lt;/span&gt; (&lt;span class=&quot;title&quot;&gt;required&lt;/span&gt;)&amp;gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/&lt;span class=&quot;constant&quot;&gt;Users&lt;/span&gt;/lqi/.rbenv/versions/&lt;span class=&quot;number&quot;&gt;2.2&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;/bin/&lt;span class=&quot;symbol&quot;&gt;cucumber:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;:in &lt;span class=&quot;string&quot;&gt;`load&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/Users/lqi/.rbenv/versions/2.2.2/bin/cucumber:23:in `&lt;/span&gt;&amp;lt;main&amp;gt;&lt;span class=&quot;string&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;默认情况下，capybara被用来测试rack 应用。rack 是一个设计非常巧妙的中间件，被用作在rails与sinatra框架做全栈的Client/Server集成测试，并且没有什么HTTP的开销，从而是测试能够快速运行。稍后，我们将详细介绍capybara如何测试在rails与sinatra的应用测试。&lt;br&gt;接下来我们的任务就是你在步骤定义用Ruby代码调用capybaraAPI驱动测试。&lt;br&gt;将以下代码复制到你的capybara_search_step.rb中&lt;br&gt;&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;constant&quot;&gt;Given&lt;/span&gt;(&lt;span class=&quot;regexp&quot;&gt;/^I am on the baidu home page$/&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  visit &lt;span class=&quot;string&quot;&gt;&#39;https://www.baidu.com/&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;constant&quot;&gt;When&lt;/span&gt;(&lt;span class=&quot;regexp&quot;&gt;/^I search for &quot;([^&quot;]*)&quot;$/&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; |search_term|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  fill_in &lt;span class=&quot;string&quot;&gt;&#39;kw&#39;&lt;/span&gt;, &lt;span class=&quot;symbol&quot;&gt;:with&lt;/span&gt; =&amp;gt; search_term&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  click_on &lt;span class=&quot;string&quot;&gt;&#39;su&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;constant&quot;&gt;Then&lt;/span&gt;(&lt;span class=&quot;regexp&quot;&gt;/^website of search result are returned$/&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     page.should have_content &lt;span class=&quot;string&quot;&gt;&#39;capybara&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在我们分析代码之前,让我们先运行测试,看看会发生什么。像往常一样,在命令行中输入cucumber。&lt;br&gt;希望你能看到chrome打开，并且跳转到baidu首页，之后搜索到capybara结果并返回。&lt;br&gt;恭喜你，你已经利用capybara完成了第一个全栈的集成测试。&lt;/p&gt;
&lt;p&gt;在我们深入了解capybara丰富的API之前，让我们简要的回顾一下每个步骤的内容，这里你可以看到capybra如何优雅而简洁使用api，代码字面含义已经向我们展示它在干什么，不需要多解释。cucumber和capybra配合起来使用，具有良好的可读性，项目中的任何一个角色都能够当前场景做了哪些事情，非常适合应用于自动化和维护工作。&lt;br&gt;第一行代码告诉capybara通知driver（selenium webdriver）&lt;br&gt;打开一个浏览器并跳转到我们提供的链接地址：&lt;br&gt;&lt;figure class=&quot;highlight nginx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;visit&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;https://www.baidu.com/&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;  接下来，我们需要输入查询条件，点击搜索按钮，所以我们告诉capybara去让driver在页面上查找搜输入栏，并填写搜索条件。&lt;/p&gt;
&lt;figure class=&quot;highlight dart&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;fill_in &lt;span class=&quot;string&quot;&gt;&#39;kw&#39;&lt;/span&gt;, :&lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; =&amp;gt; search_term&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;click_on &lt;span class=&quot;string&quot;&gt;&#39;su&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里唯一的困惑是fill_in 方法中使用’kw’这个关键字，当你代码告诉capybara去在页面上寻找&lt;br&gt;这个关键字时，capybara使用了一种’猜测’的机制。&lt;br&gt;也就是说capybra试图在DOM元素各种属性中找到你要求的。在这个例子中,我们知道baidu搜索表栏的id属性kw，这是我们需要在代码中提供的。&lt;br&gt;最后,我们需要检查返回的搜索结果是否正确。为此,我们使用capybara的内置RSpec匹配器。如果你不知道RSpec,rspec官方文档是你最好的选择(&lt;a href=&quot;http://rspec.info/),与传统断言不同是当条件不满足时，会抛出异常，而不是只是返回false&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://rspec.info/),与传统断言不同是当条件不满足时，会抛出异常，而不是只是返回false&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;page&lt;span class=&quot;class&quot;&gt;.should&lt;/span&gt; have_content &lt;span class=&quot;string&quot;&gt;&#39;capybara&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;最后需要注意的是,have_content方法的匹配器内置了一个默认的等待。这是非常有用的,因为如果查找的内容我是通过JavaScript异步加载而成的话(而不是在初始页面就加载完成),capybara在我们设置默认等待时间重试,看它是否存在。我们将在后面的章节介绍如何处理异步JavaScript的问题。&lt;/p&gt;
&lt;p&gt;总结，本章目标是让你认识capybra，以及配置它的运行环境，ruby和rubygems以及相关依赖。最后，我们通过一个简单的场景来编写自动化，来加强我们的学习。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;u5B9E_u73B0_u4F60_u7B2C_u4E00_u4E2A_u81EA_u52A8_u5316_u573A_u666F&quot;&gt;&lt;a href=&quot;#u5B9E_u73B0_u4F60_u7B2C_u4E00_u4E2A_u81EA_u52A8_u5316_u
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>capybara4--安装cucumber</title>
    <link href="http://yoursite.com/2016/08/30/capybara4/"/>
    <id>http://yoursite.com/2016/08/30/capybara4/</id>
    <published>2016-08-30T07:54:19.000Z</published>
    <updated>2016-08-31T15:00:04.000Z</updated>
    
    <content type="html">&lt;p&gt;capybara是一个简单的API,它提供了抽象层在你真实自动化库之上。如果它帮助,认为capybara是你的翻译,你告诉它做一些事情，它将优雅的将命令转换为你应用驱动的API。&lt;/p&gt;
&lt;p&gt;所以当我们使用capybara进行翻译时，我们需要告诉capybara做什么并且需要一个API自动化库去进行翻译。&lt;br&gt;capybara是一个非常灵活的库,&lt;br&gt;通过这本书我们将看到它在各种场景中应用。然而。目前为止最常见的情景是应用cucumber作为capybara测试驱动，去驱动selenium webdriver 开展浏览器自动化。&lt;br&gt;当cucumber被调用来解析这些简单易懂的英语场景时，它将使用正则表达式去将这些匹配&lt;/p&gt;
&lt;h2 id=&quot;cucumber_u4ECB_u7ECD&quot;&gt;&lt;a href=&quot;#cucumber_u4ECB_u7ECD&quot; class=&quot;headerlink&quot; title=&quot;cucumber介绍&quot;&gt;&lt;/a&gt;cucumber介绍&lt;/h2&gt;&lt;p&gt;cucumber是一种可以使用文本描述语言来执行自动测试用例的工具，使用的语言叫做Gherkin.&lt;/p&gt;
&lt;p&gt;Gherkin用于描述软件的行为而不需要了解具体的实现，使用Gherkin主要有两个目的文档和自动测试用例（我们希望能够和手工测试用例也统一）。 Gherkin支持超过40种语言，包括英文、中文。 Gherkin可以在任何地方新增注释，注释以#开头，每一个文件都是已.feature结尾，在feature文件中输入功能描述、场景、步骤，当执行这个功能时每一个步骤都需要编写ruby代码块来实现具体的功能，当前cucumber支持多种语言，除了ruby还可以使用java、javascript来编写具体定义层的实现。&lt;/p&gt;
&lt;h3 id=&quot;u4EE5_u4E0B_u662F_u4E00_u4E2Acucumber__u573A_u666F_u7684_u4F8B_u5B50&quot;&gt;&lt;a href=&quot;#u4EE5_u4E0B_u662F_u4E00_u4E2Acucumber__u573A_u666F_u7684_u4F8B_u5B50&quot; class=&quot;headerlink&quot; title=&quot;以下是一个cucumber 场景的例子&quot;&gt;&lt;/a&gt;以下是一个cucumber 场景的例子&lt;/h3&gt;&lt;p&gt;   Feature: Search for Videos on Baidu&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Scenario: Search for Videos
    Given I am on the  baidu home page
    When I search for &amp;quot;capybara&amp;quot;
    Then search result are returned
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;我们设置可以采用中文实现场景&lt;br&gt;中文的话最前面必须增加# language: zh-CN&lt;/p&gt;
&lt;figure class=&quot;highlight vala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;# language: zh-CN&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;功能:第一个中文程序&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;中文实现&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;场景:中文实现场景&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;假如当前是中文&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;当输入是测试&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;那么能看到中文测试&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;下面的流程图说明了从cucumber到底层驱动如何实现，capybara在整个流程里面充当是中间价的作用。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/image/capybaraflow.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;安装&lt;br&gt;&lt;figure class=&quot;highlight cmake&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;gem &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; cucumber&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果你使用的是 bundler，只是需要添加以下代码到Gemfile:&lt;/p&gt;
&lt;figure class=&quot;highlight elixir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;group &lt;span class=&quot;symbol&quot;&gt;:test&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  gem &lt;span class=&quot;string&quot;&gt;&#39;cucumber&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;初始化features目录：&lt;br&gt;&lt;figure class=&quot;highlight applescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cucumber &lt;span class=&quot;comment&quot;&gt;--init&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;查看完帮助列表：&lt;br&gt;&lt;figure class=&quot;highlight applescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cucumber &lt;span class=&quot;comment&quot;&gt;--help&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;运行所有features：&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cucumber&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;Cucumber-Rails&quot;&gt;&lt;a href=&quot;#Cucumber-Rails&quot; class=&quot;headerlink&quot; title=&quot;Cucumber-Rails&quot;&gt;&lt;/a&gt;Cucumber-Rails&lt;/h2&gt;&lt;p&gt;如果你使用capybara 来测试rails应用，你应该安装cucumber－rails gem 而不是标准的rails gem。&lt;br&gt;这个gem需要capybara和cucumber作为依赖。&lt;br&gt;所以当你安装cucumber－rails gem时，会自动安装这些依赖，我们只需要运行以下命令&lt;br&gt;&lt;figure class=&quot;highlight cmake&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;gem &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; cucumber-rails&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果你使用bundle，只需要将以下代码添加进gemfile:&lt;br&gt;&lt;figure class=&quot;highlight elixir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;group &lt;span class=&quot;symbol&quot;&gt;:test&lt;/span&gt;, &lt;span class=&quot;symbol&quot;&gt;:development&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  gem &lt;span class=&quot;string&quot;&gt;&#39;cucumber-rails&#39;&lt;/span&gt;, &lt;span class=&quot;symbol&quot;&gt;:require&lt;/span&gt; =&amp;gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# database_cleaner is not required, but highly recommended&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  gem &lt;span class=&quot;string&quot;&gt;&#39;database_cleaner&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后运行&lt;br&gt;&lt;figure class=&quot;highlight armasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bundle &lt;/span&gt;install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;运行生成器帮助我们生成目录&lt;br&gt;&lt;figure class=&quot;highlight cmake&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;rails generate cucumber:&lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;capybara是一个简单的API,它提供了抽象层在你真实自动化库之上。如果它帮助,认为capybara是你的翻译,你告诉它做一些事情，它将优雅的将命令转换为你应用驱动的API。&lt;/p&gt;
&lt;p&gt;所以当我们使用capybara进行翻译时，我们需要告诉capybara做什么并且
    
    </summary>
    
    
      <category term="capybara" scheme="http://yoursite.com/tags/capybara/"/>
    
  </entry>
  
  <entry>
    <title>capybara3--rspec配置</title>
    <link href="http://yoursite.com/2016/08/30/capybara3/"/>
    <id>http://yoursite.com/2016/08/30/capybara3/</id>
    <published>2016-08-30T04:42:49.000Z</published>
    <updated>2016-09-01T04:45:20.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;rspec_u914D_u7F6E&quot;&gt;&lt;a href=&quot;#rspec_u914D_u7F6E&quot; class=&quot;headerlink&quot; title=&quot;rspec配置&quot;&gt;&lt;/a&gt;rspec配置&lt;/h2&gt;&lt;p&gt;我们知道Capybara 只是是一个用来以模拟用户对web应用的操作来测试web应用的工具包，不能真正的称之为测试框架，它需要其他的测试驱动框架来帮助我们完成测试工作。所以我们需要一个测试驱动框架.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/image/rspec.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;RSpec由Steven Baker开发并在2005年发布，全面支持Ruby程序的BDD开发测试方式，并且对于Rails程序有着良好的支持，针对View，Controller和Model每一层都有良好的支持。RSpec目前的最新版本是：3.5。&lt;/p&gt;
&lt;p&gt;它在 BDD 流程的开发中被用来写高可读性的测试，引导并验证你开发的应用程序。&lt;/p&gt;
&lt;p&gt;minitest与rspec都是ruby和rails比较流行的框架。这里我们选择rspec。&lt;/p&gt;
&lt;p&gt;安装rspec很简单,打开command line运行一下操作：&lt;br&gt;&lt;figure class=&quot;highlight cmake&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;gem &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; rspec&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;或者将rspec 添加到gemfile里&lt;br&gt;&lt;figure class=&quot;highlight nginx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;rspec&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;执行bundle install 来安装&lt;br&gt;如果你的项目采用的时rails,那么&lt;strong&gt;rspec-rails&lt;/strong&gt; 或许更适合你&lt;/p&gt;
&lt;p&gt;在gemfile里添加&lt;br&gt;&lt;figure class=&quot;highlight elixir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;group &lt;span class=&quot;symbol&quot;&gt;:development&lt;/span&gt;, &lt;span class=&quot;symbol&quot;&gt;:test&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  gem &lt;span class=&quot;string&quot;&gt;&#39;rspec-rails&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;~&amp;gt; 3.4&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;执行 bundle install&lt;/p&gt;
&lt;p&gt;初始化测试目录&lt;/p&gt;
&lt;figure class=&quot;highlight cmake&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;rails generate rspec:&lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这增加了以下文件用于配置:&lt;br&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;.rspec&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;spec/spec_helper&lt;span class=&quot;class&quot;&gt;.rb&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;spec/rails_helper.rb&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;rspec_u914D_u7F6E&quot;&gt;&lt;a href=&quot;#rspec_u914D_u7F6E&quot; class=&quot;headerlink&quot; title=&quot;rspec配置&quot;&gt;&lt;/a&gt;rspec配置&lt;/h2&gt;&lt;p&gt;我们知道Capybara 只是是一个用来以模拟用户对web应
    
    </summary>
    
    
      <category term="capybara" scheme="http://yoursite.com/tags/capybara/"/>
    
  </entry>
  
  <entry>
    <title>capybara2--准备环境</title>
    <link href="http://yoursite.com/2016/08/26/capybara2/"/>
    <id>http://yoursite.com/2016/08/26/capybara2/</id>
    <published>2016-08-26T14:48:50.000Z</published>
    <updated>2016-08-30T05:09:13.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;ruby_u73AF_u5883_u914D_u7F6E&quot;&gt;&lt;a href=&quot;#ruby_u73AF_u5883_u914D_u7F6E&quot; class=&quot;headerlink&quot; title=&quot;ruby环境配置&quot;&gt;&lt;/a&gt;ruby环境配置&lt;/h2&gt;&lt;p&gt;capycara&lt;br&gt;Capybara 需要 Ruby 1.9.3或之后的版本. 所以首先我们需要在我们的操作系统中，配置ruby运行环境&lt;/p&gt;
&lt;h3 id=&quot;windows&quot;&gt;&lt;a href=&quot;#windows&quot; class=&quot;headerlink&quot; title=&quot;windows&quot;&gt;&lt;/a&gt;windows&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;下载 &amp;amp; 安装 Ruby&lt;br&gt;从&lt;a href=&quot;http://rubyinstaller.org/或者&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://rubyinstaller.org/或者&lt;/a&gt; &lt;a href=&quot;http://railsinstaller.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://railsinstaller.org/&lt;/a&gt; 下载已经打包好的安装程序。&lt;br&gt;1.1安装 ruby版本&lt;/li&gt;
&lt;li&gt;安装 DevKit&lt;br&gt;从 &lt;a href=&quot;http://rubyinstaller.org/downloads/下载安装DevKit&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://rubyinstaller.org/downloads/下载安装DevKit&lt;/a&gt;&lt;br&gt;2.1 RubyInstaller Development Kit (DevKit)的安装&lt;br&gt;在使用RubyGems安装Ruby on Rails的同时，还有几个一起被安装的类库。这些类库中，有一些是保持C语言编写的代码的形式来发布的，它们需要通过使用“gcc”编译器等结合环境一起来编译，但在Windows上是不能用gcc来编译的。&lt;br&gt;安装了本次所介绍的“RubyInstaller Development Kit (DevKit)”后，编译器就可以很容易地安装使用所需的类库。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Ruby环境配置&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;在windows中配置环境变量&lt;/p&gt;
&lt;p&gt; RUBY_HOME=rubyinstaller_dir （实际的ruby所在路径）&lt;/p&gt;
&lt;p&gt; 在path中添加 %RUBY_HOME%\bin&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在命令行下运行 ruby –version，如果显示ruby版本信息说明安装正常。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;多版本ruby环境配置&lt;/p&gt;
&lt;p&gt;利用uru，这个工具可以帮助我们在windows系统上 管理多个ruby版本&lt;br&gt;下载安装uru&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;安装uru&lt;br&gt;解压uru到某一目录&lt;br&gt;例如C:\tools下&lt;br&gt;运行以下命令安装&lt;/p&gt;
&lt;figure class=&quot;highlight avrasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;C:&lt;/span&gt;\tools&amp;gt; uru_rt admin install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装ruby版本，可以安装任意个ruby版本&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在uru中注册ruby版本&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;C&lt;/span&gt;:\&amp;gt; &lt;span class=&quot;tag&quot;&gt;uru&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;admin&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;c&lt;/span&gt;:\&lt;span class=&quot;tag&quot;&gt;ruby&lt;/span&gt;\&lt;span class=&quot;tag&quot;&gt;jruby-1&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.7&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.18&lt;/span&gt;\&lt;span class=&quot;tag&quot;&gt;bin&lt;/span&gt;\&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;---&lt;/span&gt;&amp;gt; &lt;span class=&quot;tag&quot;&gt;Registered&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;jruby&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;at&lt;/span&gt; `&lt;span class=&quot;tag&quot;&gt;c&lt;/span&gt;:\&lt;span class=&quot;tag&quot;&gt;ruby&lt;/span&gt;\&lt;span class=&quot;tag&quot;&gt;jruby-1&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.7&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.18&lt;/span&gt;\&lt;span class=&quot;tag&quot;&gt;bin&lt;/span&gt;` &lt;span class=&quot;tag&quot;&gt;as&lt;/span&gt; `1718`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;C&lt;/span&gt;:\&amp;gt; &lt;span class=&quot;tag&quot;&gt;uru&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;ls&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    1718        : &lt;span class=&quot;tag&quot;&gt;jruby&lt;/span&gt; 1&lt;span class=&quot;class&quot;&gt;.7&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.18&lt;/span&gt; (1&lt;span class=&quot;class&quot;&gt;.9&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.3p551&lt;/span&gt;) 2014&lt;span class=&quot;tag&quot;&gt;-12-22&lt;/span&gt; 625381&lt;span class=&quot;tag&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;Java&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;HotSpot&lt;/span&gt;(&lt;span class=&quot;tag&quot;&gt;TM&lt;/span&gt;) ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    193         : &lt;span class=&quot;tag&quot;&gt;ruby&lt;/span&gt; 1&lt;span class=&quot;class&quot;&gt;.9&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.3p551&lt;/span&gt; (2014&lt;span class=&quot;tag&quot;&gt;-11-13&lt;/span&gt;) &lt;span class=&quot;attr_selector&quot;&gt;[i386-mingw32]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    215         : &lt;span class=&quot;tag&quot;&gt;ruby&lt;/span&gt; 2&lt;span class=&quot;class&quot;&gt;.1&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.5p273&lt;/span&gt; (2014&lt;span class=&quot;tag&quot;&gt;-11-13&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;revision&lt;/span&gt; 48405) &lt;span class=&quot;attr_selector&quot;&gt;[x64-mingw32]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;详细操作命令查看&lt;br&gt;&lt;a href=&quot;http://www.neverletdown.net/2015/08/managing-multiple-ruby-versions-with-uru.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.neverletdown.net/2015/08/managing-multiple-ruby-versions-with-uru.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;强烈不建议用windows来开发,原因请查看&lt;br&gt;&lt;a href=&quot;https://bitbucket.org/jonforums/uru&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://bitbucket.org/jonforums/uru&lt;/a&gt;
&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;linux（Ubuntu）或者mac os更适合你用来开发。&lt;br&gt;详细请看 &lt;a href=&quot;https://ruby-china.org/topics/1020&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://ruby-china.org/topics/1020&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;linux-ubuntu&quot;&gt;&lt;a href=&quot;#linux-ubuntu&quot; class=&quot;headerlink&quot; title=&quot;linux-ubuntu&quot;&gt;&lt;/a&gt;linux-ubuntu&lt;/h3&gt;&lt;p&gt;Installing Ruby&lt;/p&gt;
&lt;p&gt;第一步安装配置ruby环境所需要的一些基础库&lt;br&gt;&lt;figure class=&quot;highlight q&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-&lt;span class=&quot;built_in&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;update&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-&lt;span class=&quot;built_in&quot;&gt;get&lt;/span&gt; install git-core curl zlib1g-&lt;span class=&quot;built_in&quot;&gt;dev&lt;/span&gt; build-essential libssl-&lt;span class=&quot;built_in&quot;&gt;dev&lt;/span&gt; libreadline-&lt;span class=&quot;built_in&quot;&gt;dev&lt;/span&gt; libyaml-&lt;span class=&quot;built_in&quot;&gt;dev&lt;/span&gt; libsqlite3-&lt;span class=&quot;built_in&quot;&gt;dev&lt;/span&gt; sqlite3 libxml2-&lt;span class=&quot;built_in&quot;&gt;dev&lt;/span&gt; libxslt1-&lt;span class=&quot;built_in&quot;&gt;dev&lt;/span&gt; libcurl4-openssl-&lt;span class=&quot;built_in&quot;&gt;dev&lt;/span&gt; python-software-properties libffi-&lt;span class=&quot;built_in&quot;&gt;dev&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;利用工具来管理的ruby版本，rbenv 就是一个很好的工具&lt;br&gt;&lt;figure class=&quot;highlight vim&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;cd&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git clone http&lt;span class=&quot;variable&quot;&gt;s:&lt;/span&gt;//github.&lt;span class=&quot;keyword&quot;&gt;com&lt;/span&gt;/rbenv/rbenv.git ~/.rbenv&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;export PATH=&quot;$HOME/.rbenv/bin:$PATH&quot;&#39;&lt;/span&gt; &amp;gt;&amp;gt; ~/.bashrc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;eval &quot;$(rbenv init -)&quot;&#39;&lt;/span&gt; &amp;gt;&amp;gt; ~/.bashrc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;exec $SHELL&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git clone http&lt;span class=&quot;variable&quot;&gt;s:&lt;/span&gt;//github.&lt;span class=&quot;keyword&quot;&gt;com&lt;/span&gt;/rbenv/&lt;span class=&quot;keyword&quot;&gt;ruby&lt;/span&gt;-build.git ~/.rbenv/plugins/&lt;span class=&quot;keyword&quot;&gt;ruby&lt;/span&gt;-build&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;export PATH=&quot;$HOME/.rbenv/plugins/ruby-build/bin:$PATH&quot;&#39;&lt;/span&gt; &amp;gt;&amp;gt; ~/.bashrc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;exec $SHELL&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rbenv install &lt;span class=&quot;number&quot;&gt;2.3&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rbenv &lt;span class=&quot;keyword&quot;&gt;global&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2.3&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;ruby&lt;/span&gt; -&lt;span class=&quot;keyword&quot;&gt;v&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;http&lt;span class=&quot;variable&quot;&gt;s:&lt;/span&gt;//gorails.&lt;span class=&quot;keyword&quot;&gt;com&lt;/span&gt;/setup/ubuntu/&lt;span class=&quot;number&quot;&gt;16.10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;mac_os&quot;&gt;&lt;a href=&quot;#mac_os&quot; class=&quot;headerlink&quot; title=&quot;mac os&quot;&gt;&lt;/a&gt;mac os&lt;/h3&gt;&lt;p&gt;利用homebrew 来安装管理mac的应用&lt;br&gt;安装 Homebrew&lt;/p&gt;
&lt;p&gt;首先，我们需要安装homebrew。homebrew 允许我们方便从源码安装和编译软件包&lt;br&gt;当homebrew需要安装xcode 命令行工具，输入yes.打开命令行并且运行以下命令：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ruby &lt;span class=&quot;operator&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&lt;/span&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Installing Ruby&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;brew &lt;span class=&quot;operator&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; rbenv ruby-&lt;span class=&quot;keyword&quot;&gt;build&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Add rbenv to bash so that it loads every time you open a terminal&lt;/p&gt;
&lt;figure class=&quot;highlight fsharp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;echo &#39;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; which rbenv &amp;gt; /dev/&lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;; &lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt; eval &lt;span class=&quot;string&quot;&gt;&quot;$(rbenv init -)&quot;&lt;/span&gt;; fi&#39; &amp;gt;&amp;gt; ~/.bash_profile&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;source ~/.bash_profile&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Install Ruby&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;rbenv install &lt;span class=&quot;number&quot;&gt;2.3&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rbenv global &lt;span class=&quot;number&quot;&gt;2.3&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ruby -v&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;u5B89_u88C5capybara&quot;&gt;&lt;a href=&quot;#u5B89_u88C5capybara&quot; class=&quot;headerlink&quot; title=&quot;安装capybara&quot;&gt;&lt;/a&gt;安装capybara&lt;/h2&gt;&lt;h3 id=&quot;u5B89_u88C5_u7CFB_u7EDF_u4F9D_u8D56_u5E93&quot;&gt;&lt;a href=&quot;#u5B89_u88C5_u7CFB_u7EDF_u4F9D_u8D56_u5E93&quot; class=&quot;headerlink&quot; title=&quot;安装系统依赖库&quot;&gt;&lt;/a&gt;安装系统依赖库&lt;/h3&gt;&lt;p&gt;在某些操作系统中ruby环境可能需要一些第三方库的支持，通常是出于性能方面的原因，ruby是一种解释性语言所以在处理某些任务时，例如解析XML会非常慢，这时把这些任务交给第三方库处理，效率就会成倍增加。&lt;br&gt;对于windows平台，你不用担心第三依赖库的问题，不过你要确保您已经安装了Ruby DevKit;&lt;br&gt;详细说明如何做到这一点，请参阅&lt;a href=&quot;http://rubyinstaller.org/add-ons/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://rubyinstaller.org/add-ons/&lt;/a&gt; devkit&lt;/p&gt;
&lt;p&gt;capybara依赖于nokogirl，一个流行的基于ruby的XML的解析器，该库可能需要以下第三方库的支持：&lt;br&gt;• libxml2&lt;br&gt;• libxml2-dev • libxslt&lt;br&gt;• libxslt-dev&lt;br&gt;对于不同的操作系统安装这些库的方式可能略有不同，对于linux 例如Ubuntu 可以使用apt-get ，对于redhat 请使用yum install 对于mac os x 那么brew 是你最好的选择。&lt;br&gt;完成这些第三方依赖后 我们就可以安装capybara了&lt;/p&gt;
&lt;p&gt;添加以下的代码到你的Gemfile里，并且运行bundle install。&lt;br&gt;&lt;figure class=&quot;highlight nginx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;capybara&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;u4EC0_u4E48_u662FBundle&quot;&gt;&lt;a href=&quot;#u4EC0_u4E48_u662FBundle&quot; class=&quot;headerlink&quot; title=&quot;什么是Bundle&quot;&gt;&lt;/a&gt;什么是Bundle&lt;/h3&gt;&lt;p&gt;相当于多个RubyGems批处理运行。在配置文件gemfilel里说明你的应用依赖哪些第三方包，他自动帮你下载安装多个包，并且会下载这些包依赖的包.&lt;br&gt;&lt;a href=&quot;http://bundler.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://bundler.io/&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;ruby_u73AF_u5883_u914D_u7F6E&quot;&gt;&lt;a href=&quot;#ruby_u73AF_u5883_u914D_u7F6E&quot; class=&quot;headerlink&quot; title=&quot;ruby环境配置&quot;&gt;&lt;/a&gt;ruby环境配置&lt;/h2&gt;&lt;p&gt;capyca
    
    </summary>
    
    
      <category term="capybara" scheme="http://yoursite.com/tags/capybara/"/>
    
  </entry>
  
  <entry>
    <title>capybara1-capybara简介</title>
    <link href="http://yoursite.com/2016/08/26/capybara1/"/>
    <id>http://yoursite.com/2016/08/26/capybara1/</id>
    <published>2016-08-26T06:17:36.000Z</published>
    <updated>2016-08-29T03:46:49.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;capybara_u7B80_u4ECB&quot;&gt;&lt;a href=&quot;#capybara_u7B80_u4ECB&quot; class=&quot;headerlink&quot; title=&quot;capybara简介&quot;&gt;&lt;/a&gt;capybara简介&lt;/h2&gt;&lt;p&gt;capybara是一个ruby的gem,它是一个用来测试web应用的工具包，使用它可以模拟用户对web应用的操作。它可以通过CSS或xpath选择器选中页面上的元素，然后对这些元素应用一些操作，从而实现模拟用户行为。&lt;/p&gt;
&lt;h3 id=&quot;u5E95_u5C42driver_u7684_u5B9E_u73B0&quot;&gt;&lt;a href=&quot;#u5E95_u5C42driver_u7684_u5B9E_u73B0&quot; class=&quot;headerlink&quot; title=&quot;底层driver的实现&quot;&gt;&lt;/a&gt;底层driver的实现&lt;/h3&gt;&lt;p&gt;基于底层driver的基础上，提供一套统一的 界面交互api，如visit, right_click，hover等。它内置 Rack::Test 和 Selenium 支持，也支持其他驱动。WebKit 通过外部 gem 的形式支持。&lt;/p&gt;
&lt;p&gt;底层的driver有很多，可以是完全打开浏览器方式的driver(如：RackTest，selenium-webdriver)，也可以是基于headless webkit 的 driver(如：capybara-webkit, poltergeist).&lt;/p&gt;
&lt;h3 id=&quot;capybara__u4F18_u70B9&quot;&gt;&lt;a href=&quot;#capybara__u4F18_u70B9&quot; class=&quot;headerlink&quot; title=&quot;capybara 优点&quot;&gt;&lt;/a&gt;capybara 优点&lt;/h3&gt;&lt;p&gt;  ● 无需配置 对于 Rails 和 Rack 应用而言，开箱即用。&lt;br&gt;  ● 符合直觉的 API 模拟真实用户行为。&lt;br&gt;  ● 可替换后端 可以替换测试后端，例如从快速的 headless 模式切换到实际的浏览器，无需更改测试。&lt;br&gt;  ● 强力同步 你不用手动等待异步过程结束。&lt;/p&gt;
&lt;p&gt;因为capyybara提供了以下好处：&lt;br&gt;  ● 这是一个更高层次的API，这意味着当你使用不同driver时，例如（headless或者browser）可以使用同样的API处理动态页面或静态HTML.&lt;br&gt;  ● 它是专门为U自动化测试web应用而设计的程序,&lt;br&gt;  ● 因此它拥有十分有用的断言的方法判断页面是否正确。&lt;br&gt;  ● 当我们测试真实的浏览器时，他会自动帮助我们处理许多棘手的异步问题&lt;br&gt;  ● 它被设计用于测试机架的应用，因此它会开机并为您管理后台服务器&lt;br&gt;  ● 它为设计为rack应用的测试框架,所以它将引导和管理后台服务。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;capybara_u7B80_u4ECB&quot;&gt;&lt;a href=&quot;#capybara_u7B80_u4ECB&quot; class=&quot;headerlink&quot; title=&quot;capybara简介&quot;&gt;&lt;/a&gt;capybara简介&lt;/h2&gt;&lt;p&gt;capybara是一个ruby的ge
    
    </summary>
    
    
      <category term="ui_automation, capybara1" scheme="http://yoursite.com/tags/ui-automation-capybara1/"/>
    
  </entry>
  
  <entry>
    <title>gatling官方文档翻译5</title>
    <link href="http://yoursite.com/2016/06/29/gatling5/"/>
    <id>http://yoursite.com/2016/06/29/gatling5/</id>
    <published>2016-06-29T09:45:25.000Z</published>
    <updated>2016-06-29T12:57:39.000Z</updated>
    
    <content type="html">&lt;p&gt;第五篇&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://gatling.io/docs/2.2.2/migration_guides/2.0-to-2.1.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://gatling.io/docs/2.2.2/migration_guides/2.0-to-2.1.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Migrating from 2.0 to 2.1&lt;br&gt;Global changes&lt;br&gt;Scala 2.11&lt;br&gt;Gatling is now built with Scala 2.11. If you’re using Scala IDE, make sure you’re using a version compatible with Scala 2.11.&lt;/p&gt;
&lt;p&gt;Compiler runs standalone&lt;br&gt;Gatling itself doesn’t compile the Simulations anymore and expects that the simulations are already compiled. This means that gatling.sh/gatling.bat and the Maven plugin runs the compiler prior to running Gatling. Consequently, a few options in gatling.conf have been removed:&lt;/p&gt;
&lt;p&gt;gatling.core.disableCompiler&lt;br&gt;gatling.core.zinc.jvmArgs&lt;br&gt;Please note that, as this change implied that the Maven Plugin was heavily modified so that it compiles the simulations separately prior to running Gatling, you’ll need to upgrade the Maven Plugin to its version 2.1.0 too.&lt;/p&gt;
&lt;p&gt;Percentiles&lt;br&gt;Gatling now publishes 4 percentiles instead of 2. These percentiles are published in the reports and in the Graphite integration module. Beware that keys in gatling.conf file have been translated:&lt;/p&gt;
&lt;p&gt;Gatling 2.0:&lt;br&gt;percentile1 = 95&lt;br&gt;percentile2 = 99&lt;br&gt;Gatling 2.1+:&lt;br&gt;percentile1 = 50&lt;br&gt;percentile2 = 75&lt;br&gt;percentile3 = 95&lt;br&gt;percentile4 = 99&lt;br&gt;Core&lt;br&gt;Mute mode&lt;br&gt;The “mute mode” option, which was previously restricted to the SBT Plugin, is now also usable by the bundle scripts and the Maven Archetype.&lt;/p&gt;
&lt;p&gt;Assertions&lt;br&gt;Validating assertions in combination with the reports-only / ro option does not require to pass the simulation (using -s) for which the assertions will be validated anymore.&lt;/p&gt;
&lt;p&gt;Throttling&lt;br&gt;Throttling now automatically adds a maxDuration of either the simulation throttling duration, or the minimum of the scenarios throttling durations.&lt;/p&gt;
&lt;p&gt;HTTP&lt;br&gt;Parameters&lt;br&gt;Form parameters are no longer specific to POST method, you can use them with all methods.&lt;/p&gt;
&lt;p&gt;Request Bodies Directory&lt;br&gt;The directory name was changed from request-bodies to bodies as it now can host both request bodies and response bodies. The latter one are now captured by the recorder, and can be used as template for checking the response body.&lt;/p&gt;
&lt;p&gt;CLI option was renamed from rbf to bdf.&lt;/p&gt;
&lt;p&gt;Checks&lt;br&gt;Deprecated dontValidate was dropped in 2.1 as previously announced. Please use optional instead.&lt;/p&gt;
&lt;p&gt;Protocol&lt;br&gt;Deprecated baseHeaders was dropped in 2.1 as previously announced. Please use headers instead.&lt;/p&gt;
&lt;p&gt;Maven Archetype&lt;br&gt;Due to some necessary changes to allow Gatling to use Scala 2.11, you’ll have to update IDEPathHelper.scala, Engine.scala and Recorder.scala if you’re using the Maven archetype.&lt;/p&gt;
&lt;p&gt;Either generate a new project with the 2.1.1 archetype (there was a bug in 2.1), or override your classes with the ones here. If you choose the latter, don’t forget to fix the simulationPackage in Recorder.scala.&lt;/p&gt;
&lt;p&gt;SBT Plugin&lt;br&gt;The SBT Plugin’s test framework has been moved to the core project in 2.1. As a consequence, the test framework name has be modified to follow the naming conventions of all core modules and share its versionning.&lt;/p&gt;
&lt;p&gt;The SBT Plugin will also share the same versionning schema as all other Gatling modules, and has been renamed to ‘gatling-sbt’.&lt;/p&gt;
&lt;p&gt;The new coordinates are therefore :&lt;/p&gt;
&lt;p&gt;“io.gatling” % “gatling-sbt” % “2.1.0” for the SBT Plugin&lt;br&gt;“io.gatling” % “gatling-test-framework” % “2.1.0” for the testing framework.&lt;/p&gt;
&lt;p&gt;从2.0 合并到2.1&lt;br&gt;全局变化&lt;br&gt;Scala 2.11&lt;br&gt;gatling 现在用2.11 构建，如果你使用Scala IDE, 确认你是使用的版本能够兼容scala2.11.&lt;/p&gt;
&lt;p&gt;Compiler runs standalone&lt;br&gt;编译器独立的运行&lt;/p&gt;
&lt;p&gt;gatling本身不再编译模拟器和预测模拟已经编译。&lt;/p&gt;
&lt;p&gt;这就意味着 gatling.sh/gatling.bat 和maven插件编译在运行gatling之前。因此,一些选项在gatling.conf 已经被移除&lt;/p&gt;
&lt;p&gt;请注意，这种变化意味着Maven插件大量修改，单独编译仿真运行gatling之前，你需要升级版本2.1.0的Maven插件。&lt;/p&gt;
&lt;p&gt;Percentiles&lt;br&gt;gatling 发布4位百分数来代替2位。&lt;br&gt;这些百分位数发布在生成的报告和图表的集成模块&lt;br&gt;注意键在gatling.conf 文件已经被翻译。&lt;/p&gt;
&lt;p&gt;Gatling 2.0:&lt;br&gt;percentile1 = 95&lt;br&gt;percentile2 = 99&lt;br&gt;Gatling 2.1+:&lt;br&gt;percentile1 = 50&lt;br&gt;percentile2 = 75&lt;br&gt;percentile3 = 95&lt;br&gt;percentile4 = 99&lt;br&gt;Core&lt;/p&gt;
&lt;p&gt;Mute mode&lt;/p&gt;
&lt;p&gt;“静音模式”选项,该选项以前局限于SBT插件,现在也可用bundle的脚本和Maven Archetype。&lt;br&gt;Assertions&lt;/p&gt;
&lt;p&gt;验证断言结合the reports-only / ro option不需要通过仿真(using- s)的断言将被验证了。&lt;/p&gt;
&lt;p&gt;Throttling&lt;br&gt;节流现在自动添加一个maxDuration仿真节流的持续时间、节流时间或最低的场景。&lt;br&gt;HTTP&lt;br&gt;Parameters&lt;br&gt;形式参数不再是特定于POST方法,您可以使用它们在全部的方法。&lt;br&gt;Request Bodies Directory&lt;br&gt;目录更名从请求体的body,因为它现在可以主机请求body和响应。后者现在被记录,并可以用作模板检查响应的body。&lt;/p&gt;
&lt;p&gt;CLI option被重新命名从 rbf 到 bdf.&lt;/p&gt;
&lt;p&gt;Checks&lt;br&gt;此前宣布弃用dontValidate下降2.1。请使用optional。&lt;/p&gt;
&lt;p&gt;Protocol&lt;br&gt;此前宣布弃用baseHeaders下降2.1。请使用headers。&lt;/p&gt;
&lt;p&gt;Maven Archetype&lt;/p&gt;
&lt;p&gt;由于一些必要的改变,允许gatling使用Scala 2.11中,你将不得不更新IDEPathHelper.scala, Engine.scala and Recorder.scala。如果你使用Maven archetype 。&lt;/p&gt;
&lt;p&gt;SBT Plugin&lt;br&gt;SBT插件的测试框架已经被转移到2.1的核心项目。因此,测试框架的名称已被修改遵循所有核心模块的命名约定和分享它的版本。&lt;/p&gt;
&lt;p&gt;SBT插件还将共享相同的版本模式和其他gatling模块,并重新命名为“gatling-sbt”。&lt;br&gt;因此,新坐标:&lt;br&gt;“io.gatling” % “gatling-sbt” % “2.1.0” 关于 the SBT 插件&lt;br&gt;“io.gatling” % “gatling-test-framework” % “2.1.0” 关于测试框架.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;第五篇&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://gatling.io/docs/2.2.2/migration_guides/2.0-to-2.1.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://gatling.io/docs/
    
    </summary>
    
    
      <category term="gatling" scheme="http://yoursite.com/tags/gatling/"/>
    
  </entry>
  
  <entry>
    <title>gatling官方文档翻译4</title>
    <link href="http://yoursite.com/2016/06/15/gatling3-1/"/>
    <id>http://yoursite.com/2016/06/15/gatling3-1/</id>
    <published>2016-06-15T09:54:52.000Z</published>
    <updated>2016-06-16T02:15:39.000Z</updated>
    
    <content type="html">&lt;p&gt;第四篇&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://gatling.io/docs/2.2.1/migration_guides/2.0.0-M3a-to-2.0.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://gatling.io/docs/2.2.1/migration_guides/2.0.0-M3a-to-2.0.html&lt;/a&gt;&lt;br&gt;Migrating from 2.0.0-M3a to 2.0&lt;br&gt;Global changes&lt;br&gt;Gatling requires at least JDK7u6&lt;br&gt;As targeting newer JDKs provides bug fixes, speed improvements and opens opportunities for optimization, Gatling now requires at least a JDK7u6 (released almost two years ago already).&lt;/p&gt;
&lt;p&gt;Gatling is now available on Maven Central&lt;br&gt;Gatling releases are now available on Maven Central, and snapshots are deployed on each successful build by Travis CI to Sonatype’s snapshots repository. If you were using Gatling with its Maven plugin, you no longer need to add the Excilys repository in your pom.xml.&lt;/p&gt;
&lt;p&gt;Simulation&lt;br&gt;Necessary imports&lt;br&gt;import bootstrap.&lt;em&gt; and import assertions.&lt;/em&gt; are now unnecessary and have to be removed.&lt;br&gt;import io.gatling.http.Headers.Names.&lt;em&gt; is now unnecessary, headers names are now directly available from HeaderNames.&lt;br&gt;import io.gatling.http.Headers.Values.&lt;/em&gt; is now unnecessary, headers values are now directly available from HeaderValues.&lt;br&gt;Injection DSL&lt;br&gt;ramp(10 users) becomes rampUsers(10)&lt;br&gt;heaviside(10 users) becomes heavideUsers(10)&lt;br&gt;atOnce(10 users) becomes atOnceUsers(10)&lt;br&gt;constantRate(10 usersPerSec) becomes constantUsersPerSec(10)&lt;br&gt;rampRate(10 usersPerSec) becomes rampUsersPerSec(10)&lt;br&gt;split(10 users) becomes splitUsers(10)&lt;br&gt;Core&lt;br&gt;Structure Elements&lt;br&gt;In asLongAs, exitASAP now defaults to true. For more information on the change of behaviour it introduces, see asLongAs documentation.&lt;/p&gt;
&lt;p&gt;Checks&lt;br&gt;whatever has been renamed to optional.&lt;br&gt;transform now no longer takes and returns an Option[T] and takes and returns plain types, but transformOption provides the same functionality as transform did.&lt;br&gt;HTTP&lt;br&gt;Form parameters (for POST requests)&lt;br&gt;Renamed&lt;/p&gt;
&lt;p&gt;Methods for adding form parameters to the request have been renamed:&lt;/p&gt;
&lt;p&gt;param =&amp;gt; formParam&lt;br&gt;multiValuedParam =&amp;gt; multiValuedFormParam&lt;br&gt;Misc&lt;br&gt;requestInfoExtractor and responseInfoExtractor have been merged into a single extraInfoExtractor, which takes a ExtraInfo =&amp;gt; List[Any] function.&lt;br&gt;gatling.http.ahc.useRawUrl configuration parameter was removed, please use disableUrlEncoding instead, as described here.&lt;br&gt;For more information on extraInfoExtractor, please refer to its documentation.&lt;/p&gt;
&lt;p&gt;Logs&lt;br&gt;simulation.log has been redesigned.&lt;/p&gt;
&lt;p&gt;If you wrote your own specific simulation.log parser, you’ll need to migrate it to the new structure.&lt;/p&gt;
&lt;p&gt;Recorder&lt;br&gt;Until now, when setting up the Recorder, you had to setup two ports for the Recorder’s local proxy: one for HTTP, one for HTTPS. This is not needed anymore, as the Recorder handles itself the switch to an HTTPS connection if necessary, and only a single port needs to be specified.&lt;/p&gt;
&lt;p&gt;Maven Plugin&lt;br&gt;The &lt;includes&gt;…&lt;/includes&gt; and &lt;excludes&gt;…&lt;/excludes&gt; configuration options have been removed. Should you want to select a specific simulation to run, you can use the &lt;simulationclass&gt;…&lt;/simulationclass&gt; config option to do so.&lt;/p&gt;
&lt;p&gt;For more information, see the Maven plugin documentation.&lt;/p&gt;
&lt;p&gt;Migrating from 2.0.0-M3a to 2.0&lt;br&gt;从2.0.0-M3a 合并到2.0&lt;/p&gt;
&lt;p&gt;全局改变&lt;br&gt;Gatling  需要至少JDK7u6版本&lt;/p&gt;
&lt;p&gt;因为心得JDKs修复一些问题，速度得到改善，优化了处理，gatling 现在需要至少JDK7u6(2年前已经发布)&lt;/p&gt;
&lt;p&gt;gatling 现在同样在maven cetral 适用&lt;/p&gt;
&lt;p&gt;gatling 现在同样在maven cetral 适用，并且快照都会部署到 Sonatype’s snapshots repository 当每次 Travis ci 构建成功后。如果你使用maven插件版gatling，你不需要添加the Excilys repository 在你的pom.xml中。&lt;/p&gt;
&lt;p&gt;模拟器&lt;br&gt;Necessary imports&lt;br&gt;import bootstrap.&lt;em&gt; and import assertions.&lt;/em&gt; 现在已经不需要并且被移除&lt;br&gt;import io.gatling.http.Headers.Names.&lt;em&gt; 已经不需要， headers names被 HeaderNames代替.&lt;br&gt;import io.gatling.http.Headers.Values.&lt;/em&gt; 已经不需要, headers values 被 HeaderValues代替.&lt;/p&gt;
&lt;p&gt;Injection DSL&lt;br&gt;ramp(10 users) 变为 rampUsers(10)&lt;br&gt;heaviside(10 users) 变为 heavideUsers(10)&lt;br&gt;atOnce(10 users)变为 atOnceUsers(10)&lt;br&gt;constantRate(10 usersPerSec) 变为 constantUsersPerSec(10)&lt;br&gt;rampRate(10 usersPerSec)变为 rampUsersPerSec(10)&lt;br&gt;split(10 users) 变为 splitUsers(10)&lt;br&gt;Core&lt;/p&gt;
&lt;p&gt;Structure Elements&lt;br&gt;结构化组件&lt;/p&gt;
&lt;p&gt;在 asLongAs, exitASAP 默认为trule。&lt;br&gt;有关的行为改变的更多信息介绍,请看asLongAs文档。&lt;/p&gt;
&lt;p&gt;Checks&lt;/p&gt;
&lt;p&gt;whatever 已经被重新命名为 optional.&lt;br&gt;transform now no longer takes and returns an Option[T] and takes and returns plain types, but transformOption provides the same functionality as transform did.&lt;br&gt;transform现在不再需要现在返回一个Option[T],并返回plain类型,但transformOption和transform提供了相同的功能。&lt;br&gt;HTTP&lt;br&gt;Form parameters (关于 POST 请求)&lt;br&gt;重命名&lt;/p&gt;
&lt;p&gt; adding form parameters 方法请求已经被重命名:&lt;/p&gt;
&lt;p&gt;param =&amp;gt; formParam&lt;br&gt;multiValuedParam =&amp;gt; multiValuedFormParam&lt;/p&gt;
&lt;p&gt;Misc&lt;br&gt;requestInfoExtractor 和 responseInfoExtractor 已经合并为 extraInfoExtractor, which takes a ExtraInfo =&amp;gt; List[Any] function.&lt;br&gt;gatling.http.ahc.useRawUrl 配置参数已经被移除, 请用 disableUrlEncoding 代替, 描述如下.&lt;br&gt;更多关于 extraInfoExtractor信息, 请参照这个文档.&lt;/p&gt;
&lt;p&gt;Logs&lt;/p&gt;
&lt;p&gt;simulation.log 已经被重新设计.&lt;/p&gt;
&lt;p&gt;如果你写自己的simulation.log解析器,您需要它迁移到新结构&lt;/p&gt;
&lt;p&gt;Recorder&lt;/p&gt;
&lt;p&gt;Until now, 当你设置 Recorder时, 你必须设置两个端口记录器的当地代理:一个用于HTTP,HTTPS。 这再也不需要了, 因为record处理本身转向一个HTTPS连接如果必要,并且只需要指定一个单独的端口。&lt;/p&gt;
&lt;p&gt;Maven Plugin&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;&amp;lt;includes&amp;gt;...&amp;lt;/includes&amp;gt;&lt;/code&gt; 和 &lt;code&gt;&amp;lt;excludes&amp;gt;...&amp;lt;/excludes&amp;gt;&lt;/code&gt; 配置项 已经被移除. 如果你需要选择一个特殊的模拟运行, 你可以使用 &lt;code&gt;&amp;lt;simulationClass&amp;gt;...&amp;lt;/simulationClass&amp;gt;&lt;/code&gt; 去配置.&lt;/p&gt;
&lt;p&gt;更多的信息, 查阅 Maven plugin 文档.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;第四篇&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://gatling.io/docs/2.2.1/migration_guides/2.0.0-M3a-to-2.0.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://gatling.io
    
    </summary>
    
    
      <category term="gatling" scheme="http://yoursite.com/tags/gatling/"/>
    
  </entry>
  
  <entry>
    <title>gatling官方文档翻译3</title>
    <link href="http://yoursite.com/2016/06/08/gatling3/"/>
    <id>http://yoursite.com/2016/06/08/gatling3/</id>
    <published>2016-06-08T15:22:40.000Z</published>
    <updated>2016-06-14T02:53:29.000Z</updated>
    
    <content type="html">&lt;p&gt;第三篇&lt;br&gt;&lt;a href=&quot;http://gatling.io/docs/2.2.1/migration_guides/1.5.x-to-2.0.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://gatling.io/docs/2.2.1/migration_guides/1.5.x-to-2.0.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Migrating from 1.5.x to 2.0&lt;br&gt;Global changes&lt;br&gt;Gatling requires at least JDK7u6&lt;br&gt;As targeting newer JDKs provides bug fixes, speed improvements and opens opportunities for optimization, Gatling now requires at least a JDK7u6 (released almost two years ago already).&lt;/p&gt;
&lt;p&gt;Scala 2.10&lt;br&gt;Gatling is built with Scala 2.10. If you’re using Scala IDE, make sure you’re using a version compatible with Scala 2.10.&lt;/p&gt;
&lt;p&gt;Gatling is now available on Maven Central&lt;br&gt;Gatling releases are now available on Maven Central, and snapshots are deployed on each successful build by Travis CI to Sonatype’s snapshots repository. If you were using Gatling with its Maven plugin, you no longer need to add the Excilys repository in your pom.xml.&lt;/p&gt;
&lt;p&gt;Package and GroupId changes&lt;br&gt;Gatling’s artifacts groupId and package are now io.gatling. You’ll have to :&lt;/p&gt;
&lt;p&gt;Update your build scripts to change the groupId of Gatling’s dependencies from com.excilys.ebi.gatling to io.gatling&lt;br&gt;Update your simulations to replace the com.excilys.ebi.gatling part in the imports by io.gatling&lt;br&gt;Simulation&lt;br&gt;Necessary imports&lt;br&gt;akka.util.duration classes have been ported to the scala.concurrent.duration package. Simply replace import akka.util.duration.&lt;em&gt; by import scala.concurrent.duration.&lt;/em&gt;.&lt;br&gt;import bootstrap.&lt;em&gt; and import assertions.&lt;/em&gt; are now unnecessary and have to be removed.&lt;br&gt;import com.excilys.ebi.gatling.http.Headers.Names.&lt;em&gt; is now unnecessary, headers names are now directly available from HeaderNames.&lt;br&gt;import com.excilys.ebi.gatling.http.Headers.Values.&lt;/em&gt; is now unnecessary, headers values are now directly available from HeaderValues.&lt;br&gt;Protocols setup&lt;br&gt;Protocols are no longer configured by scenario and are now configured by simulation, using the protocols method.&lt;/p&gt;
&lt;p&gt;A 1.4.x-1.5.x setUp like this one:&lt;/p&gt;
&lt;p&gt;setUp(scn.(…).protocolConfig(httpConfig))&lt;br&gt;would now be with Gatling 2.0:&lt;/p&gt;
&lt;p&gt;setUp(scn.(…)).protocols(httpConfig)&lt;br&gt;Assertions setup&lt;br&gt;The assertThat method has been removed, assertions are now configured using assertions in the same fashion as protocols are, e.g.&lt;/p&gt;
&lt;p&gt;setup(scn.(…).protocolConfig(httpConfig))&lt;/p&gt;
&lt;p&gt;assertThat(global.responseTime.max.lessThan(1000))&lt;br&gt;becomes:&lt;/p&gt;
&lt;p&gt;setup(scn.(…))&lt;br&gt;  .protocols(httpConfig)&lt;br&gt;  .assertions(global.responseTime.max.lessThan(1000)&lt;br&gt;New Injection DSL&lt;br&gt;The users, ramp and delay methods to configure the injection profile for your scenario have been removed in favor of a full-blown dedicated DSL.&lt;/p&gt;
&lt;p&gt;Injection steps are now configured using the inject method available on your configured scenario.&lt;/p&gt;
&lt;p&gt;Migrating users&lt;/p&gt;
&lt;p&gt;// With Gatling 1.5.X&lt;br&gt;setUp(scn.users(10)…)&lt;/p&gt;
&lt;p&gt;// With Gatling 2.0&lt;br&gt;setUp(scn.inject(atOnceUsers(10))…&lt;br&gt;Migrating ramp&lt;/p&gt;
&lt;p&gt;// With Gatling 1.5.X&lt;br&gt;setUp(scn.users(10).ramp(30)…)&lt;/p&gt;
&lt;p&gt;// With Gatling 2.0&lt;br&gt;setUp(scn.inject(rampUsers(10) over (30 seconds))…&lt;br&gt;Migrating delay&lt;/p&gt;
&lt;p&gt;// With Gatling 1.5.X&lt;br&gt;setUp(scn.users(10).delay(5)…)&lt;/p&gt;
&lt;p&gt;// With Gatling 2.0&lt;br&gt;setUp(scn.inject(nothingFor(5 seconds), atOnceUsers(10))…&lt;br&gt;For more information on the new Injection DSL, please consult the Injection DSL reference documentation.&lt;/p&gt;
&lt;p&gt;Core&lt;br&gt;Checks&lt;br&gt;whatever has been renamed to optional.&lt;/p&gt;
&lt;p&gt;Structure Elements&lt;br&gt;The first parameter of foreach is now an Expression (e.g. a Gatling EL string), not the name of the attribute to loop over.&lt;br&gt;For example, if you have a list attribute in the user’s session holding a list of values:&lt;/p&gt;
&lt;p&gt;.foreach(“list”, “elem”) {&lt;br&gt;  …&lt;br&gt;}&lt;br&gt;becomes:&lt;/p&gt;
&lt;p&gt;.foreach(“${list}”, “elem”) {&lt;br&gt;  …&lt;br&gt;}&lt;br&gt;In asLongAs, exitASAP now defaults to true. For more information on the change of behaviour it introduces, see asLongAs documentation.&lt;br&gt;Session&lt;br&gt;Session has been under major refactoring:&lt;/p&gt;
&lt;p&gt;session.get(“foobar”) becomes session(“foobar”)&lt;br&gt;session.getTypedAttribute&lt;a href=&quot;/&amp;quot;foobar&amp;quot;&quot;&gt;T&lt;/a&gt; becomes session(“foobar”).as[T]&lt;br&gt;session.getAttributeAsOption&lt;a href=&quot;/&amp;quot;foobar&amp;quot;&quot;&gt;T&lt;/a&gt; becomes session(“foobar”).asOption[T]&lt;br&gt;session.setAttribute(“foobar”, 1234) becomes session.set(“foobar”, 1234)&lt;br&gt;session.setAttributes(Map(“foo” -&amp;gt; 1, “bar” -&amp;gt; 2) becomes session.setAll(“foo” -&amp;gt; 1, “bar” -&amp;gt; 2)&lt;br&gt;session.removeAttribute(“foobar”) becomes session.remove(“foobar”)&lt;br&gt;session.isAttributeDefined(“foobar”) becomes session.contains(“foobar”)&lt;br&gt;HTTP&lt;br&gt;Protocol&lt;br&gt;HTTP protocol bootstrapper, httpProtocol, has been renamed to http.&lt;/p&gt;
&lt;p&gt;Query parameters&lt;br&gt;Removed&lt;/p&gt;
&lt;p&gt;Versions of queryParam and multivaluedQueryParam that took no other parameters than the key (resolving the value from the session, using the key’s name to find the attribute with the same name) have been removed.&lt;/p&gt;
&lt;p&gt;Modified&lt;/p&gt;
&lt;p&gt;multivaluedQueryParam can now resolve the values directly from the session, using Gatling’s EL.&lt;/p&gt;
&lt;p&gt;Form parameters (for POST requests)&lt;br&gt;Renamed&lt;/p&gt;
&lt;p&gt;Methods for adding form parameters to the request have been renamed:&lt;/p&gt;
&lt;p&gt;param =&amp;gt; formParam&lt;br&gt;multiValuedParam =&amp;gt; multivaluedFormParam&lt;br&gt;Removed&lt;/p&gt;
&lt;p&gt;Versions of queryParam and multivaluedQueryParam that took no other parameters than the key (resolving the value from the session, using the key’s name to find the attribute with the same name) have been removed.&lt;/p&gt;
&lt;p&gt;Modified&lt;/p&gt;
&lt;p&gt;multivaluedFormParam can now resolve the values directly from the session, using Gatling’s EL.&lt;/p&gt;
&lt;p&gt;Request bodies&lt;br&gt;Scalate templates support has been dropped. ElFileBody (see below) is the best suited to replace your existing Scalate templates.&lt;br&gt;The API for setting request bodies on request has changed. Instead of having several methods like body, fileBody and byteArrayBody, there is a now a single method, body(…) in which you set the type of body to send.&lt;br&gt;Migrating .body(body)&lt;/p&gt;
&lt;p&gt;.body(body) has been replaced by .body(StringBody(body)).&lt;/p&gt;
&lt;p&gt;http(“my post request”)&lt;br&gt;  .post(“&lt;a href=&quot;http://www.example.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.example.org&lt;/a&gt;“)&lt;br&gt;  .body(“Look Ma, I’m a request body !”)&lt;br&gt;becomes:&lt;/p&gt;
&lt;p&gt;http(“my post request”)&lt;br&gt;  .post(“&lt;a href=&quot;http://www.example.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.example.org&lt;/a&gt;“)&lt;br&gt;  .body(StringBody(“Look Ma, I’m a request body !”))&lt;br&gt;Migrating .fileBody(filePath)&lt;/p&gt;
&lt;p&gt;.fileBody(filePath) has been replaced by .body(RawFileBody(filePath)).&lt;/p&gt;
&lt;p&gt;http(“my post request”)&lt;br&gt;  .post(“&lt;a href=&quot;http://www.example.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.example.org&lt;/a&gt;“)&lt;br&gt;  .fileBody(“my_upload.xslx”)&lt;br&gt;becomes:&lt;/p&gt;
&lt;p&gt;http(“my post request”)&lt;br&gt;  .post(“&lt;a href=&quot;http://www.example.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.example.org&lt;/a&gt;“)&lt;br&gt;  .body(FileBody(“my_upload.xslx”))&lt;br&gt;Migrating .fileBody(filePath, values)&lt;/p&gt;
&lt;p&gt;.fileBody(filePath, values) has been replaced by .body(ElFileBody(filePath)). values are now directly resolved from the virtual user’s session’s content.&lt;/p&gt;
&lt;p&gt;http(“my post request”)&lt;br&gt;  .post(“&lt;a href=&quot;http://www.example.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.example.org&lt;/a&gt;“)&lt;br&gt;  .fileBody(“my_template.txt”, Map(“userName” -&amp;gt; “user123”)&lt;br&gt;becomes:&lt;/p&gt;
&lt;p&gt;http(“my post request”)&lt;br&gt;  .post(“&lt;a href=&quot;http://www.example.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.example.org&lt;/a&gt;“)&lt;br&gt;  .body(ElFileBody(“my template.txt”))&lt;br&gt;If my template.txt contains:&lt;/p&gt;
&lt;p&gt;Hi, my name is ${userName}&lt;br&gt;and the virtual user’s session has an attribute userName set to user123,&lt;/p&gt;
&lt;p&gt;Then the effectively sent request body would be:&lt;/p&gt;
&lt;p&gt;Hi, my name is user123&lt;br&gt;Migrating .byteArrayBody(byteArray)&lt;/p&gt;
&lt;p&gt;.byteArrayBody(byteArray) has been replaced by .body(ByteArrayBody(bytes)).&lt;/p&gt;
&lt;p&gt;http(“my post request”)&lt;br&gt;  .post(“&lt;a href=&quot;http://www.example.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.example.org&lt;/a&gt;“)&lt;br&gt;  .byteArrayBody(Array(1, 2, 3, 4))&lt;br&gt;becomes:&lt;/p&gt;
&lt;p&gt;http(“my post request”)&lt;br&gt;  .post(“&lt;a href=&quot;http://www.example.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.example.org&lt;/a&gt;“)&lt;br&gt;  .body(ByteArrayBody(Array(1, 2, 3, 4)))&lt;br&gt;For more information, see the Request bodies reference section.&lt;/p&gt;
&lt;p&gt;Misc&lt;br&gt;ExtendedResponse has been renamed into Response.&lt;br&gt;requestInfoExtractor and responseInfoExtractor have been merged into a single extraInfoExtractor, which takes a ExtraInfo =&amp;gt; List[Any] function.&lt;br&gt;For more information on extraInfoExtractor, please refer to its documentation.&lt;/p&gt;
&lt;p&gt;Logs&lt;br&gt;simulation.log has been redesigned.&lt;/p&gt;
&lt;p&gt;If you wrote your own specific simulation.log parser, you’ll need to migrate it to the new structure.&lt;/p&gt;
&lt;p&gt;Recorder&lt;br&gt;Until now, when setting up the Recorder, you had to setup two ports for the Recorder’s local proxy: one for HTTP, one for HTTPS. This is not needed anymore, as the Recorder handles itself the switch to an HTTPS connection if necessary, and only a single port needs to be specified.&lt;/p&gt;
&lt;p&gt;Maven Plugin&lt;br&gt;The &lt;includes&gt;…&lt;/includes&gt; and &lt;excludes&gt;…&lt;/excludes&gt; configuration options have been removed. Should you want to select a specific simulation to run, you can use the &lt;simulationclass&gt;…&lt;/simulationclass&gt; config option to do so.&lt;/p&gt;
&lt;p&gt;For more information, see the Maven plugin documentation.&lt;/p&gt;
&lt;p&gt;从1.5迁移到2.0&lt;/p&gt;
&lt;p&gt;全局变化&lt;br&gt;gatling至少需要JDK7u6&lt;/p&gt;
&lt;p&gt;提供新jdk针对的是bug修复、优化速度和打开优化速度,gatling现在至少需要JDK7u6(大约两年前已经发布)。&lt;br&gt;Scala 2.10&lt;/p&gt;
&lt;p&gt;gatling使用Scala 2.10。如果你使用Scala的IDE,确保您正在使用一个版本能与Scala 2.10兼容。&lt;br&gt;gatling现在可用在Maven中央库&lt;/p&gt;
&lt;p&gt;galtling版本现在可以使用Maven中央,以及快照部署在每个成功构建了 Travis CI Sonatype快照存储库。如果你是使用gatling的Maven插件,您不再需要添加pom.xml Excilys存储库。&lt;/p&gt;
&lt;p&gt;package和GroupId变化&lt;/p&gt;
&lt;p&gt;gatling的groupId和package现在io.gatling组件。&lt;br&gt;你必须:&lt;br&gt;更新您的构建脚本改变从com.excilys.ebi groupId gatling的依赖关系。gatling,io.gatling更新你的模拟来代替com.excilys.ebi。io.gatling&lt;br&gt;更新你的模拟器来代替com.excilys.ebi.io.gatling部分通过引入io.gatling&lt;/p&gt;
&lt;p&gt;akka.util.duration 类 已经移植到 scala.concurrent.duration 包中。简单从 import akka.util.duration.&lt;em&gt; 替换到 import scala.concurrent.duration.&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;import bootstrap.&lt;em&gt; 和 import assertions.&lt;/em&gt; 现在不是必须的，已经被移除.&lt;/p&gt;
&lt;p&gt;import com.excilys.ebi.gatling.http.Headers.Names._ 现在不是必须的, headers 名字 直接使用HeaderNames.&lt;/p&gt;
&lt;p&gt;import com.excilys.ebi.gatling.http.Headers.Values._ 现在不是必须的, headers 值 直接使用HeaderValues.&lt;/p&gt;
&lt;p&gt;协议设置&lt;br&gt;协议已经不再配置场景,现在配置模拟器,使用协议的方法。&lt;/p&gt;
&lt;p&gt;A 1.4.x-1.5.x 设置如下:&lt;/p&gt;
&lt;p&gt;setUp(scn.(…).protocolConfig(httpConfig))&lt;br&gt; Gatling 2.0将会这样设置:&lt;/p&gt;
&lt;p&gt;setUp(scn.(…)).protocols(httpConfig)&lt;/p&gt;
&lt;p&gt;Assertions 设置&lt;/p&gt;
&lt;p&gt;assertThat方法已经被移除，assertions配置使用assertions以相同的方式作为协议.如下&lt;/p&gt;
&lt;p&gt;setup(scn.(…).protocolConfig(httpConfig))&lt;/p&gt;
&lt;p&gt;assertThat(global.responseTime.max.lessThan(1000))&lt;/p&gt;
&lt;p&gt;改变&lt;br&gt;setup(scn.(…))&lt;br&gt;  .protocols(httpConfig)&lt;br&gt;  .assertions(global.responseTime.max.lessThan(1000)&lt;br&gt;新的DSL语言注入&lt;/p&gt;
&lt;p&gt;通过用户、增长和延迟来配置你的场景注入剖面的方法已被拆除,取而代之的是一个完整的专用的DSL。&lt;/p&gt;
&lt;p&gt;注入步骤现在使用注射方法配置可用的配置。&lt;/p&gt;
&lt;p&gt;合并 users&lt;/p&gt;
&lt;p&gt;// With Gatling 1.5.X&lt;br&gt;setUp(scn.users(10)…)&lt;/p&gt;
&lt;p&gt;// With Gatling 2.0&lt;br&gt;setUp(scn.inject(atOnceUsers(10))…&lt;br&gt;合并 ramp&lt;/p&gt;
&lt;p&gt;// With Gatling 1.5.X&lt;br&gt;setUp(scn.users(10).ramp(30)…)&lt;/p&gt;
&lt;p&gt;// With Gatling 2.0&lt;br&gt;setUp(scn.inject(rampUsers(10) over (30 seconds))…&lt;br&gt;合并 delay&lt;/p&gt;
&lt;p&gt;// With Gatling 1.5.X&lt;br&gt;setUp(scn.users(10).delay(5)…)&lt;/p&gt;
&lt;p&gt;// With Gatling 2.0&lt;br&gt;setUp(scn.inject(nothingFor(5 seconds), atOnceUsers(10))…&lt;/p&gt;
&lt;p&gt;新注入的DSL的更多信息,请查阅注入DSL参考文档。&lt;/p&gt;
&lt;p&gt;核心&lt;br&gt;Checks&lt;br&gt;whatever 现在被改名为 optional.&lt;/p&gt;
&lt;p&gt;Structure Elements&lt;/p&gt;
&lt;p&gt;The first parameter of foreach is now an Expression (e.g. a Gatling EL string), not the name of the attribute to loop over.&lt;/p&gt;
&lt;p&gt;foreach现在是一个表达式的第一个参数(如gatling EL string),不是遍历属性的名称。&lt;/p&gt;
&lt;p&gt;For example, if you have a list attribute in the user’s session holding a list of values:&lt;/p&gt;
&lt;p&gt;例如,如果您有一个属性列表在用户的会话持有的值列表:&lt;/p&gt;
&lt;p&gt;.foreach(“list”, “elem”) {&lt;br&gt;  …&lt;br&gt;}&lt;br&gt;变为:&lt;/p&gt;
&lt;p&gt;.foreach(“${list}”, “elem”) {&lt;br&gt;  …&lt;br&gt;}&lt;br&gt;In asLongAs, exitASAP now defaults to true. For more information on the change of behaviour it introduces, see asLongAs documentation.&lt;/p&gt;
&lt;p&gt;在 asLongAs exitASAP 现在默认设置是true.有关的行为改变的更多信息介绍,请看asLongAs文档。&lt;/p&gt;
&lt;p&gt;Session&lt;/p&gt;
&lt;p&gt;会话已经作为主要的重构:&lt;/p&gt;
&lt;p&gt;session.get(“foobar”) becomes session(“foobar”)&lt;br&gt;session.getTypedAttribute&lt;a href=&quot;/&amp;quot;foobar&amp;quot;&quot;&gt;T&lt;/a&gt; becomes session(“foobar”).as[T]&lt;br&gt;session.getAttributeAsOption&lt;a href=&quot;/&amp;quot;foobar&amp;quot;&quot;&gt;T&lt;/a&gt; becomes session(“foobar”).asOption[T]&lt;br&gt;session.setAttribute(“foobar”, 1234) becomes session.set(“foobar”, 1234)&lt;br&gt;session.setAttributes(Map(“foo” -&amp;gt; 1, “bar” -&amp;gt; 2) becomes session.setAll(“foo” -&amp;gt; 1, “bar” -&amp;gt; 2)&lt;br&gt;session.removeAttribute(“foobar”) becomes session.remove(“foobar”)&lt;br&gt;session.isAttributeDefined(“foobar”) becomes session.contains(“foobar”)&lt;/p&gt;
&lt;p&gt;HTTP协议&lt;br&gt;HTTP协议启动加载器、httpProtocol已经更名为HTTP。&lt;br&gt;Query 参数&lt;br&gt;移除&lt;br&gt;版本的queryParam和multivaluedQueryParam,没有其他比的关键参数(解决会话中的值,使用关键的名字找到具有相同名称的属性)已被移除。&lt;/p&gt;
&lt;p&gt;Modified&lt;/p&gt;
&lt;p&gt;multivaluedFormParam现在可以解决直接从会话值,使用gatling的EL。&lt;/p&gt;
&lt;p&gt;Request bodies&lt;/p&gt;
&lt;p&gt;Scalate templates support has been dropped.&lt;br&gt;对Scalate templates 支持已经放弃。&lt;/p&gt;
&lt;p&gt; ElFileBody (如下) 是当前代替Scalate templates最佳方案&lt;/p&gt;
&lt;p&gt;api的请求体的设置意境改变。现在用这几个方法来代替body fileBody byteArrayBody.现在有一个单独的方法。body(…)通过你设置的类型的body来发送。&lt;br&gt;合并 .body(body)&lt;/p&gt;
&lt;p&gt;body(body) 已经被 .body(StringBody(body))代替.&lt;/p&gt;
&lt;p&gt;http(“my post request”)&lt;br&gt;  .post(“&lt;a href=&quot;http://www.example.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.example.org&lt;/a&gt;“)&lt;br&gt;  .body(“Look Ma, I’m a request body !”)&lt;br&gt;变成：&lt;/p&gt;
&lt;p&gt;http(“my post request”)&lt;br&gt;  .post(“&lt;a href=&quot;http://www.example.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.example.org&lt;/a&gt;“)&lt;br&gt;  .body(StringBody(“Look Ma, I’m a request body !”))&lt;/p&gt;
&lt;p&gt;合并 .fileBody(filePath)&lt;/p&gt;
&lt;p&gt;.fileBody(filePath) 被 .body(RawFileBody(filePath))代替.&lt;/p&gt;
&lt;p&gt;http(“my post request”)&lt;br&gt;  .post(“&lt;a href=&quot;http://www.example.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.example.org&lt;/a&gt;“)&lt;br&gt;  .fileBody(“my_upload.xslx”)&lt;br&gt;becomes:&lt;/p&gt;
&lt;p&gt;http(“my post request”)&lt;br&gt;  .post(“&lt;a href=&quot;http://www.example.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.example.org&lt;/a&gt;“)&lt;br&gt;  .body(FileBody(“my_upload.xslx”))&lt;/p&gt;
&lt;p&gt;合并 .fileBody(filePath, values)&lt;/p&gt;
&lt;p&gt;.fileBody(filePath, values) 已经被 .body(ElFileBody(filePath))代替.&lt;br&gt;值现在直接解决虚拟用户会话的内容。&lt;/p&gt;
&lt;p&gt;http(“my post request”)&lt;br&gt;  .post(“&lt;a href=&quot;http://www.example.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.example.org&lt;/a&gt;“)&lt;br&gt;  .fileBody(“my_template.txt”, Map(“userName” -&amp;gt; “user123”)&lt;/p&gt;
&lt;p&gt;变为&lt;/p&gt;
&lt;p&gt;http(“my post request”)&lt;br&gt;  .post(“&lt;a href=&quot;http://www.example.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.example.org&lt;/a&gt;“)&lt;br&gt;  .body(ElFileBody(“my template.txt”))&lt;/p&gt;
&lt;p&gt;如果 template.txt 包含:&lt;/p&gt;
&lt;p&gt;Hi, my name is ${userName}&lt;/p&gt;
&lt;p&gt;和虚拟用户的会话属性的用户名设置为user123,&lt;/p&gt;
&lt;p&gt;然后将发送有效地请求主体:&lt;br&gt;Hi, my name is user123&lt;/p&gt;
&lt;p&gt;合并 .byteArrayBody(byteArray)&lt;/p&gt;
&lt;p&gt;.byteArrayBody(byteArray) 被 .body(ByteArrayBody(bytes))代替.&lt;/p&gt;
&lt;p&gt;http(“my post request”)&lt;br&gt;  .post(“&lt;a href=&quot;http://www.example.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.example.org&lt;/a&gt;“)&lt;br&gt;  .byteArrayBody(Array(1, 2, 3, 4))&lt;/p&gt;
&lt;p&gt;变为：&lt;/p&gt;
&lt;p&gt;http(“my post request”)&lt;br&gt;  .post(“&lt;a href=&quot;http://www.example.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.example.org&lt;/a&gt;“)&lt;br&gt;  .body(ByteArrayBody(Array(1, 2, 3, 4)))&lt;/p&gt;
&lt;p&gt;更多有关信息,请参见请求机构引用部分。&lt;/p&gt;
&lt;p&gt;Misc&lt;br&gt;ExtendedResponse已经重命名为响应。requestInfoExtractor和responseInfoExtractor已经合并成一个单一的extraInfoExtractor,ExtraInfo =&amp;gt; List[Any] function.。&lt;br&gt;在extraInfoExtractor的更多信息,请参阅文档。&lt;/p&gt;
&lt;p&gt;Logs&lt;br&gt;simulation.log 被重新设计。&lt;/p&gt;
&lt;p&gt;If you wrote your own specific simulation.log parser, you’ll need to migrate it to the new structure.&lt;br&gt;如果你写自己的simulation.log解析器,您需要它迁移到新结构&lt;/p&gt;
&lt;p&gt;Recorder&lt;br&gt;录制器&lt;br&gt;Until now, 当你设置 Recorder时, 你必须设置两个端口记录器的当地代理:一个用于HTTP,HTTPS。 这再也不需要了, 因为record处理本身转向一个HTTPS连接如果必要,并且只需要指定一个单独的端口。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;第三篇&lt;br&gt;&lt;a href=&quot;http://gatling.io/docs/2.2.1/migration_guides/1.5.x-to-2.0.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://gatling.io/docs/2.
    
    </summary>
    
    
      <category term="gatling" scheme="http://yoursite.com/tags/gatling/"/>
    
  </entry>
  
  <entry>
    <title>gatling官方文档翻译2</title>
    <link href="http://yoursite.com/2016/06/02/gatling2/"/>
    <id>http://yoursite.com/2016/06/02/gatling2/</id>
    <published>2016-06-02T14:37:03.000Z</published>
    <updated>2016-06-02T15:29:58.000Z</updated>
    
    <content type="html">&lt;p&gt;第二篇&lt;br&gt;&lt;a href=&quot;http://gatling.io/docs/2.2.1/whats_new/2.2.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://gatling.io/docs/2.2.1/whats_new/2.2.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;What’s New in 2.2&lt;br&gt;JDK&lt;br&gt;Gatling now requires JDK8. JVM default tuning uses G1 Garbage Collector, so we strongly advice you use a very up-to-date JDK, not early versions.&lt;/p&gt;
&lt;p&gt;Core&lt;br&gt;Feeder Shuffle&lt;br&gt;You can now shuffle a feeder content before enqueuing its content, see Feeder documentation for more details.&lt;/p&gt;
&lt;p&gt;Assertions&lt;br&gt;Gatling now supports “per-million” assertions, similar to “percent” ones.&lt;/p&gt;
&lt;p&gt;Conditional Checks (since 2.2.1)&lt;br&gt;It’s now possible to only perform a given check when a given condition is met. See Conditional Checks documentation for more details.&lt;/p&gt;
&lt;p&gt;HTTP&lt;br&gt;Native Transport&lt;br&gt;Gatling is now based on Netty 4 that provide an optional native epoll-based NIO re-implementation (different from JDK NIO) which can give better throughput. This option is only available on Linux. See Netty documentation for more details.&lt;/p&gt;
&lt;p&gt;Gatling ships with the required jar, but the option is turned down by default.&lt;/p&gt;
&lt;p&gt;In order to enable it, set gatling.http.ahc.useNativeTransport to true in gatling.conf.&lt;/p&gt;
&lt;p&gt;OpenSSL Support&lt;br&gt;Netty 4 also provides a support for OpenSSL and BoringSSL. See Netty documentation for more details.&lt;/p&gt;
&lt;p&gt;Gatling doesn’t ship the required jar and it depends on your operating system and if you want static or dynamic binding. You’re expected to manually add the suited library to Gatling’s classpath.&lt;/p&gt;
&lt;p&gt;In order to enable it, set gatling.http.ahc.useOpenSsl to true in gatling.conf.&lt;/p&gt;
&lt;p&gt;Forms Support&lt;br&gt;You can now use the form(“cssSelector”).saveAs(“myForm”) check to capture a Map[String, Seq[String]] of all the inputs of an HTML form at once.&lt;/p&gt;
&lt;p&gt;You can then feed them back to a later request. See HTTP request documentation for more details.&lt;/p&gt;
&lt;p&gt;Polling Support&lt;br&gt;Gatling now supports HTTP polling, see HTTP polling documentation for more details.&lt;/p&gt;
&lt;p&gt;Hostname Resolution&lt;br&gt;By default, virtual users now use a shuffled list of the DNS records Gatling gets from the JDK. If you use DNS round-robin, this will balance your virtual users amongst the nodes of a static cluster.&lt;/p&gt;
&lt;p&gt;Alternatively, you can enable perUserNameResolution on the HTTP protocol and have each virtual user perform DNS resolution on its own. This, way, your virtual users would be properly balanced if your cluster grows elastically under load. See HTTP protocol documentation for more details.&lt;/p&gt;
&lt;p&gt;We also support DNS fail-over, meaning that virtual users will try the next DNS record of they couldn’t connect to the first address.&lt;/p&gt;
&lt;p&gt;Hostname Aliasing&lt;br&gt;You can bypass hostname resolution and define aliases in hostNameAliases on the HTTP protocol. See HTTP protocol documentation for more details.&lt;/p&gt;
&lt;p&gt;Local Addresses&lt;br&gt;It’s now possible to pass multiple local addresses to the HTTP protocol in localAddresses. See HTTP protocol documentation for more details.&lt;/p&gt;
&lt;p&gt;Reports&lt;br&gt;JUnit Format Report File&lt;br&gt;Gatling now generates a JUNIt format report file based on the assertions in your simulation. This file is generated as /js/assertions.xml.&lt;/p&gt;
&lt;p&gt;Groups Duration&lt;br&gt;You can switch from Group cumulated response times to duration when generating the reports. See gatling.charting.useGroupDurationMetric option in gatling.conf&lt;/p&gt;
&lt;p&gt;Maven Plugin&lt;br&gt;The Gatling Maven plugin now provides test and integration-test that are bound to the phases of the same name.&lt;/p&gt;
&lt;p&gt;It also now provides a useOldJenkinsJUnitSupport that exposes our JUnit file to Jenkins. At some point, we’ll provide a native support.&lt;/p&gt;
&lt;p&gt;在2.2的新增了那些功能&lt;br&gt;JDK&lt;br&gt;gatling现在需要JDK8支持。 JVM默认调整使用G1垃圾收集器，因此我们强烈建议您升级到最新的JDK，而不是早期版本。&lt;/p&gt;
&lt;p&gt;核心&lt;br&gt;Feeder Shuffle（不会翻…）&lt;br&gt;现在，You can now shuffle a feeder content before enqueuing its content，请参阅Feeder文档了解更多信息。&lt;/p&gt;
&lt;p&gt;断言&lt;br&gt;gatling现在支持“per-million”的断言，类似于“percent”。&lt;/p&gt;
&lt;p&gt;条件检查（自2.2.1）&lt;br&gt;现在只要当给定条件满足时就可以执行一个给定的检查。有关详细信息，请参阅条件检查文档。&lt;/p&gt;
&lt;p&gt;HTTP&lt;br&gt;本机传输&lt;br&gt;虽然我也不知道 epoll-based NIO是什么。。。&lt;/p&gt;
&lt;p&gt;gatling现在基于Netty 4提供一个可选的基于原生的epoll-NIO重新实现（从JDK NIO不同），它可以提供更好的吞吐量。此选项仅在Linux上可用。详见的Netty文档,了解更多信息。&lt;/p&gt;
&lt;p&gt;gatling不需要携带需要的jar包，它取决于你的操作系统,如果你想要静态或动态绑定。你需要手动配置需要的jar的path到gatling的classpath。&lt;br&gt;加特林附带所需的jar,但默认选项是关闭的。&lt;/p&gt;
&lt;p&gt;为了启用它,设置gatling.http.ahc。在gatling.conf useNativeTransport为true。&lt;/p&gt;
&lt;p&gt;为了启用他，需要在gatling.conf里将 gatling.http.ahc.useOpenSsl设置为true。&lt;/p&gt;
&lt;p&gt;表单支持&lt;br&gt;您现在可以使用的form(“cssSelector”).saveAs（“myForm”）检查捕捉Map[String, Seq[String]]在HTML表单的所有输入。&lt;/p&gt;
&lt;p&gt;然后，您可以传递给以后的请求。见HTTP请求的文档了解更多信息。&lt;/p&gt;
&lt;p&gt;轮训支持&lt;br&gt;gatling现在支持HTTP轮询，请参阅HTTP轮询文档了解更多信息。&lt;/p&gt;
&lt;p&gt;hostname解析&lt;br&gt;默认情况下，, virtual users now use a shuffled list of the DNS records Gatling gets from the JDK. If you use DNS round-robin。如果您使用DNS循环，这将你的虚拟用户的静态群集的节点之间平衡。&lt;/p&gt;
&lt;p&gt;或者，也可以在HTTP协议使用perUserNameResolution，并让每个虚拟用户自身进行DNS解析。这样，如果你的集群负载下的弹性增长时，你的虚拟用户会保持良好的平衡。见HTTP协议文档了解更多信息。&lt;/p&gt;
&lt;p&gt;我们也支持DNS故障转移，这意味着虚拟用户会尝试下一个DNS记录，当他们无法连接到第一个地址时。&lt;/p&gt;
&lt;p&gt;别名主机名&lt;br&gt;您可以绕过主机名解析和HTTP协议定义hostNameAliases别名。见HTTP协议文档了解更多信息。&lt;/p&gt;
&lt;p&gt;本地地址&lt;br&gt;它现在可以将多个本地地址传递给在localAddresses HTTP协议。见HTTP协议文档了解更多信息。&lt;/p&gt;
&lt;p&gt;报告&lt;br&gt;JUnit的格式报告文件&lt;br&gt;加特林现在根据你的模拟断言产成一个JUnit格式的报告文件。此文件将生成如/js/assertions.xml。&lt;/p&gt;
&lt;p&gt;group持续时间&lt;br&gt;您可以切换组累计响应时间当时间生成报告时。见gatling.conf gatling.charting.useGroupDurationMetric选项&lt;/p&gt;
&lt;p&gt;Maven插件&lt;br&gt;gatling Maven插件现在提供测试和集成测试绑定到同名的阶段。&lt;/p&gt;
&lt;p&gt;它还现在提供一个公开的JUnit我们的文件，jenkins一useOldJenkinsJUnitSupport。在某些时候，我们将提供原生支持。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;第二篇&lt;br&gt;&lt;a href=&quot;http://gatling.io/docs/2.2.1/whats_new/2.2.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://gatling.io/docs/2.2.1/whats_new/2.
    
    </summary>
    
    
      <category term="gatling" scheme="http://yoursite.com/tags/gatling/"/>
    
  </entry>
  
  <entry>
    <title>gatling官方文档翻译</title>
    <link href="http://yoursite.com/2016/05/31/gatling/"/>
    <id>http://yoursite.com/2016/05/31/gatling/</id>
    <published>2016-05-31T06:56:38.000Z</published>
    <updated>2016-06-02T14:37:44.000Z</updated>
    
    <content type="html">&lt;p&gt;第一篇&lt;/p&gt;
&lt;h2 id=&quot;http_3A//gatling-io/docs/2-2-1/index-html&quot;&gt;&lt;a href=&quot;#http_3A//gatling-io/docs/2-2-1/index-html&quot; class=&quot;headerlink&quot; title=&quot;http://gatling.io/docs/2.2.1/index.html&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://gatling.io/docs/2.2.1/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://gatling.io/docs/2.2.1/index.html&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Gatling is a highly capable load testing tool. It is designed for ease of use, maintainability and high performance.&lt;/p&gt;
&lt;p&gt;Out of the box, Gatling comes with excellent support of the HTTP protocol that makes it a tool of choice for load testing any HTTP server. As the core engine is actually protocol agnostic, it is perfectly possible to implement support for other protocols. For example, Gatling currently also ships JMS support.&lt;/p&gt;
&lt;p&gt;The Quickstart has an overview of the most important concepts, walking you through the setup of a simple scenario for load testing an HTTP server.&lt;/p&gt;
&lt;p&gt;Having scenarios that are defined in code and are resource efficient are the two requirements that motivated us to create Gatling. Based on an expressive DSL, the scenarios are self explanatory. They are easy to maintain and can be kept in a version control system.&lt;/p&gt;
&lt;p&gt;Gatling’s architecture is asynchronous as long as the underlying protocol, such as HTTP, can be implemented in a non blocking way. This kind of architecture lets us implement virtual users as messages instead of dedicated threads, making them very resource cheap. Thus, running thousands of concurrent virtual users is not an issue.&lt;/p&gt;
&lt;p&gt;Migrating from a Previous Version of Gatling&lt;br&gt;If you’re migrating from Gatling 2.1 to Gatling 2.2, please check the dedicated migration guide.&lt;br&gt;Otherwise, please follow the previous migration guides.&lt;br&gt;User’s guide&lt;br&gt;What’s New&lt;br&gt;Migration Guides&lt;br&gt;Quickstart&lt;br&gt;Advanced Tutorial&lt;br&gt;General&lt;br&gt;Session&lt;br&gt;HTTP&lt;br&gt;JMS&lt;br&gt;Realtime monitoring&lt;br&gt;Extensions&lt;br&gt;Cookbook&lt;br&gt;Information for Gatling Developers&lt;br&gt;Project Information&lt;/p&gt;
&lt;p&gt;gatling是一个的高性能压力测试工具。它设计的初衷是易用性、可维护性和高性能。gatling开箱即用的,并且很好的支持HTTP协议,使其成为你测试任何HTTP服务器负载的工具选择之一。作为核心引擎实际上是协议无关,这是完全有可能实现并支持其他协议。例如,gatling目前还对JMS支持。&lt;/p&gt;
&lt;p&gt;快速入门是对于最重要的概念有一个回顾,通过设置一个简单的场景的来对一个HTTP服务器完成负载测试。&lt;br&gt;在代码中定义测试场景和资源利用率两方面的需求,激励我们创造gatling。基于可表述的DSL语言,所以场景易于叙述和理解的。他们很容易维护,并且可以保存在一个版本控制系统。&lt;/p&gt;
&lt;p&gt;gatling的架构和底层协议均采用异步方式设计。比如HTTP、可以利用一个非阻塞的方式来实现。这种架构可以让我们实现虚拟用户的消息而不是专用的线程,让他们成为非常廉价资源。因此,运行数千并发虚拟用户不是什么问题。&lt;/p&gt;
&lt;p&gt;从之前的版本中合并gatling&lt;/p&gt;
&lt;p&gt;如果你从gatling2.1迁移到2.2gatling,请检查专用的合并指南。否则,请安装的合并指南。&lt;/p&gt;
&lt;h3 id=&quot;u7528_u6237_u624B_u518C&quot;&gt;&lt;a href=&quot;#u7528_u6237_u624B_u518C&quot; class=&quot;headerlink&quot; title=&quot;用户手册&quot;&gt;&lt;/a&gt;用户手册&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;新事物&lt;/li&gt;
&lt;li&gt;合并手册&lt;/li&gt;
&lt;li&gt;快速入门&lt;/li&gt;
&lt;li&gt;高级教程&lt;/li&gt;
&lt;li&gt;通用&lt;/li&gt;
&lt;li&gt;消息&lt;/li&gt;
&lt;li&gt;Http&lt;/li&gt;
&lt;li&gt;JMS&lt;/li&gt;
&lt;li&gt;实时监测&lt;/li&gt;
&lt;li&gt;扩展&lt;/li&gt;
&lt;li&gt;cookbook&lt;/li&gt;
&lt;li&gt;gatling 开发者信息&lt;/li&gt;
&lt;li&gt;项目信息        &lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;第一篇&lt;/p&gt;
&lt;h2 id=&quot;http_3A//gatling-io/docs/2-2-1/index-html&quot;&gt;&lt;a href=&quot;#http_3A//gatling-io/docs/2-2-1/index-html&quot; class=&quot;headerlink&quot; title=
    
    </summary>
    
    
      <category term="性能测试" scheme="http://yoursite.com/tags/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>前端测试工具集锦</title>
    <link href="http://yoursite.com/2016/05/24/front-end-tools/"/>
    <id>http://yoursite.com/2016/05/24/front-end-tools/</id>
    <published>2016-05-24T12:47:35.000Z</published>
    <updated>2016-06-14T06:25:23.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;/image/front-end-tools.png&quot; alt=&quot;front-end-tools&quot;&gt;&lt;/p&gt;
&lt;p&gt;总结最近了解的前端测试的相关内容，发现前端这里真的是太庞大了，而且各种测试工具层出不穷，需要总结东西太多了，如有遗漏请大家见谅。&lt;/p&gt;
&lt;h2 id=&quot;TDD_vs_BDD_uFF1A&quot;&gt;&lt;a href=&quot;#TDD_vs_BDD_uFF1A&quot; class=&quot;headerlink&quot; title=&quot;TDD vs BDD：&quot;&gt;&lt;/a&gt;TDD vs BDD：&lt;/h2&gt;&lt;p&gt;TDD与BDD概念不再描述了，直奔主题。&lt;/p&gt;
&lt;h3 id=&quot;u524D_u7AEFBDD_u6D4B_u8BD5_u6846_u67B6&quot;&gt;&lt;a href=&quot;#u524D_u7AEFBDD_u6D4B_u8BD5_u6846_u67B6&quot; class=&quot;headerlink&quot; title=&quot;前端BDD测试框架&quot;&gt;&lt;/a&gt;前端BDD测试框架&lt;/h3&gt;&lt;p&gt;jasmine&lt;br&gt;Installation&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;figcaption&gt;&lt;span&gt;install -g jasmine&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;```&amp;#10;Initializing&amp;#10;To initialize a project for Jasmine&amp;#10;&amp;#10;```jasmine init&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;To seed your project with some examples&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;figcaption&gt;&lt;span&gt;examples&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;```&amp;#10;Usage&amp;#10;To run your test suite&amp;#10;```  jasmine&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight actionscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;describe(&lt;span class=&quot;string&quot;&gt;&quot;A suite&quot;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  it(&lt;span class=&quot;string&quot;&gt;&quot;contains spec with an expectation&quot;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    expect(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;).toBe(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;mocha(推荐,简洁明了)&lt;/p&gt;
&lt;p&gt;Installation&lt;/p&gt;
&lt;p&gt;Install with npm:&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm &lt;span class=&quot;operator&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; -&lt;span class=&quot;keyword&quot;&gt;g&lt;/span&gt; mocha&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Getting Started&lt;br&gt;&lt;figure class=&quot;highlight stata&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install -&lt;span class=&quot;keyword&quot;&gt;g&lt;/span&gt; mocha&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;keyword&quot;&gt;mkdir&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;label&quot;&gt;$EDITOR&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;test&lt;/span&gt;/&lt;span class=&quot;keyword&quot;&gt;test&lt;/span&gt;.js&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;In your editor:&lt;br&gt;&lt;figure class=&quot;highlight lua&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var &lt;span class=&quot;built_in&quot;&gt;assert&lt;/span&gt; = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;chai&#39;&lt;/span&gt;).&lt;span class=&quot;built_in&quot;&gt;assert&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;describe(&lt;span class=&quot;string&quot;&gt;&#39;Array&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  describe(&lt;span class=&quot;string&quot;&gt;&#39;#indexOf()&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    it(&lt;span class=&quot;string&quot;&gt;&#39;should return -1 when the value is not present&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;assert&lt;/span&gt;.equal(-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;].indexOf(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;assert&lt;/span&gt;.equal(-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;].indexOf(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;you need to install chai.&lt;br&gt;Back in the terminal:&lt;br&gt;&lt;figure class=&quot;highlight autohotkey&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;    $  mocha&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      .&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      ✔ &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; test complete (&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;escape&quot;&gt;``&lt;/span&gt;&lt;span class=&quot;escape&quot;&gt;` &lt;/span&gt;     &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;### 前端TDD测试框架&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Qunit&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Installation&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ npm i qunit
&lt;/code&gt;&lt;/pre&gt;&lt;figure class=&quot;highlight livecodeserver&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;API&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;http&lt;/span&gt;://api.qunitjs.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Qunit是一款强大的用于帮助调试代码的，JavaScript单元测试框架。QUnit由jQuery团队成员编写，是jQuery的官方测试套件，不仅如此，QUnit还可以测试任何常规JavaScript代码，甚至可以通过一些像Rhino或者V8这样的JavaScript引擎，测试服务端JavaScript代码。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;可以想象其跟jquery UI及jquery animation等库结局一样，逃脱不了各种被后来的库全方位的比较和“超越”.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;## Unit Testing&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Mocha &amp;amp;&amp;amp; Jasmine&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Mocha 跟 Jasmine 是目前最火的两个单元测试框架，基本上目前前端单元测试就在这两个库之间选了，下面是这两个库的区别，大家可以根据自己的需求进行选择：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mocha：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    优点：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    终端显示友好&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    灵活，扩展性好&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    缺点：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    自身集成度不高（没有断言，spy，异步等），而且经常要配合Chai，Sinon等库使用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    配置相对麻烦一点点&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Jasmine:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    优点：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    集成度高，自带BBD，spy，方便的异步支持(&lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    配置方便&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    缺点：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    相对不太灵活&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    由于各种功能内建，断言方式或者异步等风格相对比较固定&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    没有自带mockserver， 如果需要这功能的得另外配置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;jest&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Jest 是Facebook的一个专门进行Javascript单元测试的工具.它是在Jasmine测试框架上演变开发而来，使用了我们熟知的expect(&lt;span class=&quot;built_in&quot;&gt;value&lt;/span&gt;).toBe(other) 这种断言格式。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;First install Jest &lt;span class=&quot;operator&quot;&gt;with&lt;/span&gt; npm &lt;span class=&quot;keyword&quot;&gt;by&lt;/span&gt; running:&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;pre&gt;&lt;code&gt;npm install --save-dev jest-cli
&lt;/code&gt;&lt;/pre&gt;&lt;figure class=&quot;highlight stata&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Great! Now let&#39;s get started &lt;span class=&quot;keyword&quot;&gt;by&lt;/span&gt; writing a &lt;span class=&quot;keyword&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; a hypothetical &lt;span class=&quot;keyword&quot;&gt;sum&lt;/span&gt;.js &lt;span class=&quot;keyword&quot;&gt;file&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;pre&gt;&lt;code&gt;function sum(a, b) {
  return a + b;
}
module.exports = sum;
&lt;/code&gt;&lt;/pre&gt;&lt;figure class=&quot;highlight livecodeserver&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Create &lt;span class=&quot;operator&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;directory&lt;/span&gt; __tests__/ &lt;span class=&quot;operator&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;sum&lt;/span&gt;-test.js:&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;pre&gt;&lt;code&gt;jest.unmock(&amp;apos;../sum&amp;apos;); // unmock to use the actual implementation of sum
describe(&amp;apos;sum&amp;apos;, () =&amp;gt; {
  it(&amp;apos;adds 1 + 2 to equal 3&amp;apos;, () =&amp;gt; {
    const sum = require(&amp;apos;../sum&amp;apos;);
    expect(sum(1, 2)).toBe(3);
  });
});
&lt;/code&gt;&lt;/pre&gt;&lt;figure class=&quot;highlight dockerfile&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Add&lt;/span&gt; &lt;span class=&quot;bash&quot;&gt;the following to your package.json:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;pre&gt;&lt;code&gt;&amp;quot;scripts&amp;quot;: {
  &amp;quot;test&amp;quot;: &amp;quot;jest&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;figure class=&quot;highlight dockerfile&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Run&lt;/span&gt; &lt;span class=&quot;bash&quot;&gt;npm &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;pre&gt;&lt;code&gt;[PASS] __tests__/sum-test.js (0.010s)
&lt;/code&gt;&lt;/pre&gt;&lt;figure class=&quot;highlight armasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;## 代码覆盖率工具&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;jscover&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;jscover&lt;/span&gt;是一个用来显示JavaScript项目代码覆盖率的工具，它是继承于JSCoverage的，用C++/SpiderMonkey 取代了Java/Rhino&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;但是已经沦落到淘汰的边缘&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;Istanbul&lt;/span&gt;(推荐目前最强大前端代码覆盖率工具)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;Istanbul&lt;/span&gt; 是 JavaScript 程序的代码覆盖率工具,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;能产生 Statements/Lines/Functions/&lt;span class=&quot;keyword&quot;&gt;Branches &lt;/span&gt;等指标报表，并以各种格式导出。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;http:&lt;/span&gt;//qaseven.github.io/&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;01&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;25&lt;/span&gt;/gulp_for_qa/ 这篇文章里已经详细介绍了。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;blanketjs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;blanketjs是一个易于安装,易于配置和易于使用的JavaScript代码覆盖库 &lt;/span&gt;对于nodejs和浏览器都支持的不错。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;NodeJS&lt;/span&gt; (Powered &lt;span class=&quot;keyword&quot;&gt;by &lt;/span&gt;Mocha)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;Install&lt;/span&gt; from npm.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;pre&gt;&lt;code&gt;npm install blanket
&lt;/code&gt;&lt;/pre&gt;&lt;figure class=&quot;highlight armasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;Make&lt;/span&gt; sure you &lt;span class=&quot;preprocessor&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;Blanket &lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;before &lt;/span&gt;you &lt;span class=&quot;preprocessor&quot;&gt;require&lt;/span&gt; or run any of the &lt;span class=&quot;preprocessor&quot;&gt;code&lt;/span&gt; you want covered&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;preprocessor&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;blanket&quot;&lt;/span&gt;)(&amp;#123; &lt;span class=&quot;comment&quot;&gt;/* optional options */&lt;/span&gt; &amp;#125;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;preprocessor&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;src/myscripttotest&quot;&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;Run&lt;/span&gt; your tests using mocha &lt;span class=&quot;keyword&quot;&gt;and &lt;/span&gt;take advantage of the json-cov &lt;span class=&quot;keyword&quot;&gt;and &lt;/span&gt;html-cov reporters to output the coverage results.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;## e2e test&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;ui&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;webdriverio&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;这个库是nodejs的一个webdriver模块(浏览器自动化)。你可以用它写超级简单&lt;span class=&quot;keyword&quot;&gt;Selenium测试在你最喜欢的BDD &lt;/span&gt;/ TDD测试框架中,并且可以在本地运行或在云端中， Sauce Lab,&lt;span class=&quot;keyword&quot;&gt;BrowserStack或TestingBot。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;webdriverio&lt;/span&gt; 支持 Cucumber, Jasmine &lt;span class=&quot;keyword&quot;&gt;and &lt;/span&gt;Mocha+Chai  这些测试框架&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;nightwatch&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;Nightwatch.js&lt;/span&gt; 是一个易于使用的，基于 Node.js 平台的浏览器自动化测试解决方案。它使用强大的 &lt;span class=&quot;keyword&quot;&gt;Selenium &lt;/span&gt;WebDriver API 来在 DOM 元素上执行命令和断言。 语法简单但很强大，使您可以快速编写测试。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;只需使用 Javascript 和 CSS 选择器，不需要初始化其他对象和类，您只需要编写测试规范。内置命令行测试运行器，使您能够运行整体测试，分组测试或者单个测试。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;pre&gt;&lt;code&gt;this.demoTestGoogle = function (browser) {
browser
.url(“http://www.google.com”)
.waitForElementVisible(&amp;apos;body&amp;apos;, 1000)
.setValue(&amp;apos;input[type=text]&amp;apos;, &amp;apos;nightwatch&amp;apos;)
.waitForElementVisible(&amp;apos;button[name=btnG]&amp;apos;, 1000)
.click(&amp;apos;button[name=btnG]&amp;apos;)
.pause(1000)
.assert.containsText(&amp;apos;#main&amp;apos;, &amp;apos;The Night Watch&amp;apos;)
.end();
};
&lt;/code&gt;&lt;/pre&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;当涉及异步调用时，基于链式的队列是个糟糕的模式&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CodeceptJS&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CodeceptJS是一个基于WebDriver全新的端到端测试框架。它们从用户角度简单描述用户操作步骤来编写测试脚本&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;pre&gt;&lt;code&gt;Feature(&amp;apos;CodeceptJS Demonstration&amp;apos;);

Scenario(&amp;apos;test some forms&amp;apos;, (I) =&amp;gt; {
  I.amOnPage(&amp;apos;http://simple-form-bootstrap.plataformatec.com.br/documentation&amp;apos;);
  I.fillField(&amp;apos;Email&amp;apos;, &amp;apos;hello@world.com&amp;apos;);
  I.fillField(&amp;apos;Password&amp;apos;, &amp;apos;123456&amp;apos;);
  I.checkOption(&amp;apos;Active&amp;apos;);
  I.checkOption(&amp;apos;Male&amp;apos;);  
  I.click(&amp;apos;Create User&amp;apos;);
  I.see(&amp;apos;User is valid&amp;apos;);
  I.dontSeeInCurrentUrl(&amp;apos;/documentation&amp;apos;);
});
&lt;/code&gt;&lt;/pre&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;protractor&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(angluarjs亲儿子，由angluarjs核心人物开发的e2e测试工具)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;protractor 是 AngularJS 团队构建的一个端对端的测试运行工具，模拟用户交互，帮助你验证你的Angular应用的运行状况。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Protractor使用Jasmine测试框架来定义测试,当然你也可以选择其他测试框架来定义测试，如mocha。Protractor为不同的页面交互提供一套健壮的API。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;pre&gt;&lt;code&gt;var chai = require(&amp;apos;chai&amp;apos;);
var chaiAsPromised = require(&amp;apos;chai-as-promised&amp;apos;);

chai.use(chaiAsPromised);
var expect = chai.expect;

describe(&amp;apos;angularjs 首页&amp;apos;, function() {
  it(&amp;apos;应该欢迎一个具名的用户&amp;apos;, function() {
    //要求浏览器访问网址http://www.angularjs.org
    browser.get(&amp;apos;http://www.angularjs.org&amp;apos;);

    //找到ng-model名为&amp;apos;youname&amp;apos;的HTML元素，要求浏览器键入名字
    element(by.model(&amp;apos;yourName&amp;apos;)).sendKeys(&amp;apos;tanshuai&amp;apos;);

    var greeting = element(by.binding(&amp;apos;yourName&amp;apos;));

     //取得结果并作断言测试
    expect(greeting.getText()).to.eventually.equal(&amp;apos;Hello tanshuai!&amp;apos;);
  });
});
&lt;/code&gt;&lt;/pre&gt;&lt;figure class=&quot;highlight nginx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;## headless&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;PhantomJS&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PhantomJS 是一个基于 WebKit 的服务器端 JavaScript API。它全面支持web而不需浏览器支持，其快速，原生支持各种Web标准： DOM 处理, CSS 选择器, JSON, Canvas, 和 SVG。 PhantomJS 可以用于 页面自动化 ， 网络监测 ， 网页截屏 ，以及 无界面测试 等。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;很多其它的测试框架都是基于PhantomJS二次开发的,例如下面要讲的casperjs，nightmare&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nightmare&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nightmare是一个高级浏览器自动化依赖库。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;var Nightmare = require(‘nightmare’);&lt;br&gt;    var expect = require(‘chai’).expect; // jshint ignore:line&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;describe(&amp;apos;test yahoo search results&amp;apos;, function() {
it(&amp;apos;should find the nightmare github link first&amp;apos;, function*() {
  var nightmare = Nightmare()
  var link = yield nightmare
    .goto(&amp;apos;http://yahoo.com&amp;apos;)
    .type(&amp;apos;form[action*=&amp;quot;/search&amp;quot;] [name=p]&amp;apos;, &amp;apos;github nightmare&amp;apos;)
    .click(&amp;apos;form[action*=&amp;quot;/search&amp;quot;] [type=submit]&amp;apos;)
    .wait(&amp;apos;#main&amp;apos;)
    .evaluate(function () {
      return document.querySelector(&amp;apos;#main .searchCenterMiddle li a&amp;apos;).href
    })
  expect(link).to.equal(&amp;apos;https://github.com/segmentio/nightmare&amp;apos;);
});
});
&lt;/code&gt;&lt;/pre&gt;&lt;figure class=&quot;highlight erlang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;casperjs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;CasperJS&lt;/span&gt; 是一个开源的导航脚本和测试工具，使用 &lt;span class=&quot;variable&quot;&gt;JavaScript&lt;/span&gt; 基于 &lt;span class=&quot;variable&quot;&gt;PhantomJS&lt;/span&gt; 编写，用于测试 &lt;span class=&quot;variable&quot;&gt;Web&lt;/span&gt; 应用功能，&lt;span class=&quot;variable&quot;&gt;Phantom&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;JS&lt;/span&gt;是一个服务器端的 &lt;span class=&quot;variable&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;API&lt;/span&gt; 的 &lt;span class=&quot;variable&quot;&gt;WebKit&lt;/span&gt;。其支持各种&lt;span class=&quot;variable&quot;&gt;Web&lt;/span&gt;标准： &lt;span class=&quot;variable&quot;&gt;DOM&lt;/span&gt; 处理, &lt;span class=&quot;variable&quot;&gt;CSS&lt;/span&gt; 选择器, &lt;span class=&quot;variable&quot;&gt;JSON&lt;/span&gt;, &lt;span class=&quot;variable&quot;&gt;Canvas&lt;/span&gt;, 和 &lt;span class=&quot;variable&quot;&gt;SVG&lt;/span&gt;.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; var casper = require(‘casper’).create();&lt;br&gt;    var fs = require(‘fs’)&lt;br&gt;    casper.start(‘&lt;a href=&quot;https://github.com/login/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/login/&lt;/a&gt;‘);&lt;br&gt;    casper.waitForSelector(‘input.btn.btn-primary.btn-block’); // wait for the form node to be added&lt;br&gt;    casper.then(function() {&lt;br&gt;      this.fillSelectors(‘.auth-form-body’, {&lt;br&gt;          ‘#login_field’: ‘qileilove’,&lt;br&gt;          ‘#password’: ‘&lt;strong&gt;*&lt;/strong&gt;‘&lt;br&gt;       });&lt;br&gt;      this.click(‘input.btn.btn-primary.btn-block’); // Click the login button instead of submitting the form&lt;br&gt;      this.echo(‘Browser Cookie: ‘ + this.evaluate(function() {&lt;br&gt;           return document.cookie;&lt;br&gt;       }));&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;casper.run(function() {
  var cookies = JSON.stringify((this.page.cookies));
  fs.write(&amp;apos;cookie.txt&amp;apos;, cookies, &amp;apos;w&amp;apos;);
  this.exit();
});
casper.wait(3000); // Wait for ajax form submission
casper.then(function() {
  this.capture(&amp;apos;logged-in.png&amp;apos;)
});

casper.run();
&lt;/code&gt;&lt;/pre&gt;&lt;figure class=&quot;highlight armasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;## visual regression-test&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;backstopjs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;BackstopJS &lt;/span&gt;是自动 CSS 回归测试工具，它通过比较不同视窗大小的 DOM 截图来回应你所测试的 Web 界面。可以识别出两个不同视角上的网页差异。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;pre&gt;&lt;code&gt;&amp;quot;scenarios&amp;quot;: [
  {
    &amp;quot;label&amp;quot;: &amp;quot;My Local Test&amp;quot;,
    &amp;quot;url&amp;quot;: &amp;quot;../../index.html&amp;quot;,
    &amp;quot;hideSelectors&amp;quot;: [],
    &amp;quot;removeSelectors&amp;quot;: [
    ],
    &amp;quot;selectors&amp;quot;: [
      &amp;quot;nav&amp;quot;,
      &amp;quot;.jumbotron&amp;quot;,
      &amp;quot;body .col-md-4:nth-of-type(1)&amp;quot;,
      &amp;quot;body .col-md-4:nth-of-type(2)&amp;quot;,
      &amp;quot;body .col-md-4:nth-of-type(3)&amp;quot;,
      &amp;quot;footer&amp;quot;
    ],
    &amp;quot;readyEvent&amp;quot;: null,
    &amp;quot;delay&amp;quot;: 0,
    &amp;quot;onReadyScript&amp;quot;: null,
    &amp;quot;onBeforeScript&amp;quot;: null
  }
],
&lt;/code&gt;&lt;/pre&gt;&lt;figure class=&quot;highlight http&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;vim&quot;&gt;	viff&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  咱们公司的 基于selenium的，已经废了。。。 &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;年多没更新了&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	success&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Succss &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;command&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt; tool built &lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;find&lt;/span&gt; image-based differences between website updates. Succss relies &lt;span class=&quot;keyword&quot;&gt;on&lt;/span&gt; npm &lt;span class=&quot;built_in&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; installed globally.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    http&lt;span class=&quot;variable&quot;&gt;s:&lt;/span&gt;//github.&lt;span class=&quot;keyword&quot;&gt;com&lt;/span&gt;/B2F/Succss&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  也一年没更新了..&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	phantomcss&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PhantomCSS 是 CSS 回归测试工具。一个通过 PhantomJS 或者 SlimerJS 和 Resemble.js 进行自动视觉回归测试的 CasperJS 模块。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;pre&gt;&lt;code&gt;casper.
    start( url ).
    then(function(){        
// do something
        casper.click(&amp;apos;button#open-dialog&amp;apos;);        
// Take a screenshot of the UI component
        phantomcss.screenshot(&amp;apos;#the-dialog&amp;apos;, &amp;apos;a screenshot of my dialog&amp;apos;);

    });
&lt;/code&gt;&lt;/pre&gt;&lt;figure class=&quot;highlight vala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;##JavaScript验证工具&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;eslint&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;jshint&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;jslint&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;三者比较的文章&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;https:&lt;span class=&quot;comment&quot;&gt;//www.sitepoint.com/comparison-javascript-linting-tools/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;## 前端mock工具&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Mock.js&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; Mockjs是个能够拦截页面ajax请求并模拟返回数据的小工具，借助Mockjs，前端开发中在后台测试接口还没有给的时候就可以自己拦截请求模拟数据进行愉快的开发了，所以只要制定好了协议，前后端分离开发的成本可以降到基本为&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;，也不需要联调工具了。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sinon.js&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;为Javascript提供独立的spies，stubs和mocks。没有任何依赖，可以与任何单元测试框架协同工作。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;## api测试工具&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SuperTest&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;基于SuperAgent ，提供对HTTP测试的高度抽象.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;能嵌入各类测试框架，提供语义良好的断言.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;pre&gt;&lt;code&gt;var app = require(&amp;apos;../app&amp;apos;);
var request = require(&amp;apos;supertest&amp;apos;);

describe(&amp;apos;router testing&amp;apos;, function () {
    it(&amp;apos;site root response&amp;apos;, function (done) {
        request(app)
            .get(&amp;apos;/&amp;apos;)
            .expect(&amp;apos;Content-Type&amp;apos;, &amp;apos;text/html; charset=utf-8&amp;apos;)
            .expect(200)
            .end(function(err, res){
                if (err) throw err;
                done();
            });
    });
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;```&lt;br&gt;利用Mocha + Chai + SuperTest就可以搭建一套 前端rest－api测试框架&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/image/front-end-tools.png&quot; alt=&quot;front-end-tools&quot;&gt;&lt;/p&gt;
&lt;p&gt;总结最近了解的前端测试的相关内容，发现前端这里真的是太庞大了，而且各种测试工具层出不穷，需要总结东西太多了，如有遗漏请大家见谅。&lt;/p&gt;

    
    </summary>
    
    
      <category term="前端测试" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>appium并发测试</title>
    <link href="http://yoursite.com/2016/05/05/appium/"/>
    <id>http://yoursite.com/2016/05/05/appium/</id>
    <published>2016-05-05T05:53:59.000Z</published>
    <updated>2016-05-24T13:05:42.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;appium__u4ECB_u7ECD&quot;&gt;&lt;a href=&quot;#appium__u4ECB_u7ECD&quot; class=&quot;headerlink&quot; title=&quot;appium 介绍&quot;&gt;&lt;/a&gt;appium 介绍&lt;/h2&gt;&lt;p&gt;Appium 是一个开源的，跨平台的自动化测试工具。 它支持模拟器（iOS，FirefoxOS，Android）和真机（iOS， Android， FirefoxOS）上的原生应用，混合应用和移动 web 应用。&lt;/p&gt;
&lt;h2 id=&quot;appium__u5DE5_u4F5C_u539F_u7406&quot;&gt;&lt;a href=&quot;#appium__u5DE5_u4F5C_u539F_u7406&quot; class=&quot;headerlink&quot; title=&quot;appium 工作原理&quot;&gt;&lt;/a&gt;appium 工作原理&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/image/mobile-test-automation-using-appium-ios-android.jpg&quot; alt=&quot;appium&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;Android&quot;&gt;&lt;a href=&quot;#Android&quot; class=&quot;headerlink&quot; title=&quot;Android&quot;&gt;&lt;/a&gt;Android&lt;/h3&gt;&lt;p&gt;在Android端，appium基于WebDriver协议，利用Bootstrap.jar，最后通过调⽤用UiAutomator的命令，实现App的自动化测试。&lt;/p&gt;
&lt;p&gt;UiAutomator测试框架是Android SDK自带的App UI自动化测试Java库。&lt;/p&gt;
&lt;p&gt;另外由于UiAutomator对H5的支持有限，appium引入了chromedriver以及safaridriver等来实现基于H5的自动化。&lt;/p&gt;
&lt;h4 id=&quot;appium__u5728android_u7AEF_u5DE5_u4F5C_u6D41&quot;&gt;&lt;a href=&quot;#appium__u5728android_u7AEF_u5DE5_u4F5C_u6D41&quot; class=&quot;headerlink&quot; title=&quot;appium 在android端工作流&quot;&gt;&lt;/a&gt;appium 在android端工作流&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;client端也就是我们 test script是我们的webdriver测试脚本。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;中间是起的Appium的服务，Appium在服务端起了一个Server（4723端口），跟selenium&lt;br&gt;Webdriver测试框架类似， Appium⽀持标准的WebDriver JSONWireProtocol。在这里提供它提供了一套REST的接口,Appium Server接收web driver client标准rest请求，解析请求内容，调⽤用对应的框架响应操作。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;appium server会把请求转发给中间件Bootstrap.jar ，它是用java写的，安装在手机上.&lt;br&gt;Bootstrap监听4724端口并接收appium 的命令，最终通过调⽤用UiAutomator的命令来实现。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;最后Bootstrap将执行的结果返回给appium server。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;appium server再将结果返回给 appium client。&lt;/p&gt;
&lt;h3 id=&quot;ios&quot;&gt;&lt;a href=&quot;#ios&quot; class=&quot;headerlink&quot; title=&quot;ios&quot;&gt;&lt;/a&gt;ios&lt;/h3&gt;&lt;p&gt;在IOS端，appium同样使⽤WebDriver的一套协议。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;与Android端测试框架不同的是，appium ios封装了apple的 Instruments框架，主要用了Instrument里的UI Automation（Apple的⾃自动化测试框架），然后在设备中注⼊入bootstrap.js进⾏行监听。&lt;/p&gt;
&lt;h4 id=&quot;appium__u5728ios_u7AEF_u5DE5_u4F5C_u6D41&quot;&gt;&lt;a href=&quot;#appium__u5728ios_u7AEF_u5DE5_u4F5C_u6D41&quot; class=&quot;headerlink&quot; title=&quot;appium 在ios端工作流&quot;&gt;&lt;/a&gt;appium 在ios端工作流&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;client端 依然是 test script是我们的webdriver测试脚本。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;中间是起的Appium的服务，Appium在服务端起了一个Server（4723端口），跟selenium&lt;br&gt;Webdriver测试框架类似， Appium⽀持标准的WebDriver JSONWireProtocol。在这里提供它提供了一套REST的接口,Appium Server接收web driver client标准rest请求，解析请求内容，调⽤用对应的框架响应操作。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;appium server调用instruments.js 启动⼀一个socket server，同时分出一个⼦子进程运⾏instruments.app，将bootstrap.js（一个UIAutomation脚本）注⼊入到device⽤于和外界进行交互&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;最后Bootstrap.js将执行的结果返回给appium server&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;appium server再将结果返回给 appium client。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;所以我们可以看到android与ios区别在于appium 将请求转发到bootstrap.js或者bootstrap.jar.然后由bootstrap 驱动UIAutomation和UiAutomator去devices上完成具体的动作。&lt;/p&gt;
&lt;h2 id=&quot;appium__u5E76_u53D1&quot;&gt;&lt;a href=&quot;#appium__u5E76_u53D1&quot; class=&quot;headerlink&quot; title=&quot;appium 并发&quot;&gt;&lt;/a&gt;appium 并发&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/image/appium 并发测试.png&quot; alt=&quot;appium bingfa&quot;&gt;&lt;/p&gt;
&lt;p&gt;关于appium并发，我将之分为2类，第一类单机并发。第二类基于selenium grid 多节点并发测试,也可称之为云测。&lt;/p&gt;
&lt;h3 id=&quot;appium__u5355_u673A_u5E76_u53D1&quot;&gt;&lt;a href=&quot;#appium__u5355_u673A_u5E76_u53D1&quot; class=&quot;headerlink&quot; title=&quot;appium 单机并发&quot;&gt;&lt;/a&gt;appium 单机并发&lt;/h3&gt;&lt;p&gt;Android并发测试&lt;br&gt;Appium提供了在一台设备上启动多个Android会话的方案。&lt;/p&gt;
&lt;p&gt;appium -p 4492 -bp 2251 -U 32456&lt;/p&gt;
&lt;p&gt;启动多个Android会话的重要指令包括：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;指令&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;功能&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;-p&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Appium的主要端口&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-U&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;设备id&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-bp&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Appium bootstrap端口&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–chromedriver-port&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;chromedriver端口（当使用了webviews或者chrome）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–selendroid-port&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;selendroid端口（当使用了selendroid）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;iOS并发测试&lt;/p&gt;
&lt;p&gt;不幸的是，IOS不能进行本地并发测试。跟Android不一样，IOS在同一时间只能启动一个版本的模拟器来运行多个测试。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;总结:&lt;br&gt;单机并发目前只能在android实现，且必须启动n个appium server 对应不同devices，这里devices可以是真机或模拟器。但是必须保证端口后没有重复使用。&lt;br&gt;接下来工作就是利用测试框架(testng,jasmine,rspec,cucumber等)将测试分发到不同appium server上。&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&quot;u4EE3_u7801_u793A_u4F8B&quot;&gt;&lt;a href=&quot;#u4EE3_u7801_u793A_u4F8B&quot; class=&quot;headerlink&quot; title=&quot;代码示例&quot;&gt;&lt;/a&gt;代码示例&lt;/h4&gt;&lt;p&gt; &lt;a href=&quot;https://github.com/saikrishna321/AppiumTestDistribution&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;代码解析：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;首先让我们来看下代码中的AppiumParallelTest这个类，他们先判断操作系统，并获取操作系统上连接的devices。&lt;br&gt;利用AndroidDeviceConfiguration.java 与 IOSDeviceConfiguration.java 中的getIOSUDID，getDevices方法分别获取真机与模拟器的id.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;然后利用startAppiumServer方法启动appium server, 利用appiumServerForAndroid()或者appiumServerForIOS().&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;aa&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;appium_grid__u5206_u5E03_u5F0F_u5E76_u53D1&quot;&gt;&lt;a href=&quot;#appium_grid__u5206_u5E03_u5F0F_u5E76_u53D1&quot; class=&quot;headerlink&quot; title=&quot;appium grid 分布式并发&quot;&gt;&lt;/a&gt;appium grid 分布式并发&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;start selenium grid sever&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;java -jar selenium-server-standalone-&lt;span class=&quot;number&quot;&gt;2.47&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.1&lt;/span&gt;.jar -port &lt;span class=&quot;number&quot;&gt;4444&lt;/span&gt; -role hub   -hub http:&lt;span class=&quot;comment&quot;&gt;//192.168.199.140:4444/grid/registe&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Registered appium server as the grid node&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;appium&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;--nodeconfig&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;appium_node_S3&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.json&lt;/span&gt;  &lt;span class=&quot;tag&quot;&gt;-p&lt;/span&gt; 4823  &lt;span class=&quot;tag&quot;&gt;-bp&lt;/span&gt; 3356 &lt;span class=&quot;tag&quot;&gt;-U&lt;/span&gt; &quot;192&lt;span class=&quot;class&quot;&gt;.168&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.99&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.104&lt;/span&gt;&lt;span class=&quot;pseudo&quot;&gt;:5555&quot;&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;--chromedriver-port&lt;/span&gt; 4738&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Configure the test script,run the tests&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@BeforeTest&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Parameters&lt;/span&gt;(&amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;deviceName&quot;&lt;/span&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setUp&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String deviceName)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        capabilities.setCapability(&lt;span class=&quot;string&quot;&gt;&quot;deviceName&quot;&lt;/span&gt;,deviceName);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        capabilities.setCapability(&lt;span class=&quot;string&quot;&gt;&quot;platformVersion&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;5.0&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        capabilities.setCapability(&lt;span class=&quot;string&quot;&gt;&quot;app&quot;&lt;/span&gt;, getApp(&lt;span class=&quot;string&quot;&gt;&quot;ContactManager.apk&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        setUpAndroidDriver();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;GRID_NODE_CONFIGURATION_EXAMPLE_JSON_FILE&quot;&gt;&lt;a href=&quot;#GRID_NODE_CONFIGURATION_EXAMPLE_JSON_FILE&quot; class=&quot;headerlink&quot; title=&quot;GRID NODE CONFIGURATION EXAMPLE JSON FILE&quot;&gt;&lt;/a&gt;GRID NODE CONFIGURATION EXAMPLE JSON FILE&lt;/h4&gt;&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;&lt;span class=&quot;attribute&quot;&gt;capabilities&lt;/span&gt;&quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;value&quot;&gt;[&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123; &quot;&lt;span class=&quot;attribute&quot;&gt;deviceName&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;192.168.56.101:5555&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &quot;&lt;span class=&quot;attribute&quot;&gt;browserName&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;e.g._iPhone5_or_iPad4&amp;gt;&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &quot;&lt;span class=&quot;attribute&quot;&gt;version&lt;/span&gt;&quot;:&lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;version_of_iOS_e.g._7.1&amp;gt;&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &quot;&lt;span class=&quot;attribute&quot;&gt;maxInstances&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &quot;&lt;span class=&quot;attribute&quot;&gt;platform&lt;/span&gt;&quot;:&lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;platform_e.g._MAC_or_ANDROID&amp;gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      ]&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;&lt;span class=&quot;attribute&quot;&gt;configuration&lt;/span&gt;&quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;value&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;&lt;span class=&quot;attribute&quot;&gt;cleanUpCycle&lt;/span&gt;&quot;:&lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;number&quot;&gt;2000&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;&lt;span class=&quot;attribute&quot;&gt;timeout&lt;/span&gt;&quot;:&lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;number&quot;&gt;30000&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;&lt;span class=&quot;attribute&quot;&gt;proxy&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;org.openqa.grid.selenium.proxy.DefaultRemoteProxy&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;&lt;span class=&quot;attribute&quot;&gt;url&lt;/span&gt;&quot;:&lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;http://&amp;lt;host_name_appium_server_or_ip-address_appium_server&amp;gt;:&amp;lt;appium_port&amp;gt;/wd/hub&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;&lt;span class=&quot;attribute&quot;&gt;host&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&amp;lt;host_name_appium_server_or_ip-address_appium_server&amp;gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;&lt;span class=&quot;attribute&quot;&gt;port&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&amp;lt;appium_port&amp;gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;&lt;span class=&quot;attribute&quot;&gt;maxSession&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;&lt;span class=&quot;attribute&quot;&gt;register&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;&lt;span class=&quot;attribute&quot;&gt;registerCycle&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;number&quot;&gt;5000&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;&lt;span class=&quot;attribute&quot;&gt;hubPort&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&amp;lt;grid_port&amp;gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;&lt;span class=&quot;attribute&quot;&gt;hubHost&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;Grid_host_name_or_grid_ip-address&amp;gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;p&gt;未完待续&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;appium__u4ECB_u7ECD&quot;&gt;&lt;a href=&quot;#appium__u4ECB_u7ECD&quot; class=&quot;headerlink&quot; title=&quot;appium 介绍&quot;&gt;&lt;/a&gt;appium 介绍&lt;/h2&gt;&lt;p&gt;Appium 是一个开源的，跨平台的自动化测
    
    </summary>
    
    
      <category term="appium, mobile testing" scheme="http://yoursite.com/tags/appium-mobile-testing/"/>
    
  </entry>
  
  <entry>
    <title>前端性能分析优化</title>
    <link href="http://yoursite.com/2016/02/23/%E5%89%8D%E7%AB%AF%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90%E4%BC%98%E5%8C%96/"/>
    <id>http://yoursite.com/2016/02/23/前端性能分析优化/</id>
    <published>2016-02-23T13:05:28.000Z</published>
    <updated>2016-02-24T03:10:23.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;u5206_u6790_u95EE_u9898&quot;&gt;&lt;a href=&quot;#u5206_u6790_u95EE_u9898&quot; class=&quot;headerlink&quot; title=&quot;分析问题&quot;&gt;&lt;/a&gt;分析问题&lt;/h2&gt;&lt;p&gt;我们并不仅仅关注页面资源的解析和展示响应时间，而是要关注总时间；我们进行web前端性能测试的目的是计算出包含页面渲染、网络传输以及服务器端解析等综合因素在内的加载时间等指标，对该页面性能进行评估分析，找出影响性能的主要因素和瓶颈，并在此结果的基础上，给出一定的优化建议和解决方案，从而提升用户体验。&lt;/p&gt;
&lt;p&gt; 根据雅虎团队经验：网站页面性能优化的34条黄金守则，我们逐条分析。&lt;/p&gt;
&lt;p&gt; &lt;strong&gt;性能黄金法则&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;只有10%-20%的最终用户响应时间花在接收请求的HTML文档上，剩下的80%-90%时间花在HTML文档所引用的所有组件(图片，script，css，flash等等)进行的HTTP请求上。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;尽量减少HTTP请求次数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;合并文件.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;例如将项目中用的资源文件合并。所有的CSS文件都放入一个样式表中.或者将js文件合并压缩&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;利用gulp,grunt,webpack等构建工具将项目资源文件整合&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;利用CSS Sprites 减少图像请求.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;通过使用合并图片，通过指定css的backgroud-image和backgroud-position来显示元素。&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;启用浏览器缓存&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;要利用浏览器缓存存储可缓存的资源&lt;/p&gt;
&lt;p&gt;&lt;code&gt;在HTTP标头中为静态资源设置有效期或最长存在时间，可指示浏览器从本地磁盘中加载以前下载的资源而不是从网络中加载。&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;减少DNS查找&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;DNS缓存&lt;/p&gt;
&lt;p&gt;&lt;code&gt;当客户端的DNS缓存为空时，DNS查找的数量与Web页面中唯一主机名的数量相等。减少唯一主机名的数量就可以减少DNS查找的数量。&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用内容分发网络&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;页面静态化,取决于发布系统&lt;/p&gt;
&lt;p&gt;&lt;code&gt;按页面内容划分域名，在合适的资源服务器上存放文件&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;避免404错误&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;避免内部无效的链接&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;避免重定向&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;压缩组件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;精简Javascript和Css&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;尽量缩减页面大小&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;页面必须小于150K(不含图片）&lt;/p&gt;
&lt;p&gt;a) 静态文件是否gzip&lt;/p&gt;
&lt;p&gt;b) 图片是否压缩优化过&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;预处理&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;浏览器空闲时请求将来可能会用到的页面内容&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;无条件加载：触发onload事件时，直接加载额外的页面内容&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;有预期的加载：载入重新设计过的页面时使用预加载。&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;移除重复脚本&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使iframe的数量最小&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;异步加载&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;js 开发规范&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;代码逻辑分层&lt;/li&gt;
&lt;li&gt;避免全局变量&lt;/li&gt;
&lt;li&gt;便于多人协作开发&lt;/li&gt;
&lt;li&gt;各部分代码模块化，可以按需加载 利用requirejs和seajs等模块化工具加载&lt;/li&gt;
&lt;li&gt;保持全局变量的清洁&lt;/li&gt;
&lt;li&gt;可进行单元测试&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;参考&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/li0803/archive/2009/09/20/1570581.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;yahoo前端性能优化指南中文版&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.yahoo.com/performance/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;yahoo前端性能优化指南&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;u5206_u6790_u95EE_u9898&quot;&gt;&lt;a href=&quot;#u5206_u6790_u95EE_u9898&quot; class=&quot;headerlink&quot; title=&quot;分析问题&quot;&gt;&lt;/a&gt;分析问题&lt;/h2&gt;&lt;p&gt;我们并不仅仅关注页面资源的解析和展示响应时间，而
    
    </summary>
    
    
      <category term="性能测试" scheme="http://yoursite.com/tags/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>前端性能测试之分析篇</title>
    <link href="http://yoursite.com/2016/02/23/%E5%89%8D%E7%AB%AF%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E4%B9%8B%E5%88%86%E6%9E%90%E7%AF%87/"/>
    <id>http://yoursite.com/2016/02/23/前端性能测试之分析篇/</id>
    <published>2016-02-23T03:31:51.000Z</published>
    <updated>2016-02-23T07:43:46.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;u5F15_u8A00&quot;&gt;&lt;a href=&quot;#u5F15_u8A00&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h2&gt;&lt;p&gt;前一章，我们讲了browser的工作原理,那么怎么样才能让了解整个主站前端的性能呢？监控！ 对，是的，我们可以利用各种工作对我们的website进行实时的监控,目前监控的方式有两种。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;优点&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;缺点&lt;/th&gt;
&lt;th style=&quot;text-align:right&quot;&gt;示例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;非侵入式&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;指标齐全、客户端主动监测、竞品监控&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;无法知道性能影响用户数、采样少容易失真、无法监控复杂应用与细分功能&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;Pagespeed、yslow、PhantomJS、webpagetest、sitespeedio&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;侵入式&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;真实海量用户数据、能监控复杂应用与业务功能、用户点击与区域渲染&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;需插入脚本统计、网络指标不全、无法监控竞品&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;new relic、Google analyse、oneapm&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&quot;u524D_u7AEF_u6027_u80FD_u5206_u6790_u5DE5_u5177&quot;&gt;&lt;a href=&quot;#u524D_u7AEF_u6027_u80FD_u5206_u6790_u5DE5_u5177&quot; class=&quot;headerlink&quot; title=&quot;前端性能分析工具&quot;&gt;&lt;/a&gt;前端性能分析工具&lt;/h2&gt;&lt;p&gt;那有哪些简易便利的工具能帮助我们更好的进行测试呢？&lt;br&gt;ok，工具集锦来临。&lt;/p&gt;
&lt;h3 id=&quot;u6D4F_u89C8_u5668_u63D2_u4EF6_u7C7B&quot;&gt;&lt;a href=&quot;#u6D4F_u89C8_u5668_u63D2_u4EF6_u7C7B&quot; class=&quot;headerlink&quot; title=&quot;浏览器插件类&quot;&gt;&lt;/a&gt;浏览器插件类&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;FireBug&lt;br&gt;它可以对页面进行调试，可以记录所有网页的访问耗时，下载的资源等&lt;/li&gt;
&lt;li&gt;Page Speed&lt;br&gt;&lt;img src=&quot;/image/pagespeed.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;li&gt;Yslow&lt;br&gt;&lt;img src=&quot;/image/yslow.gif&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;li&gt;page performance&lt;br&gt;&lt;img src=&quot;/image/page_perfor.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;li&gt;performance analyse&lt;br&gt;&lt;img src=&quot;/image/performance_alay.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;u5728_u7EBF_u7F51_u7AD9_u7C7B&quot;&gt;&lt;a href=&quot;#u5728_u7EBF_u7F51_u7AD9_u7C7B&quot; class=&quot;headerlink&quot; title=&quot;在线网站类&quot;&gt;&lt;/a&gt;在线网站类&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;WebPageTest&lt;br&gt;&lt;img src=&quot;/image/webpagespeed.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;li&gt;showslow&lt;br&gt;&lt;img src=&quot;/image/showslow.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;sitespeed.io&lt;br&gt;&lt;img src=&quot;/image/sitespeed.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;u5E73_u53F0_u7C7B&quot;&gt;&lt;a href=&quot;#u5E73_u53F0_u7C7B&quot; class=&quot;headerlink&quot; title=&quot;平台类&quot;&gt;&lt;/a&gt;平台类&lt;/h3&gt;&lt;h4 id=&quot;u6536_u8D39_u670D_u52A1_u5E73_u53F0&quot;&gt;&lt;a href=&quot;#u6536_u8D39_u670D_u52A1_u5E73_u53F0&quot; class=&quot;headerlink&quot; title=&quot;收费服务平台&quot;&gt;&lt;/a&gt;收费服务平台&lt;/h4&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;google_analytics&lt;br&gt;&lt;img src=&quot;/image/google_alay.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;new relic&lt;br&gt;&lt;img src=&quot;/image/relic1.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;li&gt;oneapm&lt;br&gt;&lt;img src=&quot;/image/oneapm.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;u5F00_u6E90_u5E73_u53F0&quot;&gt;&lt;a href=&quot;#u5F00_u6E90_u5E73_u53F0&quot; class=&quot;headerlink&quot; title=&quot;开源平台&quot;&gt;&lt;/a&gt;开源平台&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;InfluxDB + Grafana&lt;br&gt;参考文章&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href=&quot;https://ruby-china.org/topics/23470&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;InfluxDB + Grafana 快速搭建自己的 NewRelic，分析应用运行情况
&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.rittmanmead.com/2015/02/obiee-monitoring-and-diagnostics-with-influxdb-and-grafana/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;OBIEE Monitoring and Diagnostics with InfluxDB and Grafana
&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Nagios&lt;/li&gt;
&lt;li&gt;Zabbix&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;u5F15_u8A00&quot;&gt;&lt;a href=&quot;#u5F15_u8A00&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h2&gt;&lt;p&gt;前一章，我们讲了browser的工作原理,那么怎么样才能让了解整个主站前端的性能呢？监控！ 对，是的，我
    
    </summary>
    
    
      <category term="性能测试" scheme="http://yoursite.com/tags/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>前端性能测试分析</title>
    <link href="http://yoursite.com/2016/02/23/%E5%89%8D%E7%AB%AF%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E5%88%86%E6%9E%90_%E5%8E%9F%E7%90%86%E7%AF%87/"/>
    <id>http://yoursite.com/2016/02/23/前端性能测试分析_原理篇/</id>
    <published>2016-02-23T02:12:40.000Z</published>
    <updated>2016-02-23T03:28:31.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;u539F_u7406_u7BC7&quot;&gt;&lt;a href=&quot;#u539F_u7406_u7BC7&quot; class=&quot;headerlink&quot; title=&quot;原理篇&quot;&gt;&lt;/a&gt;原理篇&lt;/h1&gt;&lt;h2 id=&quot;browser_u5DE5_u4F5C_u539F_u7406&quot;&gt;&lt;a href=&quot;#browser_u5DE5_u4F5C_u539F_u7406&quot; class=&quot;headerlink&quot; title=&quot;browser工作原理&quot;&gt;&lt;/a&gt;browser工作原理&lt;/h2&gt;&lt;p&gt;web浏览器与web服务器之间通过HTTP协议进行通信的过程。所以，web C/S之间握手的协议就是HTTP协议。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/image/front_end_performance_test.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;u9875_u9762_u7684_u8BF7_u6C42_u8FC7_u7A0B&quot;&gt;&lt;a href=&quot;#u9875_u9762_u7684_u8BF7_u6C42_u8FC7_u7A0B&quot; class=&quot;headerlink&quot; title=&quot;页面的请求过程&quot;&gt;&lt;/a&gt;页面的请求过程&lt;/h2&gt;&lt;h3 id=&quot;u8BF7_u6C42_u9636_u6BB5&quot;&gt;&lt;a href=&quot;#u8BF7_u6C42_u9636_u6BB5&quot; class=&quot;headerlink&quot; title=&quot;请求阶段&quot;&gt;&lt;/a&gt;请求阶段&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;browser send url request&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;/image/LSBAWS_HTTP_request_response.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;递归寻找DNS server&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;/image/dns.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;连接目标IP并建立TCP连接&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;向目标服务器发送http请求&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;web服务器接收请求后处理&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;web服务器返回相应的结果【无效、重定向、正确页面等】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;浏览器接收返回的http内容&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;u524D_u7AEF_u89E3_u6790_u9636_u6BB5&quot;&gt;&lt;a href=&quot;#u524D_u7AEF_u89E3_u6790_u9636_u6BB5&quot; class=&quot;headerlink&quot; title=&quot;前端解析阶段&quot;&gt;&lt;/a&gt;前端解析阶段&lt;/h2&gt;&lt;p&gt;渲染引擎—通过网络获得所请求文档的内容, 解析html以构建dom树-&amp;gt;构建render树-&amp;gt;布局render树-&amp;gt;绘制render树&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;开始解析html文件，当然是自上而下，先是头部，后是body&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;当解析到头部css外部链接时，同步去下载，如果遇到外部js链接也是下载【不过js链接不建议放在头部，因为耽误页面第一展现时间】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;接着解析body部分，边解析边开始生成对应的DOM树，同时等待css文件下载&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;一旦css文件下载完毕，那么就同步去用已经生成的DOM节点+CSS去生成渲染树&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;渲染树一旦有结构模型了，接着就会同步去计算渲染树节点的布局位置&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;一旦计算出来渲染的坐标后，又同步去开始渲染&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;4-6步进行过程中如果遇到图片则跳过去渲染下面内容，等待图片下载成功后会返回来在渲染原来图片的位置&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;同7步，如果渲染过程中出现js代码调整DOM树结构的情况，暂停其它渲染，再次重新来过，从修改DOM那步开始&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;最终所有节点和资源都会渲染完成&lt;/p&gt;
&lt;h2 id=&quot;u5206_u6790_u7ED3_u675F&quot;&gt;&lt;a href=&quot;#u5206_u6790_u7ED3_u675F&quot; class=&quot;headerlink&quot; title=&quot;分析结束&quot;&gt;&lt;/a&gt;分析结束&lt;/h2&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;渲染完成后开始page的onload事件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;整个页面load完成&lt;/p&gt;
&lt;h2 id=&quot;u53C2_u8003&quot;&gt;&lt;a href=&quot;#u53C2_u8003&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/zzzaquarius/article/details/6532299&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;浏览器工作原理&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;u539F_u7406_u7BC7&quot;&gt;&lt;a href=&quot;#u539F_u7406_u7BC7&quot; class=&quot;headerlink&quot; title=&quot;原理篇&quot;&gt;&lt;/a&gt;原理篇&lt;/h1&gt;&lt;h2 id=&quot;browser_u5DE5_u4F5C_u539F_u7406&quot;&gt;
    
    </summary>
    
    
      <category term="性能测试" scheme="http://yoursite.com/tags/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>前端测试进化论2</title>
    <link href="http://yoursite.com/2016/01/26/%E5%89%8D%E7%AB%AF%E6%B5%8B%E8%AF%95%E8%BF%9B%E5%8C%96%E8%AE%BA2/"/>
    <id>http://yoursite.com/2016/01/26/前端测试进化论2/</id>
    <published>2016-01-26T10:01:07.000Z</published>
    <updated>2016-01-27T04:52:52.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;u524D_u7AEF_u6D4B_u8BD5_u8FDB_u5316_u8BBA2&quot;&gt;&lt;a href=&quot;#u524D_u7AEF_u6D4B_u8BD5_u8FDB_u5316_u8BBA2&quot; class=&quot;headerlink&quot; title=&quot;前端测试进化论2&quot;&gt;&lt;/a&gt;前端测试进化论2&lt;/h1&gt;&lt;p&gt;=============&lt;/p&gt;
&lt;p&gt;说完了，前端技术的发展史，那么对应的前端测试发展史也随之发展。&lt;/p&gt;
&lt;h2 id=&quot;u77F3_u5668_u65F6_u4EE3_u2014_u2014_u7EAF_u624B_u5DE5_u6D4B_u8BD5&quot;&gt;&lt;a href=&quot;#u77F3_u5668_u65F6_u4EE3_u2014_u2014_u7EAF_u624B_u5DE5_u6D4B_u8BD5&quot; class=&quot;headerlink&quot; title=&quot;石器时代——纯手工测试&quot;&gt;&lt;/a&gt;石器时代——纯手工测试&lt;/h2&gt;&lt;p&gt;早期的页面基本都是静态化的页面，只有几个链接或者图片，那么相对测试工作量不大，只需要我们打开页面查看加载是否正确。&lt;/p&gt;
&lt;h2 id=&quot;u94C1_u5668_u65F6_u4EE3_u2013xunit&quot;&gt;&lt;a href=&quot;#u94C1_u5668_u65F6_u4EE3_u2013xunit&quot; class=&quot;headerlink&quot; title=&quot;铁器时代–xunit&quot;&gt;&lt;/a&gt;铁器时代–xunit&lt;/h2&gt;&lt;p&gt;到了javascript时代，随着其他语言xunit 风靡天下,js 也出现了它的xunit 框架。&lt;/p&gt;
&lt;p&gt;Jsunit，以往在测试js的时候，都是以alert方式来检测错误，很不专业。&lt;/p&gt;
&lt;p&gt;2001年 jsunit 出现，让js调试称为可能。&lt;/p&gt;
&lt;p&gt;Jsunit 主要参考junit的设计，只要你会使用junit 那么jsunit 对你来说，根本不是什么事，具体使用参考&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://llying.iteye.com/blog/258605&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://llying.iteye.com/blog/258605&lt;/a&gt;&lt;br&gt;DEMO:&lt;/p&gt;
&lt;p&gt;测试代码&lt;br&gt;&lt;figure class=&quot;highlight nimrod&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!&lt;span class=&quot;type&quot;&gt;DOCTYPE&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;PUBLIC&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;HTML&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;lt;&lt;span class=&quot;type&quot;&gt;HEAD&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;&lt;span class=&quot;type&quot;&gt;TITLE&lt;/span&gt;&amp;gt;testHtml&amp;lt;/&lt;span class=&quot;type&quot;&gt;TITLE&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;lt;/&lt;span class=&quot;type&quot;&gt;HEAD&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script &lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; src=&lt;span class=&quot;string&quot;&gt;&quot;myjs.js&quot;&lt;/span&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script &lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; src=&lt;span class=&quot;string&quot;&gt;&quot;jsunit\app\jsUnitCore.js&quot;&lt;/span&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script &lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!--&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function testAdd()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt; = add(arg1,arg2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	warn(&lt;span class=&quot;string&quot;&gt;&quot;result&quot;&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	debug(&lt;span class=&quot;string&quot;&gt;&quot;result&quot;&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	info(&lt;span class=&quot;string&quot;&gt;&quot;result&quot;&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	assertEquals(&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;,&lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function testMinus()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt; = minus(arg1,arg2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	assertEquals(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function testMultiply()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt; = multiply(arg1,arg2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	assertEquals(&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;,&lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function testDivide()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt; = divide(arg1,arg2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	assertEquals(&lt;span class=&quot;string&quot;&gt;&quot;4 divide 2 is 2&quot;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function setUpPage()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	arg1 = &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	arg2 = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	setUpPageStatus = &lt;span class=&quot;string&quot;&gt;&quot;complete&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function exposeTestFunctionNames()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; tests = new &lt;span class=&quot;type&quot;&gt;Array&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	tests[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]=&lt;span class=&quot;string&quot;&gt;&quot;testAdd&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	tests[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]=&lt;span class=&quot;string&quot;&gt;&quot;testMinus&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	tests[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;]=&lt;span class=&quot;string&quot;&gt;&quot;testMultiply&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; tests;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//--&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/&lt;span class=&quot;type&quot;&gt;SCRIPT&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;lt;&lt;span class=&quot;type&quot;&gt;BODY&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;lt;/&lt;span class=&quot;type&quot;&gt;BODY&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/&lt;span class=&quot;type&quot;&gt;HTML&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;测试驱动&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;doctype&quot;&gt;&amp;lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;HTML&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;HEAD&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;TITLE&lt;/span&gt;&amp;gt;&lt;/span&gt;suit test&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;TITLE&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;HEAD&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;jsunit\app\jsUnitCore.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!--&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;suite&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; testSuite = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; top.jsUnitTestSuite();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//增加的测试页面的路径是相对于测试运行器的路径的（testRunner.html），而不是相对于当前的页面&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	testSuite.addTestPage(&lt;span class=&quot;string&quot;&gt;&quot;../mytest1.html&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//套件里还可以在包含套件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	testSuite.addTestSuite(Suite2());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; testSuite;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Suite2&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) //需要与&lt;span class=&quot;title&quot;&gt;suite&lt;/span&gt;定义在同一个页面中&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; testSuite = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; top.jsUnitTestSuite();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	testSuite.addTestPage(&lt;span class=&quot;string&quot;&gt;&quot;../mytest2.html&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; testSuite;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//--&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;SCRIPT&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;BODY&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;BODY&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;HTML&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;http://www.jsunit.net/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.jsunit.net/&lt;/a&gt; &lt;/p&gt;
&lt;h2 id=&quot;u5DE5_u4E1A_u9769_u547D_u2013ajax_u6D41_u884C&quot;&gt;&lt;a href=&quot;#u5DE5_u4E1A_u9769_u547D_u2013ajax_u6D41_u884C&quot; class=&quot;headerlink&quot; title=&quot;工业革命–ajax流行&quot;&gt;&lt;/a&gt;工业革命–ajax流行&lt;/h2&gt;&lt;p&gt;随着ajax的流行，jquery框架在前端开发中的普及，让开发者看到了前端的新纪元，&lt;br&gt;jquery 团队也为广大开发人员开发了Qunit.QUnit 是一款强大而且容易使用的JavaScript 测试框架，它被用于jQuery 与其插件的测试，同时它也同样可以测试普通的JavaScript 代码.&lt;/p&gt;
&lt;h3 id=&quot;TDD_u7684_u65F6_u4EE3_u6765_u4E34_QUnit_u6846_u67B6_u7248_u672C&quot;&gt;&lt;a href=&quot;#TDD_u7684_u65F6_u4EE3_u6765_u4E34_QUnit_u6846_u67B6_u7248_u672C&quot; class=&quot;headerlink&quot; title=&quot;TDD的时代来临 QUnit框架版本&quot;&gt;&lt;/a&gt;TDD的时代来临 QUnit框架版本&lt;/h3&gt;&lt;p&gt;将要被测试的代码需要添加到myProject.js中，并且你的测试用例应该插入到myTest.js。要运行这些测试，只需在一个浏览器中打开这个html文件。现在需要写一些测试用例了。&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;doctype&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;QUnit Test Suite&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;http://github.com/jquery/qunit/raw/master/qunit/qunit.css&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;mce_href&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;http://github.com/jquery/qunit/raw/master/qunit/qunit.css&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;text/css&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;media&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;screen&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;mce:script&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;http://github.com/jquery/qunit/raw/master/qunit/qunit.js&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;mce_src&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;http://github.com/jquery/qunit/raw/master/qunit/qunit.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;mce:script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- Your project file goes here --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;mce:script&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;myProject.js&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;mce_src&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;myProject.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;mce:script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- Your tests file goes here --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;mce:script&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;myTests.js&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;mce_src&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;myTests.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;mce:script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;h1&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;qunit-header&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;QUnit Test Suite&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;h2&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;qunit-banner&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;h2&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;qunit-testrunner-toolbar&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;h2&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;qunit-userAgent&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;h2&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;ol&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;qunit-tests&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;ol&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;参考&lt;br&gt;&lt;a href=&quot;http://www.cnblogs.com/nuaalfm/archive/2010/02/26/1674235.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cnblogs.com/nuaalfm/archive/2010/02/26/1674235.html&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://qunitjs.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://qunitjs.com/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;u73B0_u4EE3_u5316_u6280_u672F-BBD&quot;&gt;&lt;a href=&quot;#u73B0_u4EE3_u5316_u6280_u672F-BBD&quot; class=&quot;headerlink&quot; title=&quot;现代化技术-BBD&quot;&gt;&lt;/a&gt;现代化技术-BBD&lt;/h2&gt;&lt;p&gt;紧着angluar react 等框架大行其道的同时，bdd也在开发中兴起，基于bdd的测试框架开始在前端如雨后春笋般冒出,jasmine,mocha,karma都是其中的代表，但是各得其道，到底谁好，没惹能说得清楚。但google 在前端测试的贡献，绝对是业界良心。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/image/JASMINE.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;a href=&quot;http://jasmine.github.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://jasmine.github.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/image/KARMA.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://karma-runner.github.io/0.13/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://karma-runner.github.io/0.13/index.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/image/MOCHA.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://mochajs.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://mochajs.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这些框架本人就不举列子了，会在以后的篇章里面一一介绍。&lt;/p&gt;
&lt;h2 id=&quot;u524D_u7AEF_u7684_u672A_u6765&quot;&gt;&lt;a href=&quot;#u524D_u7AEF_u7684_u672A_u6765&quot; class=&quot;headerlink&quot; title=&quot;前端的未来&quot;&gt;&lt;/a&gt;前端的未来&lt;/h2&gt;&lt;p&gt;未来，我希望有一种框架能够解救苦逼的qa,简单的语法与api，使得我们能够处理所有前端框架而不用考虑控件问题，良好的性能，支持并发，跑ui和单元测试都在秒级，当然越快越好，最好能够自动更新ui自动化中页面对象的路径等等。也许只是个梦。Qa 还需努力。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;u524D_u7AEF_u6D4B_u8BD5_u8FDB_u5316_u8BBA2&quot;&gt;&lt;a href=&quot;#u524D_u7AEF_u6D4B_u8BD5_u8FDB_u5316_u8BBA2&quot; class=&quot;headerlink&quot; title=&quot;前端测试进化论2
    
    </summary>
    
    
  </entry>
  
</feed>
